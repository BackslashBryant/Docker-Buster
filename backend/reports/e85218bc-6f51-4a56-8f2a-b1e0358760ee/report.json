{
  "report_id": "e85218bc-6f51-4a56-8f2a-b1e0358760ee",
  "api_version": "1.0",
  "generated_at": "2025-05-13T15:05:35.317024Z",
  "image": {
    "name": "nginx:1.19",
    "digest": "sha256:f0b8a9a541369db503ff3b9d4fa6de561b300f7363920c2bff4577c6c24c5cf6",
    "size": 133088455,
    "os": "linux",
    "architecture": "amd64"
  },
  "executive_summary": {
    "risk_score": 10,
    "risk_level": "CRITICAL",
    "cve_count": 507,
    "cve_counts": {
      "Critical": 51,
      "High": 183,
      "Medium": 231,
      "Low": 42
    },
    "license_violations": 0,
    "secrets_found": false,
    "components_count": 603
  },
  "components": [
    {
      "name": "adduser",
      "version": "3.118",
      "type": "library",
      "origin": "pkg:deb/debian/adduser@3.118?arch=all&distro=debian-10",
      "maintainer": null,
      "licenses": [
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "apt",
      "version": "1.8.2.3",
      "type": "library",
      "origin": "pkg:deb/debian/apt@1.8.2.3?arch=amd64&distro=debian-10",
      "maintainer": null,
      "licenses": [
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2011-3374",
          "severity": "Negligible",
          "description": "It was found that apt-key in apt, all versions, do not correctly validate gpg keys with the master keyring, leading to a potential man-in-the-middle attack.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "base-files",
      "version": "10.3+deb10u9",
      "type": "library",
      "origin": "pkg:deb/debian/base-files@10.3%2Bdeb10u9?arch=amd64&distro=debian-10",
      "maintainer": null,
      "licenses": [
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "base-passwd",
      "version": "3.5.46",
      "type": "library",
      "origin": "pkg:deb/debian/base-passwd@3.5.46?arch=amd64&distro=debian-10",
      "maintainer": null,
      "licenses": [
        null,
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "bash",
      "version": "5.0-4",
      "type": "library",
      "origin": "pkg:deb/debian/bash@5.0-4?arch=amd64&distro=debian-10",
      "maintainer": null,
      "licenses": [
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2019-18276",
          "severity": "Negligible",
          "description": "An issue was discovered in disable_priv_mode in shell.c in GNU Bash through 5.0 patch 11. By default, if Bash is run with its effective UID not equal to its real UID, it will drop privileges by setting its effective UID to its real UID. However, it does so incorrectly. On Linux and other systems that support \"saved UID\" functionality, the saved UID is not dropped. An attacker with command execution in the shell can use \"enable -f\" for runtime loading of a new builtin, which can be a shared object that calls setuid() and therefore regains privileges. However, binaries running with an effective UID of 0 are unaffected.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "bash",
      "version": "5.0.3",
      "type": "application",
      "origin": "pkg:generic/bash@5.0.3",
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": [
        {
          "id": "CVE-2019-18276",
          "severity": "Negligible",
          "description": "An issue was discovered in disable_priv_mode in shell.c in GNU Bash through 5.0 patch 11. By default, if Bash is run with its effective UID not equal to its real UID, it will drop privileges by setting its effective UID to its real UID. However, it does so incorrectly. On Linux and other systems that support \"saved UID\" functionality, the saved UID is not dropped. An attacker with command execution in the shell can use \"enable -f\" for runtime loading of a new builtin, which can be a shared object that calls setuid() and therefore regains privileges. However, binaries running with an effective UID of 0 are unaffected.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "bsdutils",
      "version": "1:2.33.1-0.1",
      "type": "library",
      "origin": "pkg:deb/debian/bsdutils@1%3A2.33.1-0.1?arch=amd64&distro=debian-10&upstream=util-linux%402.33.1-0.1",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2021-37600",
          "severity": "Medium",
          "description": "An integer overflow in util-linux through 2.37.1 can potentially cause a buffer overflow if an attacker were able to use system resources in a way that leads to a large number in the /proc/sysvipc/sem file. NOTE: this is unexploitable in GNU C Library environments, and possibly in all realistic environments.",
          "fix_version": "2.33.1-0.1+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2024-28085",
          "severity": "Low",
          "description": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
          "fix_version": "2.33.1-0.1+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2022-0563",
          "severity": "Negligible",
          "description": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "ca-certificates",
      "version": "20200601~deb10u2",
      "type": "library",
      "origin": "pkg:deb/debian/ca-certificates@20200601~deb10u2?arch=all&distro=debian-10",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "coreutils",
      "version": "8.30-3",
      "type": "library",
      "origin": "pkg:deb/debian/coreutils@8.30-3?arch=amd64&distro=debian-10",
      "maintainer": null,
      "licenses": [
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2016-2781",
          "severity": "Low",
          "description": "chroot in GNU coreutils, when used with --userspec, allows local users to escape to the parent session via a crafted TIOCSTI ioctl call, which pushes characters to the terminal's input buffer.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2017-18018",
          "severity": "Negligible",
          "description": "In GNU Coreutils through 8.29, chown-core.c in chown and chgrp does not prevent replacement of a plain file with a symlink during use of the POSIX \"-R -L\" options, which allows local users to modify the ownership of arbitrary files by leveraging a race condition.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "curl",
      "version": "7.64.0",
      "type": "application",
      "origin": "pkg:generic/curl@7.64.0",
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": [
        {
          "id": "CVE-2019-5481",
          "severity": "Critical",
          "description": "Double-free vulnerability in the FTP-kerberos code in cURL 7.52.0 to 7.65.3.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2019-5482",
          "severity": "Critical",
          "description": "Heap buffer overflow in the TFTP protocol handler in cURL 7.19.4 to 7.65.3.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2022-32221",
          "severity": "Critical",
          "description": "When doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously was used to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the subsequent `POST` request. The problem exists in the logic for a reused handle when it is changed from a PUT to a POST.",
          "fix_version": "7.86.0",
          "references": []
        },
        {
          "id": "CVE-2020-8169",
          "severity": "High",
          "description": "curl 7.62.0 through 7.70.0 is vulnerable to an information disclosure vulnerability that can lead to a partial password being leaked over the network and to the DNS server(s).",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2020-8177",
          "severity": "High",
          "description": "curl 7.20.0 through 7.70.0 is vulnerable to improper restriction of names for files and other resources that can lead too overwriting a local file when the -J flag is used.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2021-22926",
          "severity": "High",
          "description": "libcurl-using applications can ask for a specific client certificate to be used in a transfer. This is done with the `CURLOPT_SSLCERT` option (`--cert` with the command line tool).When libcurl is built to use the macOS native TLS library Secure Transport, an application can ask for the client certificate by name or with a file name - using the same option. If the name exists as a file, it will be used instead of by name.If the appliction runs with a current working directory that is writable by other users (like `/tmp`), a malicious user can create a file name with the same name as the app wants to use by name, and thereby trick the application to use the file based cert instead of the one referred to by name making libcurl send the wrong client certificate in the TLS connection handshake.",
          "fix_version": "7.78.0",
          "references": []
        },
        {
          "id": "CVE-2021-22946",
          "severity": "High",
          "description": "A user can tell curl >= 7.20.0 and <= 7.78.0 to require a successful upgrade to TLS when speaking to an IMAP, POP3 or FTP server (`--ssl-reqd` on the command line or`CURLOPT_USE_SSL` set to `CURLUSESSL_CONTROL` or `CURLUSESSL_ALL` withlibcurl). This requirement could be bypassed if the server would return a properly crafted but perfectly legitimate response.This flaw would then make curl silently continue its operations **withoutTLS** contrary to the instructions and expectations, exposing possibly sensitive data in clear text over the network.",
          "fix_version": "7.79.0",
          "references": []
        },
        {
          "id": "CVE-2022-22576",
          "severity": "High",
          "description": "An improper authentication vulnerability exists in curl 7.33.0 to and including 7.82.0 which might allow reuse OAUTH2-authenticated connections without properly making sure that the connection was authenticated with the same credentials as set for this transfer. This affects SASL-enabled protocols: SMPTP(S), IMAP(S), POP3(S) and LDAP(S) (openldap only).",
          "fix_version": "7.83.0",
          "references": []
        },
        {
          "id": "CVE-2022-27781",
          "severity": "High",
          "description": "libcurl provides the `CURLOPT_CERTINFO` option to allow applications torequest details to be returned about a server's certificate chain.Due to an erroneous function, a malicious server could make libcurl built withNSS get stuck in a never-ending busy-loop when trying to retrieve thatinformation.",
          "fix_version": "7.83.1",
          "references": []
        },
        {
          "id": "CVE-2022-27782",
          "severity": "High",
          "description": "libcurl would reuse a previously created connection even when a TLS or SSHrelated option had been changed that should have prohibited reuse.libcurl keeps previously used connections in a connection pool for subsequenttransfers to reuse if one of them matches the setup. However, several TLS andSSH settings were left out from the configuration match checks, making themmatch too easily.",
          "fix_version": "7.83.1",
          "references": []
        },
        {
          "id": "CVE-2023-27533",
          "severity": "High",
          "description": "A vulnerability in input validation exists in curl <8.0 during communication using the TELNET protocol may allow an attacker to pass on maliciously crafted user name and \"telnet options\" during server negotiation. The lack of proper input scrubbing allows an attacker to send content or perform option negotiation without the application's intent. This vulnerability could be exploited if an application allows user input, thereby enabling attackers to execute arbitrary code on the system.",
          "fix_version": "8.0.0",
          "references": []
        },
        {
          "id": "CVE-2023-27534",
          "severity": "High",
          "description": "A path traversal vulnerability exists in curl <8.0.0 SFTP implementation causes the tilde (~) character to be wrongly replaced when used as a prefix in the first path element, in addition to its intended use as the first element to indicate a path relative to the user's home directory. Attackers can exploit this flaw to bypass filtering or execute arbitrary code by crafting a path like /~2/foo while accessing a server with a specific user.",
          "fix_version": "8.0.0",
          "references": []
        },
        {
          "id": "CVE-2023-28319",
          "severity": "High",
          "description": "A use after free vulnerability exists in curl <v8.1.0 in the way libcurl offers a feature to verify an SSH server's public key using a SHA 256 hash. When this check fails, libcurl would free the memory for the fingerprint before it returns an error message containing the (now freed) hash. This flaw risks inserting sensitive heap-based data into the error message that might be shown to users or otherwise get leaked and revealed.",
          "fix_version": "8.1.0",
          "references": []
        },
        {
          "id": "CVE-2024-2398",
          "severity": "High",
          "description": "When an application tells libcurl it wants to allow HTTP/2 server push, and the amount of received headers for the push surpasses the maximum allowed limit (1000), libcurl aborts the server push. When aborting, libcurl inadvertently does not free all the previously allocated headers and instead leaks the memory.  Further, this error condition fails silently and is therefore not easily detected by an application.",
          "fix_version": "8.7.0",
          "references": []
        },
        {
          "id": "CVE-2025-0725",
          "severity": "High",
          "description": "When libcurl is asked to perform automatic gzip decompression of\ncontent-encoded HTTP responses with the `CURLOPT_ACCEPT_ENCODING` option,\n**using zlib 1.2.0.3 or older**, an attacker-controlled integer overflow would\nmake libcurl perform a buffer overflow.",
          "fix_version": "8.12.0",
          "references": []
        },
        {
          "id": "CVE-2021-22897",
          "severity": "Medium",
          "description": "curl 7.61.0 through 7.76.1 suffers from exposure of data element to wrong session due to a mistake in the code for CURLOPT_SSL_CIPHER_LIST when libcurl is built to use the Schannel TLS library. The selected cipher set was stored in a single \"static\" variable in the library, which has the surprising side-effect that if an application sets up multiple concurrent transfers, the last one that sets the ciphers will accidentally control the set used by all transfers. In a worst-case scenario, this weakens transport security significantly.",
          "fix_version": "7.77.0",
          "references": []
        },
        {
          "id": "CVE-2021-22922",
          "severity": "Medium",
          "description": "When curl is instructed to download content using the metalink feature, thecontents is verified against a hash provided in the metalink XML file.The metalink XML file points out to the client how to get the same contentfrom a set of different URLs, potentially hosted by different servers and theclient can then download the file from one or several of them. In a serial orparallel manner.If one of the servers hosting the contents has been breached and the contentsof the specific file on that server is replaced with a modified payload, curlshould detect this when the hash of the file mismatches after a completeddownload. It should remove the contents and instead try getting the contentsfrom another URL. This is not done, and instead such a hash mismatch is onlymentioned in text and the potentially malicious content is kept in the file ondisk.",
          "fix_version": "7.78.0",
          "references": []
        },
        {
          "id": "CVE-2021-22923",
          "severity": "Medium",
          "description": "When curl is instructed to get content using the metalink feature, and a user name and password are used to download the metalink XML file, those same credentials are then subsequently passed on to each of the servers from which curl will download or try to download the contents from. Often contrary to the user's expectations and intentions and without telling the user it happened.",
          "fix_version": "7.78.0",
          "references": []
        },
        {
          "id": "CVE-2021-22925",
          "severity": "Medium",
          "description": "curl supports the `-t` command line option, known as `CURLOPT_TELNETOPTIONS`in libcurl. This rarely used option is used to send variable=content pairs toTELNET servers.Due to flaw in the option parser for sending `NEW_ENV` variables, libcurlcould be made to pass on uninitialized data from a stack based buffer to theserver. Therefore potentially revealing sensitive internal information to theserver using a clear-text network protocol.This could happen because curl did not call and use sscanf() correctly whenparsing the string provided by the application.",
          "fix_version": "7.78.0",
          "references": []
        },
        {
          "id": "CVE-2021-22947",
          "severity": "Medium",
          "description": "When curl >= 7.20.0 and <= 7.78.0 connects to an IMAP or POP3 server to retrieve data using STARTTLS to upgrade to TLS security, the server can respond and send back multiple responses at once that curl caches. curl would then upgrade to TLS but not flush the in-queue of cached responses but instead continue using and trustingthe responses it got *before* the TLS handshake as if they were authenticated.Using this flaw, it allows a Man-In-The-Middle attacker to first inject the fake responses, then pass-through the TLS traffic from the legitimate server and trick curl into sending data back to the user thinking the attacker's injected data comes from the TLS-protected server.",
          "fix_version": "7.79.0",
          "references": []
        },
        {
          "id": "CVE-2022-27774",
          "severity": "Medium",
          "description": "An insufficiently protected credentials vulnerability exists in curl 4.9 to and include curl 7.82.0 are affected that could allow an attacker to extract credentials when follows HTTP(S) redirects is used with authentication could leak credentials to other services that exist on different protocols or port numbers.",
          "fix_version": "7.83.0",
          "references": []
        },
        {
          "id": "CVE-2022-27776",
          "severity": "Medium",
          "description": "A insufficiently protected credentials vulnerability in fixed in curl 7.83.0 might leak authentication or cookie header data on HTTP redirects to the same host but another port number.",
          "fix_version": "7.83.0",
          "references": []
        },
        {
          "id": "CVE-2022-32206",
          "severity": "Medium",
          "description": "curl < 7.84.0 supports \"chained\" HTTP compression algorithms, meaning that a serverresponse can be compressed multiple times and potentially with different algorithms. The number of acceptable \"links\" in this \"decompression chain\" was unbounded, allowing a malicious server to insert a virtually unlimited number of compression steps.The use of such a decompression chain could result in a \"malloc bomb\", makingcurl end up spending enormous amounts of allocated heap memory, or trying toand returning out of memory errors.",
          "fix_version": "7.84.0",
          "references": []
        },
        {
          "id": "CVE-2022-32208",
          "severity": "Medium",
          "description": "When curl < 7.84.0 does FTP transfers secured by krb5, it handles message verification failures wrongly. This flaw makes it possible for a Man-In-The-Middle attack to go unnoticed and even allows it to inject data to the client.",
          "fix_version": "7.84.0",
          "references": []
        },
        {
          "id": "CVE-2022-43552",
          "severity": "Medium",
          "description": "A use after free vulnerability exists in curl <7.87.0. Curl can be asked to *tunnel* virtually all protocols it supports through an HTTP proxy. HTTP proxies can (and often do) deny such tunnel operations. When getting denied to tunnel the specific protocols SMB or TELNET, curl would use a heap-allocated struct after it had been freed, in its transfer shutdown code path.",
          "fix_version": "7.87.0",
          "references": []
        },
        {
          "id": "CVE-2023-23916",
          "severity": "Medium",
          "description": "An allocation of resources without limits or throttling vulnerability exists in curl <v7.88.0 based on the \"chained\" HTTP compression algorithms, meaning that a server response can be compressed multiple times and potentially with differentalgorithms. The number of acceptable \"links\" in this \"decompression chain\" wascapped, but the cap was implemented on a per-header basis allowing a maliciousserver to insert a virtually unlimited number of compression steps simply byusing many headers. The use of such a decompression chain could result in a \"malloc bomb\", making curl end up spending enormous amounts of allocated heap memory, or trying to and returning out of memory errors.",
          "fix_version": "7.88.0",
          "references": []
        },
        {
          "id": "CVE-2023-28320",
          "severity": "Medium",
          "description": "A denial of service vulnerability exists in curl <v8.1.0 in the way libcurl provides several different backends for resolving host names, selected at build time. If it is built to use the synchronous resolver, it allows name resolves to time-out slow operations using `alarm()` and `siglongjmp()`. When doing this, libcurl used a global buffer that was not mutex protected and a multi-threaded application might therefore crash or otherwise misbehave.",
          "fix_version": "8.1.0",
          "references": []
        },
        {
          "id": "CVE-2023-28321",
          "severity": "Medium",
          "description": "An improper certificate validation vulnerability exists in curl <v8.1.0 in the way it supports matching of wildcard patterns when listed as \"Subject Alternative Name\" in TLS server certificates. curl can be built to use its own name matching function for TLS rather than one provided by a TLS library. This private wildcard matching function would match IDN (International Domain Name) hosts incorrectly and could as a result accept patterns that otherwise should mismatch. IDN hostnames are converted to puny code before used for certificate checks. Puny coded names always start with `xn--` and should not be allowed to pattern match, but the wildcard check in curl could still check for `x*`, which would match even though the IDN name most likely contained nothing even resembling an `x`.",
          "fix_version": "8.1.0",
          "references": []
        },
        {
          "id": "CVE-2023-46218",
          "severity": "Medium",
          "description": "This flaw allows a malicious HTTP server to set \"super cookies\" in curl that\nare then passed back to more origins than what is otherwise allowed or\npossible. This allows a site to set cookies that then would get sent to\ndifferent and unrelated sites and domains.\n\nIt could do this by exploiting a mixed case flaw in curl's function that\nverifies a given cookie domain against the Public Suffix List (PSL). For\nexample a cookie could be set with `domain=co.UK` when the URL used a lower\ncase hostname `curl.co.uk`, even though `co.uk` is listed as a PSL domain.",
          "fix_version": "8.5.0",
          "references": []
        },
        {
          "id": "CVE-2024-7264",
          "severity": "Medium",
          "description": "libcurl's ASN1 parser code has the `GTime2str()` function, used for parsing an\nASN.1 Generalized Time field. If given an syntactically incorrect field, the\nparser might end up using -1 for the length of the *time fraction*, leading to\na `strlen()` getting performed on a pointer to a heap buffer area that is not\n(purposely) null terminated.\n\nThis flaw most likely leads to a crash, but can also lead to heap contents\ngetting returned to the application when\n[CURLINFO_CERTINFO](https://curl.se/libcurl/c/CURLINFO_CERTINFO.html) is used.",
          "fix_version": "8.9.1",
          "references": []
        },
        {
          "id": "CVE-2024-8096",
          "severity": "Medium",
          "description": "When curl is told to use the Certificate Status Request TLS extension, often referred to as OCSP stapling, to verify that the server certificate is valid, it might fail to detect some OCSP problems and instead wrongly consider the response as fine.  If the returned status reports another error than 'revoked' (like for example 'unauthorized') it is not treated as a bad certficate.",
          "fix_version": "8.10.0",
          "references": []
        },
        {
          "id": "CVE-2019-5435",
          "severity": "Low",
          "description": "An integer overflow in curl's URL API results in a buffer overflow in libcurl 7.62.0 to and including 7.64.1.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2020-8284",
          "severity": "Low",
          "description": "A malicious server can use the FTP PASV response to trick curl 7.73.0 and earlier into connecting back to a given IP address and port, and this way potentially make curl extract information about services that are otherwise private and not disclosed, for example doing port scanning and service banner extractions.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2021-22898",
          "severity": "Low",
          "description": "curl 7.7 through 7.76.1 suffers from an information disclosure when the `-t` command line option, known as `CURLOPT_TELNETOPTIONS` in libcurl, is used to send variable=content pairs to TELNET servers. Due to a flaw in the option parser for sending NEW_ENV variables, libcurl could be made to pass on uninitialized data from a stack based buffer to the server, resulting in potentially revealing sensitive internal information to the server using a clear-text network protocol.",
          "fix_version": "7.77.0",
          "references": []
        },
        {
          "id": "CVE-2022-35252",
          "severity": "Low",
          "description": "When curl is used to retrieve and parse cookies from a HTTP(S) server, itaccepts cookies using control codes that when later are sent back to a HTTPserver might make the server return 400 responses. Effectively allowing a\"sister site\" to deny service to all siblings.",
          "fix_version": "7.85.0",
          "references": []
        },
        {
          "id": "CVE-2023-28322",
          "severity": "Low",
          "description": "An information disclosure vulnerability exists in curl <v8.1.0 when doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously wasused to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the second transfer. The problem exists in the logic for a reused handle when it is (expected to be) changed from a PUT to a POST.",
          "fix_version": "8.1.0",
          "references": []
        },
        {
          "id": "CVE-2024-11053",
          "severity": "Low",
          "description": "When asked to both use a `.netrc` file for credentials and to follow HTTP\nredirects, curl could leak the password used for the first host to the\nfollowed-to host under certain circumstances.\n\nThis flaw only manifests itself if the netrc file has an entry that matches\nthe redirect target hostname but the entry either omits just the password or\nomits both login and password.",
          "fix_version": "8.11.1",
          "references": []
        },
        {
          "id": "CVE-2022-32221",
          "severity": "Critical",
          "description": "When doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously was used to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the subsequent `POST` request. The problem exists in the logic for a reused handle when it is changed from a PUT to a POST.",
          "fix_version": "7.64.0-4+deb10u4",
          "references": []
        },
        {
          "id": "CVE-2021-22946",
          "severity": "High",
          "description": "A user can tell curl >= 7.20.0 and <= 7.78.0 to require a successful upgrade to TLS when speaking to an IMAP, POP3 or FTP server (`--ssl-reqd` on the command line or`CURLOPT_USE_SSL` set to `CURLUSESSL_CONTROL` or `CURLUSESSL_ALL` withlibcurl). This requirement could be bypassed if the server would return a properly crafted but perfectly legitimate response.This flaw would then make curl silently continue its operations **withoutTLS** contrary to the instructions and expectations, exposing possibly sensitive data in clear text over the network.",
          "fix_version": "7.64.0-4+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2022-22576",
          "severity": "High",
          "description": "An improper authentication vulnerability exists in curl 7.33.0 to and including 7.82.0 which might allow reuse OAUTH2-authenticated connections without properly making sure that the connection was authenticated with the same credentials as set for this transfer. This affects SASL-enabled protocols: SMPTP(S), IMAP(S), POP3(S) and LDAP(S) (openldap only).",
          "fix_version": "7.64.0-4+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2022-27781",
          "severity": "High",
          "description": "libcurl provides the `CURLOPT_CERTINFO` option to allow applications torequest details to be returned about a server's certificate chain.Due to an erroneous function, a malicious server could make libcurl built withNSS get stuck in a never-ending busy-loop when trying to retrieve thatinformation.",
          "fix_version": "7.64.0-4+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2022-27782",
          "severity": "High",
          "description": "libcurl would reuse a previously created connection even when a TLS or SSHrelated option had been changed that should have prohibited reuse.libcurl keeps previously used connections in a connection pool for subsequenttransfers to reuse if one of them matches the setup. However, several TLS andSSH settings were left out from the configuration match checks, making themmatch too easily.",
          "fix_version": "7.64.0-4+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2023-27533",
          "severity": "High",
          "description": "A vulnerability in input validation exists in curl <8.0 during communication using the TELNET protocol may allow an attacker to pass on maliciously crafted user name and \"telnet options\" during server negotiation. The lack of proper input scrubbing allows an attacker to send content or perform option negotiation without the application's intent. This vulnerability could be exploited if an application allows user input, thereby enabling attackers to execute arbitrary code on the system.",
          "fix_version": "7.64.0-4+deb10u6",
          "references": []
        },
        {
          "id": "CVE-2023-27534",
          "severity": "High",
          "description": "A path traversal vulnerability exists in curl <8.0.0 SFTP implementation causes the tilde (~) character to be wrongly replaced when used as a prefix in the first path element, in addition to its intended use as the first element to indicate a path relative to the user's home directory. Attackers can exploit this flaw to bypass filtering or execute arbitrary code by crafting a path like /~2/foo while accessing a server with a specific user.",
          "fix_version": "7.64.0-4+deb10u9",
          "references": []
        },
        {
          "id": "CVE-2024-2398",
          "severity": "High",
          "description": "When an application tells libcurl it wants to allow HTTP/2 server push, and the amount of received headers for the push surpasses the maximum allowed limit (1000), libcurl aborts the server push. When aborting, libcurl inadvertently does not free all the previously allocated headers and instead leaks the memory.  Further, this error condition fails silently and is therefore not easily detected by an application.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2021-22947",
          "severity": "Medium",
          "description": "When curl >= 7.20.0 and <= 7.78.0 connects to an IMAP or POP3 server to retrieve data using STARTTLS to upgrade to TLS security, the server can respond and send back multiple responses at once that curl caches. curl would then upgrade to TLS but not flush the in-queue of cached responses but instead continue using and trustingthe responses it got *before* the TLS handshake as if they were authenticated.Using this flaw, it allows a Man-In-The-Middle attacker to first inject the fake responses, then pass-through the TLS traffic from the legitimate server and trick curl into sending data back to the user thinking the attacker's injected data comes from the TLS-protected server.",
          "fix_version": "7.64.0-4+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2022-27774",
          "severity": "Medium",
          "description": "An insufficiently protected credentials vulnerability exists in curl 4.9 to and include curl 7.82.0 are affected that could allow an attacker to extract credentials when follows HTTP(S) redirects is used with authentication could leak credentials to other services that exist on different protocols or port numbers.",
          "fix_version": "7.64.0-4+deb10u4",
          "references": []
        },
        {
          "id": "CVE-2022-27776",
          "severity": "Medium",
          "description": "A insufficiently protected credentials vulnerability in fixed in curl 7.83.0 might leak authentication or cookie header data on HTTP redirects to the same host but another port number.",
          "fix_version": "7.64.0-4+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2022-32206",
          "severity": "Medium",
          "description": "curl < 7.84.0 supports \"chained\" HTTP compression algorithms, meaning that a serverresponse can be compressed multiple times and potentially with different algorithms. The number of acceptable \"links\" in this \"decompression chain\" was unbounded, allowing a malicious server to insert a virtually unlimited number of compression steps.The use of such a decompression chain could result in a \"malloc bomb\", makingcurl end up spending enormous amounts of allocated heap memory, or trying toand returning out of memory errors.",
          "fix_version": "7.64.0-4+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2022-32208",
          "severity": "Medium",
          "description": "When curl < 7.84.0 does FTP transfers secured by krb5, it handles message verification failures wrongly. This flaw makes it possible for a Man-In-The-Middle attack to go unnoticed and even allows it to inject data to the client.",
          "fix_version": "7.64.0-4+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2022-43552",
          "severity": "Medium",
          "description": "A use after free vulnerability exists in curl <7.87.0. Curl can be asked to *tunnel* virtually all protocols it supports through an HTTP proxy. HTTP proxies can (and often do) deny such tunnel operations. When getting denied to tunnel the specific protocols SMB or TELNET, curl would use a heap-allocated struct after it had been freed, in its transfer shutdown code path.",
          "fix_version": "7.64.0-4+deb10u4",
          "references": []
        },
        {
          "id": "CVE-2023-23916",
          "severity": "Medium",
          "description": "An allocation of resources without limits or throttling vulnerability exists in curl <v7.88.0 based on the \"chained\" HTTP compression algorithms, meaning that a server response can be compressed multiple times and potentially with differentalgorithms. The number of acceptable \"links\" in this \"decompression chain\" wascapped, but the cap was implemented on a per-header basis allowing a maliciousserver to insert a virtually unlimited number of compression steps simply byusing many headers. The use of such a decompression chain could result in a \"malloc bomb\", making curl end up spending enormous amounts of allocated heap memory, or trying to and returning out of memory errors.",
          "fix_version": "7.64.0-4+deb10u5",
          "references": []
        },
        {
          "id": "CVE-2023-27535",
          "severity": "Medium",
          "description": "An authentication bypass vulnerability exists in libcurl <8.0.0 in the FTP connection reuse feature that can result in wrong credentials being used during subsequent transfers. Previously created connections are kept in a connection pool for reuse if they match the current setup. However, certain FTP settings such as CURLOPT_FTP_ACCOUNT, CURLOPT_FTP_ALTERNATIVE_TO_USER, CURLOPT_FTP_SSL_CCC, and CURLOPT_USE_SSL were not included in the configuration match checks, causing them to match too easily. This could lead to libcurl using the wrong credentials when performing a transfer, potentially allowing unauthorized access to sensitive information.",
          "fix_version": "7.64.0-4+deb10u6",
          "references": []
        },
        {
          "id": "CVE-2023-27536",
          "severity": "Medium",
          "description": "An authentication bypass vulnerability exists libcurl <8.0.0 in the connection reuse feature which can reuse previously established connections with incorrect user permissions due to a failure to check for changes in the CURLOPT_GSSAPI_DELEGATION option. This vulnerability affects krb5/kerberos/negotiate/GSSAPI transfers and could potentially result in unauthorized access to sensitive information. The safest option is to not reuse connections if the CURLOPT_GSSAPI_DELEGATION option has been changed.",
          "fix_version": "7.64.0-4+deb10u6",
          "references": []
        },
        {
          "id": "CVE-2023-27538",
          "severity": "Medium",
          "description": "An authentication bypass vulnerability exists in libcurl prior to v8.0.0 where it reuses a previously established SSH connection despite the fact that an SSH option was modified, which should have prevented reuse. libcurl maintains a pool of previously used connections to reuse them for subsequent transfers if the configurations match. However, two SSH settings were omitted from the configuration check, allowing them to match easily, potentially leading to the reuse of an inappropriate connection.",
          "fix_version": "7.64.0-4+deb10u6",
          "references": []
        },
        {
          "id": "CVE-2023-28321",
          "severity": "Medium",
          "description": "An improper certificate validation vulnerability exists in curl <v8.1.0 in the way it supports matching of wildcard patterns when listed as \"Subject Alternative Name\" in TLS server certificates. curl can be built to use its own name matching function for TLS rather than one provided by a TLS library. This private wildcard matching function would match IDN (International Domain Name) hosts incorrectly and could as a result accept patterns that otherwise should mismatch. IDN hostnames are converted to puny code before used for certificate checks. Puny coded names always start with `xn--` and should not be allowed to pattern match, but the wildcard check in curl could still check for `x*`, which would match even though the IDN name most likely contained nothing even resembling an `x`.",
          "fix_version": "7.64.0-4+deb10u7",
          "references": []
        },
        {
          "id": "CVE-2023-46218",
          "severity": "Medium",
          "description": "This flaw allows a malicious HTTP server to set \"super cookies\" in curl that are then passed back to more origins than what is otherwise allowed or possible. This allows a site to set cookies that then would get sent to different and unrelated sites and domains.  It could do this by exploiting a mixed case flaw in curl's function that verifies a given cookie domain against the Public Suffix List (PSL). For example a cookie could be set with `domain=co.UK` when the URL used a lower case hostname `curl.co.uk`, even though `co.uk` is listed as a PSL domain.",
          "fix_version": "7.64.0-4+deb10u8",
          "references": []
        },
        {
          "id": "CVE-2021-22898",
          "severity": "Low",
          "description": "curl 7.7 through 7.76.1 suffers from an information disclosure when the `-t` command line option, known as `CURLOPT_TELNETOPTIONS` in libcurl, is used to send variable=content pairs to TELNET servers. Due to a flaw in the option parser for sending NEW_ENV variables, libcurl could be made to pass on uninitialized data from a stack based buffer to the server, resulting in potentially revealing sensitive internal information to the server using a clear-text network protocol.",
          "fix_version": "7.64.0-4+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2021-22924",
          "severity": "Low",
          "description": "libcurl keeps previously used connections in a connection pool for subsequenttransfers to reuse, if one of them matches the setup.Due to errors in the logic, the config matching function did not take 'issuercert' into account and it compared the involved paths *case insensitively*,which could lead to libcurl reusing wrong connections.File paths are, or can be, case sensitive on many systems but not all, and caneven vary depending on used file systems.The comparison also didn't include the 'issuer cert' which a transfer can setto qualify how to verify the server certificate.",
          "fix_version": "7.64.0-4+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2022-35252",
          "severity": "Low",
          "description": "When curl is used to retrieve and parse cookies from a HTTP(S) server, itaccepts cookies using control codes that when later are sent back to a HTTPserver might make the server return 400 responses. Effectively allowing a\"sister site\" to deny service to all siblings.",
          "fix_version": "7.64.0-4+deb10u4",
          "references": []
        },
        {
          "id": "CVE-2023-28322",
          "severity": "Low",
          "description": "An information disclosure vulnerability exists in curl <v8.1.0 when doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously wasused to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the second transfer. The problem exists in the logic for a reused handle when it is (expected to be) changed from a PUT to a POST.",
          "fix_version": "7.64.0-4+deb10u8",
          "references": []
        },
        {
          "id": "CVE-2023-38546",
          "severity": "Low",
          "description": "This flaw allows an attacker to insert cookies at will into a running program using libcurl, if the specific series of conditions are met.  libcurl performs transfers. In its API, an application creates \"easy handles\" that are the individual handles for single transfers.  libcurl provides a function call that duplicates en easy handle called [curl_easy_duphandle](https://curl.se/libcurl/c/curl_easy_duphandle.html).  If a transfer has cookies enabled when the handle is duplicated, the cookie-enable state is also cloned - but without cloning the actual cookies. If the source handle did not read any cookies from a specific file on disk, the cloned version of the handle would instead store the file name as `none` (using the four ASCII letters, no quotes).  Subsequent use of the cloned handle that does not explicitly set a source to load cookies from would then inadvertently load cookies from a file named `none` - if such a file exists and is readable in the current directory of the program using libcurl. And if using the correct file format of course.",
          "fix_version": "7.64.0-4+deb10u7",
          "references": []
        },
        {
          "id": "CVE-2020-19909",
          "severity": "Negligible",
          "description": "Integer overflow vulnerability in tool_operate.c in curl 7.65.2 via a large value as the retry delay. NOTE: many parties report that this has no direct security impact on the curl user; however, it may (in theory) cause a denial of service to associated systems or networks if, for example, --retry-delay is misinterpreted as a value much smaller than what was intended. This is not especially plausible because the overflow only happens if the user was trying to specify that curl should wait weeks (or longer) before trying to recover from a transient error.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2021-22922",
          "severity": "Negligible",
          "description": "When curl is instructed to download content using the metalink feature, thecontents is verified against a hash provided in the metalink XML file.The metalink XML file points out to the client how to get the same contentfrom a set of different URLs, potentially hosted by different servers and theclient can then download the file from one or several of them. In a serial orparallel manner.If one of the servers hosting the contents has been breached and the contentsof the specific file on that server is replaced with a modified payload, curlshould detect this when the hash of the file mismatches after a completeddownload. It should remove the contents and instead try getting the contentsfrom another URL. This is not done, and instead such a hash mismatch is onlymentioned in text and the potentially malicious content is kept in the file ondisk.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2021-22923",
          "severity": "Negligible",
          "description": "When curl is instructed to get content using the metalink feature, and a user name and password are used to download the metalink XML file, those same credentials are then subsequently passed on to each of the servers from which curl will download or try to download the contents from. Often contrary to the user's expectations and intentions and without telling the user it happened.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2023-28320",
          "severity": "Negligible",
          "description": "A denial of service vulnerability exists in curl <v8.1.0 in the way libcurl provides several different backends for resolving host names, selected at build time. If it is built to use the synchronous resolver, it allows name resolves to time-out slow operations using `alarm()` and `siglongjmp()`. When doing this, libcurl used a global buffer that was not mutex protected and a multi-threaded application might therefore crash or otherwise misbehave.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2024-2379",
          "severity": "Negligible",
          "description": "libcurl skips the certificate verification for a QUIC connection under certain conditions, when built to use wolfSSL. If told to use an unknown/bad cipher or curve, the error path accidentally skips the verification and returns OK, thus ignoring any certificate problems.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "curl",
      "version": "7.64.0-4+deb10u2",
      "type": "library",
      "origin": "pkg:deb/debian/curl@7.64.0-4%2Bdeb10u2?arch=amd64&distro=debian-10",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2019-5481",
          "severity": "Critical",
          "description": "Double-free vulnerability in the FTP-kerberos code in cURL 7.52.0 to 7.65.3.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2019-5482",
          "severity": "Critical",
          "description": "Heap buffer overflow in the TFTP protocol handler in cURL 7.19.4 to 7.65.3.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2022-32221",
          "severity": "Critical",
          "description": "When doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously was used to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the subsequent `POST` request. The problem exists in the logic for a reused handle when it is changed from a PUT to a POST.",
          "fix_version": "7.86.0",
          "references": []
        },
        {
          "id": "CVE-2020-8169",
          "severity": "High",
          "description": "curl 7.62.0 through 7.70.0 is vulnerable to an information disclosure vulnerability that can lead to a partial password being leaked over the network and to the DNS server(s).",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2020-8177",
          "severity": "High",
          "description": "curl 7.20.0 through 7.70.0 is vulnerable to improper restriction of names for files and other resources that can lead too overwriting a local file when the -J flag is used.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2021-22926",
          "severity": "High",
          "description": "libcurl-using applications can ask for a specific client certificate to be used in a transfer. This is done with the `CURLOPT_SSLCERT` option (`--cert` with the command line tool).When libcurl is built to use the macOS native TLS library Secure Transport, an application can ask for the client certificate by name or with a file name - using the same option. If the name exists as a file, it will be used instead of by name.If the appliction runs with a current working directory that is writable by other users (like `/tmp`), a malicious user can create a file name with the same name as the app wants to use by name, and thereby trick the application to use the file based cert instead of the one referred to by name making libcurl send the wrong client certificate in the TLS connection handshake.",
          "fix_version": "7.78.0",
          "references": []
        },
        {
          "id": "CVE-2021-22946",
          "severity": "High",
          "description": "A user can tell curl >= 7.20.0 and <= 7.78.0 to require a successful upgrade to TLS when speaking to an IMAP, POP3 or FTP server (`--ssl-reqd` on the command line or`CURLOPT_USE_SSL` set to `CURLUSESSL_CONTROL` or `CURLUSESSL_ALL` withlibcurl). This requirement could be bypassed if the server would return a properly crafted but perfectly legitimate response.This flaw would then make curl silently continue its operations **withoutTLS** contrary to the instructions and expectations, exposing possibly sensitive data in clear text over the network.",
          "fix_version": "7.79.0",
          "references": []
        },
        {
          "id": "CVE-2022-22576",
          "severity": "High",
          "description": "An improper authentication vulnerability exists in curl 7.33.0 to and including 7.82.0 which might allow reuse OAUTH2-authenticated connections without properly making sure that the connection was authenticated with the same credentials as set for this transfer. This affects SASL-enabled protocols: SMPTP(S), IMAP(S), POP3(S) and LDAP(S) (openldap only).",
          "fix_version": "7.83.0",
          "references": []
        },
        {
          "id": "CVE-2022-27781",
          "severity": "High",
          "description": "libcurl provides the `CURLOPT_CERTINFO` option to allow applications torequest details to be returned about a server's certificate chain.Due to an erroneous function, a malicious server could make libcurl built withNSS get stuck in a never-ending busy-loop when trying to retrieve thatinformation.",
          "fix_version": "7.83.1",
          "references": []
        },
        {
          "id": "CVE-2022-27782",
          "severity": "High",
          "description": "libcurl would reuse a previously created connection even when a TLS or SSHrelated option had been changed that should have prohibited reuse.libcurl keeps previously used connections in a connection pool for subsequenttransfers to reuse if one of them matches the setup. However, several TLS andSSH settings were left out from the configuration match checks, making themmatch too easily.",
          "fix_version": "7.83.1",
          "references": []
        },
        {
          "id": "CVE-2023-27533",
          "severity": "High",
          "description": "A vulnerability in input validation exists in curl <8.0 during communication using the TELNET protocol may allow an attacker to pass on maliciously crafted user name and \"telnet options\" during server negotiation. The lack of proper input scrubbing allows an attacker to send content or perform option negotiation without the application's intent. This vulnerability could be exploited if an application allows user input, thereby enabling attackers to execute arbitrary code on the system.",
          "fix_version": "8.0.0",
          "references": []
        },
        {
          "id": "CVE-2023-27534",
          "severity": "High",
          "description": "A path traversal vulnerability exists in curl <8.0.0 SFTP implementation causes the tilde (~) character to be wrongly replaced when used as a prefix in the first path element, in addition to its intended use as the first element to indicate a path relative to the user's home directory. Attackers can exploit this flaw to bypass filtering or execute arbitrary code by crafting a path like /~2/foo while accessing a server with a specific user.",
          "fix_version": "8.0.0",
          "references": []
        },
        {
          "id": "CVE-2023-28319",
          "severity": "High",
          "description": "A use after free vulnerability exists in curl <v8.1.0 in the way libcurl offers a feature to verify an SSH server's public key using a SHA 256 hash. When this check fails, libcurl would free the memory for the fingerprint before it returns an error message containing the (now freed) hash. This flaw risks inserting sensitive heap-based data into the error message that might be shown to users or otherwise get leaked and revealed.",
          "fix_version": "8.1.0",
          "references": []
        },
        {
          "id": "CVE-2024-2398",
          "severity": "High",
          "description": "When an application tells libcurl it wants to allow HTTP/2 server push, and the amount of received headers for the push surpasses the maximum allowed limit (1000), libcurl aborts the server push. When aborting, libcurl inadvertently does not free all the previously allocated headers and instead leaks the memory.  Further, this error condition fails silently and is therefore not easily detected by an application.",
          "fix_version": "8.7.0",
          "references": []
        },
        {
          "id": "CVE-2025-0725",
          "severity": "High",
          "description": "When libcurl is asked to perform automatic gzip decompression of\ncontent-encoded HTTP responses with the `CURLOPT_ACCEPT_ENCODING` option,\n**using zlib 1.2.0.3 or older**, an attacker-controlled integer overflow would\nmake libcurl perform a buffer overflow.",
          "fix_version": "8.12.0",
          "references": []
        },
        {
          "id": "CVE-2021-22897",
          "severity": "Medium",
          "description": "curl 7.61.0 through 7.76.1 suffers from exposure of data element to wrong session due to a mistake in the code for CURLOPT_SSL_CIPHER_LIST when libcurl is built to use the Schannel TLS library. The selected cipher set was stored in a single \"static\" variable in the library, which has the surprising side-effect that if an application sets up multiple concurrent transfers, the last one that sets the ciphers will accidentally control the set used by all transfers. In a worst-case scenario, this weakens transport security significantly.",
          "fix_version": "7.77.0",
          "references": []
        },
        {
          "id": "CVE-2021-22922",
          "severity": "Medium",
          "description": "When curl is instructed to download content using the metalink feature, thecontents is verified against a hash provided in the metalink XML file.The metalink XML file points out to the client how to get the same contentfrom a set of different URLs, potentially hosted by different servers and theclient can then download the file from one or several of them. In a serial orparallel manner.If one of the servers hosting the contents has been breached and the contentsof the specific file on that server is replaced with a modified payload, curlshould detect this when the hash of the file mismatches after a completeddownload. It should remove the contents and instead try getting the contentsfrom another URL. This is not done, and instead such a hash mismatch is onlymentioned in text and the potentially malicious content is kept in the file ondisk.",
          "fix_version": "7.78.0",
          "references": []
        },
        {
          "id": "CVE-2021-22923",
          "severity": "Medium",
          "description": "When curl is instructed to get content using the metalink feature, and a user name and password are used to download the metalink XML file, those same credentials are then subsequently passed on to each of the servers from which curl will download or try to download the contents from. Often contrary to the user's expectations and intentions and without telling the user it happened.",
          "fix_version": "7.78.0",
          "references": []
        },
        {
          "id": "CVE-2021-22925",
          "severity": "Medium",
          "description": "curl supports the `-t` command line option, known as `CURLOPT_TELNETOPTIONS`in libcurl. This rarely used option is used to send variable=content pairs toTELNET servers.Due to flaw in the option parser for sending `NEW_ENV` variables, libcurlcould be made to pass on uninitialized data from a stack based buffer to theserver. Therefore potentially revealing sensitive internal information to theserver using a clear-text network protocol.This could happen because curl did not call and use sscanf() correctly whenparsing the string provided by the application.",
          "fix_version": "7.78.0",
          "references": []
        },
        {
          "id": "CVE-2021-22947",
          "severity": "Medium",
          "description": "When curl >= 7.20.0 and <= 7.78.0 connects to an IMAP or POP3 server to retrieve data using STARTTLS to upgrade to TLS security, the server can respond and send back multiple responses at once that curl caches. curl would then upgrade to TLS but not flush the in-queue of cached responses but instead continue using and trustingthe responses it got *before* the TLS handshake as if they were authenticated.Using this flaw, it allows a Man-In-The-Middle attacker to first inject the fake responses, then pass-through the TLS traffic from the legitimate server and trick curl into sending data back to the user thinking the attacker's injected data comes from the TLS-protected server.",
          "fix_version": "7.79.0",
          "references": []
        },
        {
          "id": "CVE-2022-27774",
          "severity": "Medium",
          "description": "An insufficiently protected credentials vulnerability exists in curl 4.9 to and include curl 7.82.0 are affected that could allow an attacker to extract credentials when follows HTTP(S) redirects is used with authentication could leak credentials to other services that exist on different protocols or port numbers.",
          "fix_version": "7.83.0",
          "references": []
        },
        {
          "id": "CVE-2022-27776",
          "severity": "Medium",
          "description": "A insufficiently protected credentials vulnerability in fixed in curl 7.83.0 might leak authentication or cookie header data on HTTP redirects to the same host but another port number.",
          "fix_version": "7.83.0",
          "references": []
        },
        {
          "id": "CVE-2022-32206",
          "severity": "Medium",
          "description": "curl < 7.84.0 supports \"chained\" HTTP compression algorithms, meaning that a serverresponse can be compressed multiple times and potentially with different algorithms. The number of acceptable \"links\" in this \"decompression chain\" was unbounded, allowing a malicious server to insert a virtually unlimited number of compression steps.The use of such a decompression chain could result in a \"malloc bomb\", makingcurl end up spending enormous amounts of allocated heap memory, or trying toand returning out of memory errors.",
          "fix_version": "7.84.0",
          "references": []
        },
        {
          "id": "CVE-2022-32208",
          "severity": "Medium",
          "description": "When curl < 7.84.0 does FTP transfers secured by krb5, it handles message verification failures wrongly. This flaw makes it possible for a Man-In-The-Middle attack to go unnoticed and even allows it to inject data to the client.",
          "fix_version": "7.84.0",
          "references": []
        },
        {
          "id": "CVE-2022-43552",
          "severity": "Medium",
          "description": "A use after free vulnerability exists in curl <7.87.0. Curl can be asked to *tunnel* virtually all protocols it supports through an HTTP proxy. HTTP proxies can (and often do) deny such tunnel operations. When getting denied to tunnel the specific protocols SMB or TELNET, curl would use a heap-allocated struct after it had been freed, in its transfer shutdown code path.",
          "fix_version": "7.87.0",
          "references": []
        },
        {
          "id": "CVE-2023-23916",
          "severity": "Medium",
          "description": "An allocation of resources without limits or throttling vulnerability exists in curl <v7.88.0 based on the \"chained\" HTTP compression algorithms, meaning that a server response can be compressed multiple times and potentially with differentalgorithms. The number of acceptable \"links\" in this \"decompression chain\" wascapped, but the cap was implemented on a per-header basis allowing a maliciousserver to insert a virtually unlimited number of compression steps simply byusing many headers. The use of such a decompression chain could result in a \"malloc bomb\", making curl end up spending enormous amounts of allocated heap memory, or trying to and returning out of memory errors.",
          "fix_version": "7.88.0",
          "references": []
        },
        {
          "id": "CVE-2023-28320",
          "severity": "Medium",
          "description": "A denial of service vulnerability exists in curl <v8.1.0 in the way libcurl provides several different backends for resolving host names, selected at build time. If it is built to use the synchronous resolver, it allows name resolves to time-out slow operations using `alarm()` and `siglongjmp()`. When doing this, libcurl used a global buffer that was not mutex protected and a multi-threaded application might therefore crash or otherwise misbehave.",
          "fix_version": "8.1.0",
          "references": []
        },
        {
          "id": "CVE-2023-28321",
          "severity": "Medium",
          "description": "An improper certificate validation vulnerability exists in curl <v8.1.0 in the way it supports matching of wildcard patterns when listed as \"Subject Alternative Name\" in TLS server certificates. curl can be built to use its own name matching function for TLS rather than one provided by a TLS library. This private wildcard matching function would match IDN (International Domain Name) hosts incorrectly and could as a result accept patterns that otherwise should mismatch. IDN hostnames are converted to puny code before used for certificate checks. Puny coded names always start with `xn--` and should not be allowed to pattern match, but the wildcard check in curl could still check for `x*`, which would match even though the IDN name most likely contained nothing even resembling an `x`.",
          "fix_version": "8.1.0",
          "references": []
        },
        {
          "id": "CVE-2023-46218",
          "severity": "Medium",
          "description": "This flaw allows a malicious HTTP server to set \"super cookies\" in curl that\nare then passed back to more origins than what is otherwise allowed or\npossible. This allows a site to set cookies that then would get sent to\ndifferent and unrelated sites and domains.\n\nIt could do this by exploiting a mixed case flaw in curl's function that\nverifies a given cookie domain against the Public Suffix List (PSL). For\nexample a cookie could be set with `domain=co.UK` when the URL used a lower\ncase hostname `curl.co.uk`, even though `co.uk` is listed as a PSL domain.",
          "fix_version": "8.5.0",
          "references": []
        },
        {
          "id": "CVE-2024-7264",
          "severity": "Medium",
          "description": "libcurl's ASN1 parser code has the `GTime2str()` function, used for parsing an\nASN.1 Generalized Time field. If given an syntactically incorrect field, the\nparser might end up using -1 for the length of the *time fraction*, leading to\na `strlen()` getting performed on a pointer to a heap buffer area that is not\n(purposely) null terminated.\n\nThis flaw most likely leads to a crash, but can also lead to heap contents\ngetting returned to the application when\n[CURLINFO_CERTINFO](https://curl.se/libcurl/c/CURLINFO_CERTINFO.html) is used.",
          "fix_version": "8.9.1",
          "references": []
        },
        {
          "id": "CVE-2024-8096",
          "severity": "Medium",
          "description": "When curl is told to use the Certificate Status Request TLS extension, often referred to as OCSP stapling, to verify that the server certificate is valid, it might fail to detect some OCSP problems and instead wrongly consider the response as fine.  If the returned status reports another error than 'revoked' (like for example 'unauthorized') it is not treated as a bad certficate.",
          "fix_version": "8.10.0",
          "references": []
        },
        {
          "id": "CVE-2019-5435",
          "severity": "Low",
          "description": "An integer overflow in curl's URL API results in a buffer overflow in libcurl 7.62.0 to and including 7.64.1.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2020-8284",
          "severity": "Low",
          "description": "A malicious server can use the FTP PASV response to trick curl 7.73.0 and earlier into connecting back to a given IP address and port, and this way potentially make curl extract information about services that are otherwise private and not disclosed, for example doing port scanning and service banner extractions.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2021-22898",
          "severity": "Low",
          "description": "curl 7.7 through 7.76.1 suffers from an information disclosure when the `-t` command line option, known as `CURLOPT_TELNETOPTIONS` in libcurl, is used to send variable=content pairs to TELNET servers. Due to a flaw in the option parser for sending NEW_ENV variables, libcurl could be made to pass on uninitialized data from a stack based buffer to the server, resulting in potentially revealing sensitive internal information to the server using a clear-text network protocol.",
          "fix_version": "7.77.0",
          "references": []
        },
        {
          "id": "CVE-2022-35252",
          "severity": "Low",
          "description": "When curl is used to retrieve and parse cookies from a HTTP(S) server, itaccepts cookies using control codes that when later are sent back to a HTTPserver might make the server return 400 responses. Effectively allowing a\"sister site\" to deny service to all siblings.",
          "fix_version": "7.85.0",
          "references": []
        },
        {
          "id": "CVE-2023-28322",
          "severity": "Low",
          "description": "An information disclosure vulnerability exists in curl <v8.1.0 when doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously wasused to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the second transfer. The problem exists in the logic for a reused handle when it is (expected to be) changed from a PUT to a POST.",
          "fix_version": "8.1.0",
          "references": []
        },
        {
          "id": "CVE-2024-11053",
          "severity": "Low",
          "description": "When asked to both use a `.netrc` file for credentials and to follow HTTP\nredirects, curl could leak the password used for the first host to the\nfollowed-to host under certain circumstances.\n\nThis flaw only manifests itself if the netrc file has an entry that matches\nthe redirect target hostname but the entry either omits just the password or\nomits both login and password.",
          "fix_version": "8.11.1",
          "references": []
        },
        {
          "id": "CVE-2022-32221",
          "severity": "Critical",
          "description": "When doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously was used to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the subsequent `POST` request. The problem exists in the logic for a reused handle when it is changed from a PUT to a POST.",
          "fix_version": "7.64.0-4+deb10u4",
          "references": []
        },
        {
          "id": "CVE-2021-22946",
          "severity": "High",
          "description": "A user can tell curl >= 7.20.0 and <= 7.78.0 to require a successful upgrade to TLS when speaking to an IMAP, POP3 or FTP server (`--ssl-reqd` on the command line or`CURLOPT_USE_SSL` set to `CURLUSESSL_CONTROL` or `CURLUSESSL_ALL` withlibcurl). This requirement could be bypassed if the server would return a properly crafted but perfectly legitimate response.This flaw would then make curl silently continue its operations **withoutTLS** contrary to the instructions and expectations, exposing possibly sensitive data in clear text over the network.",
          "fix_version": "7.64.0-4+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2022-22576",
          "severity": "High",
          "description": "An improper authentication vulnerability exists in curl 7.33.0 to and including 7.82.0 which might allow reuse OAUTH2-authenticated connections without properly making sure that the connection was authenticated with the same credentials as set for this transfer. This affects SASL-enabled protocols: SMPTP(S), IMAP(S), POP3(S) and LDAP(S) (openldap only).",
          "fix_version": "7.64.0-4+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2022-27781",
          "severity": "High",
          "description": "libcurl provides the `CURLOPT_CERTINFO` option to allow applications torequest details to be returned about a server's certificate chain.Due to an erroneous function, a malicious server could make libcurl built withNSS get stuck in a never-ending busy-loop when trying to retrieve thatinformation.",
          "fix_version": "7.64.0-4+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2022-27782",
          "severity": "High",
          "description": "libcurl would reuse a previously created connection even when a TLS or SSHrelated option had been changed that should have prohibited reuse.libcurl keeps previously used connections in a connection pool for subsequenttransfers to reuse if one of them matches the setup. However, several TLS andSSH settings were left out from the configuration match checks, making themmatch too easily.",
          "fix_version": "7.64.0-4+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2023-27533",
          "severity": "High",
          "description": "A vulnerability in input validation exists in curl <8.0 during communication using the TELNET protocol may allow an attacker to pass on maliciously crafted user name and \"telnet options\" during server negotiation. The lack of proper input scrubbing allows an attacker to send content or perform option negotiation without the application's intent. This vulnerability could be exploited if an application allows user input, thereby enabling attackers to execute arbitrary code on the system.",
          "fix_version": "7.64.0-4+deb10u6",
          "references": []
        },
        {
          "id": "CVE-2023-27534",
          "severity": "High",
          "description": "A path traversal vulnerability exists in curl <8.0.0 SFTP implementation causes the tilde (~) character to be wrongly replaced when used as a prefix in the first path element, in addition to its intended use as the first element to indicate a path relative to the user's home directory. Attackers can exploit this flaw to bypass filtering or execute arbitrary code by crafting a path like /~2/foo while accessing a server with a specific user.",
          "fix_version": "7.64.0-4+deb10u9",
          "references": []
        },
        {
          "id": "CVE-2024-2398",
          "severity": "High",
          "description": "When an application tells libcurl it wants to allow HTTP/2 server push, and the amount of received headers for the push surpasses the maximum allowed limit (1000), libcurl aborts the server push. When aborting, libcurl inadvertently does not free all the previously allocated headers and instead leaks the memory.  Further, this error condition fails silently and is therefore not easily detected by an application.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2021-22947",
          "severity": "Medium",
          "description": "When curl >= 7.20.0 and <= 7.78.0 connects to an IMAP or POP3 server to retrieve data using STARTTLS to upgrade to TLS security, the server can respond and send back multiple responses at once that curl caches. curl would then upgrade to TLS but not flush the in-queue of cached responses but instead continue using and trustingthe responses it got *before* the TLS handshake as if they were authenticated.Using this flaw, it allows a Man-In-The-Middle attacker to first inject the fake responses, then pass-through the TLS traffic from the legitimate server and trick curl into sending data back to the user thinking the attacker's injected data comes from the TLS-protected server.",
          "fix_version": "7.64.0-4+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2022-27774",
          "severity": "Medium",
          "description": "An insufficiently protected credentials vulnerability exists in curl 4.9 to and include curl 7.82.0 are affected that could allow an attacker to extract credentials when follows HTTP(S) redirects is used with authentication could leak credentials to other services that exist on different protocols or port numbers.",
          "fix_version": "7.64.0-4+deb10u4",
          "references": []
        },
        {
          "id": "CVE-2022-27776",
          "severity": "Medium",
          "description": "A insufficiently protected credentials vulnerability in fixed in curl 7.83.0 might leak authentication or cookie header data on HTTP redirects to the same host but another port number.",
          "fix_version": "7.64.0-4+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2022-32206",
          "severity": "Medium",
          "description": "curl < 7.84.0 supports \"chained\" HTTP compression algorithms, meaning that a serverresponse can be compressed multiple times and potentially with different algorithms. The number of acceptable \"links\" in this \"decompression chain\" was unbounded, allowing a malicious server to insert a virtually unlimited number of compression steps.The use of such a decompression chain could result in a \"malloc bomb\", makingcurl end up spending enormous amounts of allocated heap memory, or trying toand returning out of memory errors.",
          "fix_version": "7.64.0-4+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2022-32208",
          "severity": "Medium",
          "description": "When curl < 7.84.0 does FTP transfers secured by krb5, it handles message verification failures wrongly. This flaw makes it possible for a Man-In-The-Middle attack to go unnoticed and even allows it to inject data to the client.",
          "fix_version": "7.64.0-4+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2022-43552",
          "severity": "Medium",
          "description": "A use after free vulnerability exists in curl <7.87.0. Curl can be asked to *tunnel* virtually all protocols it supports through an HTTP proxy. HTTP proxies can (and often do) deny such tunnel operations. When getting denied to tunnel the specific protocols SMB or TELNET, curl would use a heap-allocated struct after it had been freed, in its transfer shutdown code path.",
          "fix_version": "7.64.0-4+deb10u4",
          "references": []
        },
        {
          "id": "CVE-2023-23916",
          "severity": "Medium",
          "description": "An allocation of resources without limits or throttling vulnerability exists in curl <v7.88.0 based on the \"chained\" HTTP compression algorithms, meaning that a server response can be compressed multiple times and potentially with differentalgorithms. The number of acceptable \"links\" in this \"decompression chain\" wascapped, but the cap was implemented on a per-header basis allowing a maliciousserver to insert a virtually unlimited number of compression steps simply byusing many headers. The use of such a decompression chain could result in a \"malloc bomb\", making curl end up spending enormous amounts of allocated heap memory, or trying to and returning out of memory errors.",
          "fix_version": "7.64.0-4+deb10u5",
          "references": []
        },
        {
          "id": "CVE-2023-27535",
          "severity": "Medium",
          "description": "An authentication bypass vulnerability exists in libcurl <8.0.0 in the FTP connection reuse feature that can result in wrong credentials being used during subsequent transfers. Previously created connections are kept in a connection pool for reuse if they match the current setup. However, certain FTP settings such as CURLOPT_FTP_ACCOUNT, CURLOPT_FTP_ALTERNATIVE_TO_USER, CURLOPT_FTP_SSL_CCC, and CURLOPT_USE_SSL were not included in the configuration match checks, causing them to match too easily. This could lead to libcurl using the wrong credentials when performing a transfer, potentially allowing unauthorized access to sensitive information.",
          "fix_version": "7.64.0-4+deb10u6",
          "references": []
        },
        {
          "id": "CVE-2023-27536",
          "severity": "Medium",
          "description": "An authentication bypass vulnerability exists libcurl <8.0.0 in the connection reuse feature which can reuse previously established connections with incorrect user permissions due to a failure to check for changes in the CURLOPT_GSSAPI_DELEGATION option. This vulnerability affects krb5/kerberos/negotiate/GSSAPI transfers and could potentially result in unauthorized access to sensitive information. The safest option is to not reuse connections if the CURLOPT_GSSAPI_DELEGATION option has been changed.",
          "fix_version": "7.64.0-4+deb10u6",
          "references": []
        },
        {
          "id": "CVE-2023-27538",
          "severity": "Medium",
          "description": "An authentication bypass vulnerability exists in libcurl prior to v8.0.0 where it reuses a previously established SSH connection despite the fact that an SSH option was modified, which should have prevented reuse. libcurl maintains a pool of previously used connections to reuse them for subsequent transfers if the configurations match. However, two SSH settings were omitted from the configuration check, allowing them to match easily, potentially leading to the reuse of an inappropriate connection.",
          "fix_version": "7.64.0-4+deb10u6",
          "references": []
        },
        {
          "id": "CVE-2023-28321",
          "severity": "Medium",
          "description": "An improper certificate validation vulnerability exists in curl <v8.1.0 in the way it supports matching of wildcard patterns when listed as \"Subject Alternative Name\" in TLS server certificates. curl can be built to use its own name matching function for TLS rather than one provided by a TLS library. This private wildcard matching function would match IDN (International Domain Name) hosts incorrectly and could as a result accept patterns that otherwise should mismatch. IDN hostnames are converted to puny code before used for certificate checks. Puny coded names always start with `xn--` and should not be allowed to pattern match, but the wildcard check in curl could still check for `x*`, which would match even though the IDN name most likely contained nothing even resembling an `x`.",
          "fix_version": "7.64.0-4+deb10u7",
          "references": []
        },
        {
          "id": "CVE-2023-46218",
          "severity": "Medium",
          "description": "This flaw allows a malicious HTTP server to set \"super cookies\" in curl that are then passed back to more origins than what is otherwise allowed or possible. This allows a site to set cookies that then would get sent to different and unrelated sites and domains.  It could do this by exploiting a mixed case flaw in curl's function that verifies a given cookie domain against the Public Suffix List (PSL). For example a cookie could be set with `domain=co.UK` when the URL used a lower case hostname `curl.co.uk`, even though `co.uk` is listed as a PSL domain.",
          "fix_version": "7.64.0-4+deb10u8",
          "references": []
        },
        {
          "id": "CVE-2021-22898",
          "severity": "Low",
          "description": "curl 7.7 through 7.76.1 suffers from an information disclosure when the `-t` command line option, known as `CURLOPT_TELNETOPTIONS` in libcurl, is used to send variable=content pairs to TELNET servers. Due to a flaw in the option parser for sending NEW_ENV variables, libcurl could be made to pass on uninitialized data from a stack based buffer to the server, resulting in potentially revealing sensitive internal information to the server using a clear-text network protocol.",
          "fix_version": "7.64.0-4+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2021-22924",
          "severity": "Low",
          "description": "libcurl keeps previously used connections in a connection pool for subsequenttransfers to reuse, if one of them matches the setup.Due to errors in the logic, the config matching function did not take 'issuercert' into account and it compared the involved paths *case insensitively*,which could lead to libcurl reusing wrong connections.File paths are, or can be, case sensitive on many systems but not all, and caneven vary depending on used file systems.The comparison also didn't include the 'issuer cert' which a transfer can setto qualify how to verify the server certificate.",
          "fix_version": "7.64.0-4+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2022-35252",
          "severity": "Low",
          "description": "When curl is used to retrieve and parse cookies from a HTTP(S) server, itaccepts cookies using control codes that when later are sent back to a HTTPserver might make the server return 400 responses. Effectively allowing a\"sister site\" to deny service to all siblings.",
          "fix_version": "7.64.0-4+deb10u4",
          "references": []
        },
        {
          "id": "CVE-2023-28322",
          "severity": "Low",
          "description": "An information disclosure vulnerability exists in curl <v8.1.0 when doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously wasused to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the second transfer. The problem exists in the logic for a reused handle when it is (expected to be) changed from a PUT to a POST.",
          "fix_version": "7.64.0-4+deb10u8",
          "references": []
        },
        {
          "id": "CVE-2023-38546",
          "severity": "Low",
          "description": "This flaw allows an attacker to insert cookies at will into a running program using libcurl, if the specific series of conditions are met.  libcurl performs transfers. In its API, an application creates \"easy handles\" that are the individual handles for single transfers.  libcurl provides a function call that duplicates en easy handle called [curl_easy_duphandle](https://curl.se/libcurl/c/curl_easy_duphandle.html).  If a transfer has cookies enabled when the handle is duplicated, the cookie-enable state is also cloned - but without cloning the actual cookies. If the source handle did not read any cookies from a specific file on disk, the cloned version of the handle would instead store the file name as `none` (using the four ASCII letters, no quotes).  Subsequent use of the cloned handle that does not explicitly set a source to load cookies from would then inadvertently load cookies from a file named `none` - if such a file exists and is readable in the current directory of the program using libcurl. And if using the correct file format of course.",
          "fix_version": "7.64.0-4+deb10u7",
          "references": []
        },
        {
          "id": "CVE-2020-19909",
          "severity": "Negligible",
          "description": "Integer overflow vulnerability in tool_operate.c in curl 7.65.2 via a large value as the retry delay. NOTE: many parties report that this has no direct security impact on the curl user; however, it may (in theory) cause a denial of service to associated systems or networks if, for example, --retry-delay is misinterpreted as a value much smaller than what was intended. This is not especially plausible because the overflow only happens if the user was trying to specify that curl should wait weeks (or longer) before trying to recover from a transient error.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2021-22922",
          "severity": "Negligible",
          "description": "When curl is instructed to download content using the metalink feature, thecontents is verified against a hash provided in the metalink XML file.The metalink XML file points out to the client how to get the same contentfrom a set of different URLs, potentially hosted by different servers and theclient can then download the file from one or several of them. In a serial orparallel manner.If one of the servers hosting the contents has been breached and the contentsof the specific file on that server is replaced with a modified payload, curlshould detect this when the hash of the file mismatches after a completeddownload. It should remove the contents and instead try getting the contentsfrom another URL. This is not done, and instead such a hash mismatch is onlymentioned in text and the potentially malicious content is kept in the file ondisk.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2021-22923",
          "severity": "Negligible",
          "description": "When curl is instructed to get content using the metalink feature, and a user name and password are used to download the metalink XML file, those same credentials are then subsequently passed on to each of the servers from which curl will download or try to download the contents from. Often contrary to the user's expectations and intentions and without telling the user it happened.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2023-28320",
          "severity": "Negligible",
          "description": "A denial of service vulnerability exists in curl <v8.1.0 in the way libcurl provides several different backends for resolving host names, selected at build time. If it is built to use the synchronous resolver, it allows name resolves to time-out slow operations using `alarm()` and `siglongjmp()`. When doing this, libcurl used a global buffer that was not mutex protected and a multi-threaded application might therefore crash or otherwise misbehave.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2024-2379",
          "severity": "Negligible",
          "description": "libcurl skips the certificate verification for a QUIC connection under certain conditions, when built to use wolfSSL. If told to use an unknown/bad cipher or curve, the error path accidentally skips the verification and returns OK, thus ignoring any certificate problems.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "dash",
      "version": "0.5.10.2-5",
      "type": "library",
      "origin": "pkg:deb/debian/dash@0.5.10.2-5?arch=amd64&distro=debian-10",
      "maintainer": null,
      "licenses": [
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "debconf",
      "version": "1.5.71",
      "type": "library",
      "origin": "pkg:deb/debian/debconf@1.5.71?arch=all&distro=debian-10",
      "maintainer": null,
      "licenses": [
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "debian-archive-keyring",
      "version": "2019.1+deb10u1",
      "type": "library",
      "origin": "pkg:deb/debian/debian-archive-keyring@2019.1%2Bdeb10u1?arch=all&distro=debian-10",
      "maintainer": null,
      "licenses": [
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "debianutils",
      "version": "4.8.6.1",
      "type": "library",
      "origin": "pkg:deb/debian/debianutils@4.8.6.1?arch=amd64&distro=debian-10",
      "maintainer": null,
      "licenses": [
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "diffutils",
      "version": "1:3.7-3",
      "type": "library",
      "origin": "pkg:deb/debian/diffutils@1%3A3.7-3?arch=amd64&distro=debian-10",
      "maintainer": null,
      "licenses": [
        null,
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "dpkg",
      "version": "1.19.7",
      "type": "library",
      "origin": "pkg:deb/debian/dpkg@1.19.7?arch=amd64&distro=debian-10",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2022-1664",
          "severity": "Critical",
          "description": "Dpkg::Source::Archive in dpkg, the Debian package management system, before version 1.21.8, 1.20.10, 1.19.8, 1.18.26 is prone to a directory traversal vulnerability. When extracting untrusted source packages in v2 and v3 source package formats that include a debian.tar, the in-place extraction can lead to directory traversal situations on specially crafted orig.tar and debian.tar tarballs.",
          "fix_version": "1.19.8",
          "references": []
        }
      ]
    },
    {
      "name": "e2fsprogs",
      "version": "1.44.5-1+deb10u3",
      "type": "library",
      "origin": "pkg:deb/debian/e2fsprogs@1.44.5-1%2Bdeb10u3?arch=amd64&distro=debian-10",
      "maintainer": null,
      "licenses": [
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2022-1304",
          "severity": "High",
          "description": "An out-of-bounds read/write vulnerability was found in e2fsprogs 1.46.5. This issue leads to a segmentation fault and possibly arbitrary code execution via a specially crafted filesystem.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "fdisk",
      "version": "2.33.1-0.1",
      "type": "library",
      "origin": "pkg:deb/debian/fdisk@2.33.1-0.1?arch=amd64&distro=debian-10&upstream=util-linux",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2021-37600",
          "severity": "Medium",
          "description": "An integer overflow in util-linux through 2.37.1 can potentially cause a buffer overflow if an attacker were able to use system resources in a way that leads to a large number in the /proc/sysvipc/sem file. NOTE: this is unexploitable in GNU C Library environments, and possibly in all realistic environments.",
          "fix_version": "2.33.1-0.1+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2024-28085",
          "severity": "Low",
          "description": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
          "fix_version": "2.33.1-0.1+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2022-0563",
          "severity": "Negligible",
          "description": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "findutils",
      "version": "4.6.0+git+20190209-2",
      "type": "library",
      "origin": "pkg:deb/debian/findutils@4.6.0%2Bgit%2B20190209-2?arch=amd64&distro=debian-10",
      "maintainer": null,
      "licenses": [
        null,
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "fontconfig-config",
      "version": "2.13.1-2",
      "type": "library",
      "origin": "pkg:deb/debian/fontconfig-config@2.13.1-2?arch=all&distro=debian-10&upstream=fontconfig",
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "fonts-dejavu-core",
      "version": "2.37-1",
      "type": "library",
      "origin": "pkg:deb/debian/fonts-dejavu-core@2.37-1?arch=all&distro=debian-10&upstream=fonts-dejavu",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "gcc-8-base",
      "version": "8.3.0-6",
      "type": "library",
      "origin": "pkg:deb/debian/gcc-8-base@8.3.0-6?arch=amd64&distro=debian-10&upstream=gcc-8",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2018-12886",
          "severity": "High",
          "description": "stack_protect_prologue in cfgexpand.c and stack_protect_epilogue in function.c in GNU Compiler Collection (GCC) 4.1 through 8 (under certain circumstances) generate instruction sequences when targeting ARM targets that spill the address of the stack protector guard, which allows an attacker to bypass the protection of -fstack-protector, -fstack-protector-all, -fstack-protector-strong, and -fstack-protector-explicit against stack overflow by controlling what the stack canary is compared against.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2019-15847",
          "severity": "High",
          "description": "The POWER9 backend in GNU Compiler Collection (GCC) before version 10 could optimize multiple calls of the __builtin_darn intrinsic into a single call, thus reducing the entropy of the random number generator. This occurred because a volatile operation was not specified. For example, within a single execution of a program, the output of every __builtin_darn() call may be the same.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2023-4039",
          "severity": "Medium",
          "description": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains  that target AArch64 allows an attacker to exploit an existing buffer  overflow in dynamically-sized local variables in your application  without this being detected. This stack-protector failure only applies  to C99-style dynamically-sized local variables or those created using  alloca(). The stack-protector operates as intended for statically-sized  local variables.  The default behavior when the stack-protector  detects an overflow is to terminate your application, resulting in  controlled loss of availability. An attacker who can exploit a buffer  overflow without triggering the stack-protector might be able to change  program flow control to cause an uncontrolled loss of availability or to  go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "gettext-base",
      "version": "0.19.8.1-9",
      "type": "library",
      "origin": "pkg:deb/debian/gettext-base@0.19.8.1-9?arch=amd64&distro=debian-10&upstream=gettext",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "gpgv",
      "version": "2.2.12-1+deb10u1",
      "type": "library",
      "origin": "pkg:deb/debian/gpgv@2.2.12-1%2Bdeb10u1?arch=amd64&distro=debian-10&upstream=gnupg2",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2022-34903",
          "severity": "Medium",
          "description": "GnuPG through 2.3.6, in unusual situations where an attacker possesses any secret-key information from a victim's keyring and other constraints (e.g., use of GPGME) are met, allows signature forgery via injection into the status line.",
          "fix_version": "2.2.12-1+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2019-14855",
          "severity": "Low",
          "description": "A flaw was found in the way certificate signatures could be forged using collisions found in the SHA-1 algorithm. An attacker could use this weakness to create forged certificate signatures. This issue affects GnuPG versions before 2.2.18.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2022-3219",
          "severity": "Negligible",
          "description": "GnuPG can be made to spin on a relatively small input by (for example) crafting a public key with thousands of signatures attached, compressed down to just a few KB.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "grep",
      "version": "3.3-1",
      "type": "library",
      "origin": "pkg:deb/debian/grep@3.3-1?arch=amd64&distro=debian-10",
      "maintainer": null,
      "licenses": [
        null,
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "gzip",
      "version": "1.9",
      "type": "application",
      "origin": "pkg:generic/gzip@1.9",
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": [
        {
          "id": "CVE-2022-1271",
          "severity": "High",
          "description": "An arbitrary file write vulnerability was found in GNU gzip's zgrep utility. When zgrep is applied on the attacker's chosen file name (for example, a crafted file name), this can overwrite an attacker's content to an arbitrary attacker-selected file. This flaw occurs due to insufficient validation when processing filenames with two or more newlines where selected content and the target file names are embedded in crafted multi-line file names. This flaw allows a remote, low privileged attacker to force zgrep to write arbitrary files on the system.",
          "fix_version": "1.12",
          "references": []
        },
        {
          "id": "CVE-2022-1271",
          "severity": "High",
          "description": "An arbitrary file write vulnerability was found in GNU gzip's zgrep utility. When zgrep is applied on the attacker's chosen file name (for example, a crafted file name), this can overwrite an attacker's content to an arbitrary attacker-selected file. This flaw occurs due to insufficient validation when processing filenames with two or more newlines where selected content and the target file names are embedded in crafted multi-line file names. This flaw allows a remote, low privileged attacker to force zgrep to write arbitrary files on the system.",
          "fix_version": "1.9-3+deb10u1",
          "references": []
        }
      ]
    },
    {
      "name": "gzip",
      "version": "1.9-3",
      "type": "library",
      "origin": "pkg:deb/debian/gzip@1.9-3?arch=amd64&distro=debian-10",
      "maintainer": null,
      "licenses": [
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2022-1271",
          "severity": "High",
          "description": "An arbitrary file write vulnerability was found in GNU gzip's zgrep utility. When zgrep is applied on the attacker's chosen file name (for example, a crafted file name), this can overwrite an attacker's content to an arbitrary attacker-selected file. This flaw occurs due to insufficient validation when processing filenames with two or more newlines where selected content and the target file names are embedded in crafted multi-line file names. This flaw allows a remote, low privileged attacker to force zgrep to write arbitrary files on the system.",
          "fix_version": "1.12",
          "references": []
        },
        {
          "id": "CVE-2022-1271",
          "severity": "High",
          "description": "An arbitrary file write vulnerability was found in GNU gzip's zgrep utility. When zgrep is applied on the attacker's chosen file name (for example, a crafted file name), this can overwrite an attacker's content to an arbitrary attacker-selected file. This flaw occurs due to insufficient validation when processing filenames with two or more newlines where selected content and the target file names are embedded in crafted multi-line file names. This flaw allows a remote, low privileged attacker to force zgrep to write arbitrary files on the system.",
          "fix_version": "1.9-3+deb10u1",
          "references": []
        }
      ]
    },
    {
      "name": "hostname",
      "version": "3.21",
      "type": "library",
      "origin": "pkg:deb/debian/hostname@3.21?arch=amd64&distro=debian-10",
      "maintainer": null,
      "licenses": [
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "init-system-helpers",
      "version": "1.56+nmu1",
      "type": "library",
      "origin": "pkg:deb/debian/init-system-helpers@1.56%2Bnmu1?arch=all&distro=debian-10",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "libacl1",
      "version": "2.2.53-4",
      "type": "library",
      "origin": "pkg:deb/debian/libacl1@2.2.53-4?arch=amd64&distro=debian-10&upstream=acl",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "libapt-pkg5.0",
      "version": "1.8.2.3",
      "type": "library",
      "origin": "pkg:deb/debian/libapt-pkg5.0@1.8.2.3?arch=amd64&distro=debian-10&upstream=apt",
      "maintainer": null,
      "licenses": [
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2011-3374",
          "severity": "Negligible",
          "description": "It was found that apt-key in apt, all versions, do not correctly validate gpg keys with the master keyring, leading to a potential man-in-the-middle attack.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libattr1",
      "version": "1:2.4.48-4",
      "type": "library",
      "origin": "pkg:deb/debian/libattr1@1%3A2.4.48-4?arch=amd64&distro=debian-10&upstream=attr",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "libaudit-common",
      "version": "1:2.8.4-3",
      "type": "library",
      "origin": "pkg:deb/debian/libaudit-common@1%3A2.8.4-3?arch=all&distro=debian-10&upstream=audit",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "libaudit1",
      "version": "1:2.8.4-3",
      "type": "library",
      "origin": "pkg:deb/debian/libaudit1@1%3A2.8.4-3?arch=amd64&distro=debian-10&upstream=audit",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "libblkid1",
      "version": "2.33.1-0.1",
      "type": "library",
      "origin": "pkg:deb/debian/libblkid1@2.33.1-0.1?arch=amd64&distro=debian-10&upstream=util-linux",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2021-37600",
          "severity": "Medium",
          "description": "An integer overflow in util-linux through 2.37.1 can potentially cause a buffer overflow if an attacker were able to use system resources in a way that leads to a large number in the /proc/sysvipc/sem file. NOTE: this is unexploitable in GNU C Library environments, and possibly in all realistic environments.",
          "fix_version": "2.33.1-0.1+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2024-28085",
          "severity": "Low",
          "description": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
          "fix_version": "2.33.1-0.1+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2022-0563",
          "severity": "Negligible",
          "description": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libbsd0",
      "version": "0.9.1-2+deb10u1",
      "type": "library",
      "origin": "pkg:deb/debian/libbsd0@0.9.1-2%2Bdeb10u1?arch=amd64&distro=debian-10&upstream=libbsd",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "libbz2-1.0",
      "version": "1.0.6-9.2~deb10u1",
      "type": "library",
      "origin": "pkg:deb/debian/libbz2-1.0@1.0.6-9.2~deb10u1?arch=amd64&distro=debian-10&upstream=bzip2",
      "maintainer": null,
      "licenses": [
        null,
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "libc-bin",
      "version": "2.28-10",
      "type": "library",
      "origin": "pkg:deb/debian/libc-bin@2.28-10?arch=amd64&distro=debian-10&upstream=glibc",
      "maintainer": null,
      "licenses": [
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2021-33574",
          "severity": "Critical",
          "description": "The mq_notify function in the GNU C Library (aka glibc) versions 2.32 and 2.33 has a use-after-free. It may use the notification thread attributes object (passed through its struct sigevent parameter) after it has been freed by the caller, leading to a denial of service (application crash) or possibly unspecified other impact.",
          "fix_version": "2.28-10+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2021-35942",
          "severity": "Critical",
          "description": "The wordexp function in the GNU C Library (aka glibc) through 2.33 may crash or read arbitrary memory in parse_param (in posix/wordexp.c) when called with an untrusted, crafted pattern, potentially resulting in a denial of service or disclosure of information. This occurs because atoi was used but strtoul should have been used to ensure correct calculations.",
          "fix_version": "2.28-10+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2022-23218",
          "severity": "Critical",
          "description": "The deprecated compatibility function svcunix_create in the sunrpc module of the GNU C Library (aka glibc) through 2.34 copies its path argument on the stack without validating its length, which may result in a buffer overflow, potentially resulting in a denial of service or (if an application is not built with a stack protector enabled) arbitrary code execution.",
          "fix_version": "2.28-10+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2022-23219",
          "severity": "Critical",
          "description": "The deprecated compatibility function clnt_create in the sunrpc module of the GNU C Library (aka glibc) through 2.34 copies its hostname argument on the stack without validating its length, which may result in a buffer overflow, potentially resulting in a denial of service or (if an application is not built with a stack protector enabled) arbitrary code execution.",
          "fix_version": "2.28-10+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2020-1751",
          "severity": "High",
          "description": "An out-of-bounds write vulnerability was found in glibc before 2.31 when handling signal trampolines on PowerPC. Specifically, the backtrace function did not properly check the array bounds when storing the frame address, resulting in a denial of service or potential code execution. The highest threat from this vulnerability is to system availability.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2020-1752",
          "severity": "High",
          "description": "A use-after-free vulnerability introduced in glibc upstream version 2.14 was found in the way the tilde expansion was carried out. Directory paths containing an initial tilde followed by a valid username were affected by this issue. A local attacker could exploit this flaw by creating a specially crafted path that, when processed by the glob function, would potentially lead to arbitrary code execution. This was fixed in version 2.32.",
          "fix_version": "2.28-10+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2020-6096",
          "severity": "High",
          "description": "An exploitable signed comparison vulnerability exists in the ARMv7 memcpy() implementation of GNU glibc 2.30.9000. Calling memcpy() (on ARMv7 targets that utilize the GNU glibc implementation) with a negative value for the 'num' parameter results in a signed comparison vulnerability. If an attacker underflows the 'num' parameter to memcpy(), this vulnerability could lead to undefined behavior such as writing to out-of-bounds memory and potentially remote code execution. Furthermore, this memcpy() implementation allows for program execution to continue in scenarios where a segmentation fault or crash should have occurred. The dangers occur in that subsequent execution and iterations of this code will be executed with this corrupted data.",
          "fix_version": "2.28-10+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2021-3326",
          "severity": "High",
          "description": "The iconv function in the GNU C Library (aka glibc or libc6) 2.32 and earlier, when processing invalid input sequences in the ISO-2022-JP-3 encoding, fails an assertion in the code path and aborts the program, potentially resulting in a denial of service.",
          "fix_version": "2.28-10+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2021-3999",
          "severity": "High",
          "description": "A flaw was found in glibc. An off-by-one buffer overflow and underflow in getcwd() may lead to memory corruption when the size of the buffer is exactly 1. A local attacker who can control the input buffer and size passed to getcwd() in a setuid program could use this flaw to potentially execute arbitrary code and escalate their privileges on the system.",
          "fix_version": "2.28-10+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2024-2961",
          "severity": "High",
          "description": "The iconv() function in the GNU C Library versions 2.39 and older may overflow the output buffer passed to it by up to 4 bytes when converting strings to the ISO-2022-CN-EXT character set, which may be used to crash an application or overwrite a neighbouring variable.",
          "fix_version": "2.28-10+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2024-33599",
          "severity": "High",
          "description": "nscd: Stack-based buffer overflow in netgroup cache  If the Name Service Cache Daemon's (nscd) fixed size cache is exhausted by client requests then a subsequent client request for netgroup data may result in a stack-based buffer overflow.  This flaw was introduced in glibc 2.15 when the cache was added to nscd.  This vulnerability is only present in the nscd binary.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2024-33601",
          "severity": "High",
          "description": "nscd: netgroup cache may terminate daemon on memory allocation failure  The Name Service Cache Daemon's (nscd) netgroup cache uses xmalloc or xrealloc and these functions may terminate the process due to a memory allocation failure resulting in a denial of service to the clients.  The flaw was introduced in glibc 2.15 when the cache was added to nscd.  This vulnerability is only present in the nscd binary.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2024-33602",
          "severity": "High",
          "description": "nscd: netgroup cache assumes NSS callback uses in-buffer strings  The Name Service Cache Daemon's (nscd) netgroup cache can corrupt memory when the NSS callback does not store all strings in the provided buffer. The flaw was introduced in glibc 2.15 when the cache was added to nscd.  This vulnerability is only present in the nscd binary.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2016-10228",
          "severity": "Medium",
          "description": "The iconv program in the GNU C Library (aka glibc or libc6) 2.31 and earlier, when invoked with multiple suffixes in the destination encoding (TRANSLATE or IGNORE) along with the -c option, enters an infinite loop when processing invalid multi-byte input sequences, leading to a denial of service.",
          "fix_version": "2.28-10+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2019-25013",
          "severity": "Medium",
          "description": "The iconv feature in the GNU C Library (aka glibc or libc6) through 2.32, when processing invalid multi-byte input sequences in the EUC-KR encoding, may have a buffer over-read.",
          "fix_version": "2.28-10+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2020-10029",
          "severity": "Medium",
          "description": "The GNU C Library (aka glibc or libc6) before 2.32 could overflow an on-stack buffer during range reduction if an input to an 80-bit long double function contains a non-canonical bit pattern, a seen when passing a 0x5d414141414141410000 value to sinl on x86 targets. This is related to sysdeps/ieee754/ldbl-96/e_rem_pio2l.c.",
          "fix_version": "2.28-10+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2020-27618",
          "severity": "Medium",
          "description": "The iconv function in the GNU C Library (aka glibc or libc6) 2.32 and earlier, when processing invalid multi-byte input sequences in IBM1364, IBM1371, IBM1388, IBM1390, and IBM1399 encodings, fails to advance the input state, which could lead to an infinite loop in applications, resulting in a denial of service, a different vulnerability from CVE-2016-10228.",
          "fix_version": "2.28-10+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2023-4806",
          "severity": "Medium",
          "description": "A flaw was found in glibc. In an extremely rare situation, the getaddrinfo function may access memory that has been freed, resulting in an application crash. This issue is only exploitable when a NSS module implements only the _nss_*_gethostbyname2_r and _nss_*_getcanonname_r hooks without implementing the _nss_*_gethostbyname3_r hook. The resolved name should return a large number of IPv6 and IPv4, and the call to the getaddrinfo function should have the AF_INET6 address family with AI_CANONNAME, AI_ALL and AI_V4MAPPED as flags.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2023-4813",
          "severity": "Medium",
          "description": "A flaw was found in glibc. In an uncommon situation, the gaih_inet function may use memory that has been freed, resulting in an application crash. This issue is only exploitable when the getaddrinfo function is called and the hosts database in /etc/nsswitch.conf is configured with SUCCESS=continue or SUCCESS=merge.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2024-33600",
          "severity": "Medium",
          "description": "nscd: Null pointer crashes after notfound response  If the Name Service Cache Daemon's (nscd) cache fails to add a not-found netgroup response to the cache, the client request can result in a null pointer dereference.  This flaw was introduced in glibc 2.15 when the cache was added to nscd.  This vulnerability is only present in the nscd binary.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2019-19126",
          "severity": "Low",
          "description": "On the x86-64 architecture, the GNU C Library (aka glibc) before 2.31 fails to ignore the LD_PREFER_MAP_32BIT_EXEC environment variable during program execution after a security transition, allowing local attackers to restrict the possible mapping addresses for loaded libraries and thus bypass ASLR for a setuid program.",
          "fix_version": "2.28-10+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2021-27645",
          "severity": "Low",
          "description": "The nameserver caching daemon (nscd) in the GNU C Library (aka glibc or libc6) 2.29 through 2.33, when processing a request for netgroup lookup, may crash due to a double-free, potentially resulting in degraded service or Denial of Service on the local system. This is related to netgroupcache.c.",
          "fix_version": "2.28-10+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2010-4756",
          "severity": "Negligible",
          "description": "The glob implementation in the GNU C Library (aka glibc or libc6) allows remote authenticated users to cause a denial of service (CPU and memory consumption) via crafted glob expressions that do not match any pathnames, as demonstrated by glob expressions in STAT commands to an FTP daemon, a different vulnerability than CVE-2010-2632.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2018-20796",
          "severity": "Negligible",
          "description": "In the GNU C Library (aka glibc or libc6) through 2.29, check_dst_limits_calc_pos_1 in posix/regexec.c has Uncontrolled Recursion, as demonstrated by '(\\227|)(\\\\1\\\\1|t1|\\\\\\2537)+' in grep.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2019-1010022",
          "severity": "Negligible",
          "description": "GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may bypass stack guard protection. The component is: nptl. The attack vector is: Exploit stack buffer overflow vulnerability and use this bypass vulnerability to bypass stack guard. NOTE: Upstream comments indicate \"this is being treated as a non-security bug and no real threat.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2019-1010023",
          "severity": "Negligible",
          "description": "GNU Libc current is affected by: Re-mapping current loaded library with malicious ELF file. The impact is: In worst case attacker may evaluate privileges. The component is: libld. The attack vector is: Attacker sends 2 ELF files to victim and asks to run ldd on it. ldd execute code. NOTE: Upstream comments indicate \"this is being treated as a non-security bug and no real threat.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2019-1010024",
          "severity": "Negligible",
          "description": "GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may bypass ASLR using cache of thread stack and heap. The component is: glibc. NOTE: Upstream comments indicate \"this is being treated as a non-security bug and no real threat.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2019-1010025",
          "severity": "Negligible",
          "description": "GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may guess the heap addresses of pthread_created thread. The component is: glibc. NOTE: the vendor's position is \"ASLR bypass itself is not a vulnerability.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2019-9192",
          "severity": "Negligible",
          "description": "In the GNU C Library (aka glibc or libc6) through 2.29, check_dst_limits_calc_pos_1 in posix/regexec.c has Uncontrolled Recursion, as demonstrated by '(|)(\\\\1\\\\1)*' in grep, a different issue than CVE-2018-20796. NOTE: the software maintainer disputes that this is a vulnerability because the behavior occurs only with a crafted pattern",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libc6",
      "version": "2.28-10",
      "type": "library",
      "origin": "pkg:deb/debian/libc6@2.28-10?arch=amd64&distro=debian-10&upstream=glibc",
      "maintainer": null,
      "licenses": [
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2021-33574",
          "severity": "Critical",
          "description": "The mq_notify function in the GNU C Library (aka glibc) versions 2.32 and 2.33 has a use-after-free. It may use the notification thread attributes object (passed through its struct sigevent parameter) after it has been freed by the caller, leading to a denial of service (application crash) or possibly unspecified other impact.",
          "fix_version": "2.28-10+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2021-35942",
          "severity": "Critical",
          "description": "The wordexp function in the GNU C Library (aka glibc) through 2.33 may crash or read arbitrary memory in parse_param (in posix/wordexp.c) when called with an untrusted, crafted pattern, potentially resulting in a denial of service or disclosure of information. This occurs because atoi was used but strtoul should have been used to ensure correct calculations.",
          "fix_version": "2.28-10+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2022-23218",
          "severity": "Critical",
          "description": "The deprecated compatibility function svcunix_create in the sunrpc module of the GNU C Library (aka glibc) through 2.34 copies its path argument on the stack without validating its length, which may result in a buffer overflow, potentially resulting in a denial of service or (if an application is not built with a stack protector enabled) arbitrary code execution.",
          "fix_version": "2.28-10+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2022-23219",
          "severity": "Critical",
          "description": "The deprecated compatibility function clnt_create in the sunrpc module of the GNU C Library (aka glibc) through 2.34 copies its hostname argument on the stack without validating its length, which may result in a buffer overflow, potentially resulting in a denial of service or (if an application is not built with a stack protector enabled) arbitrary code execution.",
          "fix_version": "2.28-10+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2020-1751",
          "severity": "High",
          "description": "An out-of-bounds write vulnerability was found in glibc before 2.31 when handling signal trampolines on PowerPC. Specifically, the backtrace function did not properly check the array bounds when storing the frame address, resulting in a denial of service or potential code execution. The highest threat from this vulnerability is to system availability.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2020-1752",
          "severity": "High",
          "description": "A use-after-free vulnerability introduced in glibc upstream version 2.14 was found in the way the tilde expansion was carried out. Directory paths containing an initial tilde followed by a valid username were affected by this issue. A local attacker could exploit this flaw by creating a specially crafted path that, when processed by the glob function, would potentially lead to arbitrary code execution. This was fixed in version 2.32.",
          "fix_version": "2.28-10+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2020-6096",
          "severity": "High",
          "description": "An exploitable signed comparison vulnerability exists in the ARMv7 memcpy() implementation of GNU glibc 2.30.9000. Calling memcpy() (on ARMv7 targets that utilize the GNU glibc implementation) with a negative value for the 'num' parameter results in a signed comparison vulnerability. If an attacker underflows the 'num' parameter to memcpy(), this vulnerability could lead to undefined behavior such as writing to out-of-bounds memory and potentially remote code execution. Furthermore, this memcpy() implementation allows for program execution to continue in scenarios where a segmentation fault or crash should have occurred. The dangers occur in that subsequent execution and iterations of this code will be executed with this corrupted data.",
          "fix_version": "2.28-10+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2021-3326",
          "severity": "High",
          "description": "The iconv function in the GNU C Library (aka glibc or libc6) 2.32 and earlier, when processing invalid input sequences in the ISO-2022-JP-3 encoding, fails an assertion in the code path and aborts the program, potentially resulting in a denial of service.",
          "fix_version": "2.28-10+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2021-3999",
          "severity": "High",
          "description": "A flaw was found in glibc. An off-by-one buffer overflow and underflow in getcwd() may lead to memory corruption when the size of the buffer is exactly 1. A local attacker who can control the input buffer and size passed to getcwd() in a setuid program could use this flaw to potentially execute arbitrary code and escalate their privileges on the system.",
          "fix_version": "2.28-10+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2024-2961",
          "severity": "High",
          "description": "The iconv() function in the GNU C Library versions 2.39 and older may overflow the output buffer passed to it by up to 4 bytes when converting strings to the ISO-2022-CN-EXT character set, which may be used to crash an application or overwrite a neighbouring variable.",
          "fix_version": "2.28-10+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2024-33599",
          "severity": "High",
          "description": "nscd: Stack-based buffer overflow in netgroup cache  If the Name Service Cache Daemon's (nscd) fixed size cache is exhausted by client requests then a subsequent client request for netgroup data may result in a stack-based buffer overflow.  This flaw was introduced in glibc 2.15 when the cache was added to nscd.  This vulnerability is only present in the nscd binary.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2024-33601",
          "severity": "High",
          "description": "nscd: netgroup cache may terminate daemon on memory allocation failure  The Name Service Cache Daemon's (nscd) netgroup cache uses xmalloc or xrealloc and these functions may terminate the process due to a memory allocation failure resulting in a denial of service to the clients.  The flaw was introduced in glibc 2.15 when the cache was added to nscd.  This vulnerability is only present in the nscd binary.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2024-33602",
          "severity": "High",
          "description": "nscd: netgroup cache assumes NSS callback uses in-buffer strings  The Name Service Cache Daemon's (nscd) netgroup cache can corrupt memory when the NSS callback does not store all strings in the provided buffer. The flaw was introduced in glibc 2.15 when the cache was added to nscd.  This vulnerability is only present in the nscd binary.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2016-10228",
          "severity": "Medium",
          "description": "The iconv program in the GNU C Library (aka glibc or libc6) 2.31 and earlier, when invoked with multiple suffixes in the destination encoding (TRANSLATE or IGNORE) along with the -c option, enters an infinite loop when processing invalid multi-byte input sequences, leading to a denial of service.",
          "fix_version": "2.28-10+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2019-25013",
          "severity": "Medium",
          "description": "The iconv feature in the GNU C Library (aka glibc or libc6) through 2.32, when processing invalid multi-byte input sequences in the EUC-KR encoding, may have a buffer over-read.",
          "fix_version": "2.28-10+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2020-10029",
          "severity": "Medium",
          "description": "The GNU C Library (aka glibc or libc6) before 2.32 could overflow an on-stack buffer during range reduction if an input to an 80-bit long double function contains a non-canonical bit pattern, a seen when passing a 0x5d414141414141410000 value to sinl on x86 targets. This is related to sysdeps/ieee754/ldbl-96/e_rem_pio2l.c.",
          "fix_version": "2.28-10+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2020-27618",
          "severity": "Medium",
          "description": "The iconv function in the GNU C Library (aka glibc or libc6) 2.32 and earlier, when processing invalid multi-byte input sequences in IBM1364, IBM1371, IBM1388, IBM1390, and IBM1399 encodings, fails to advance the input state, which could lead to an infinite loop in applications, resulting in a denial of service, a different vulnerability from CVE-2016-10228.",
          "fix_version": "2.28-10+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2023-4806",
          "severity": "Medium",
          "description": "A flaw was found in glibc. In an extremely rare situation, the getaddrinfo function may access memory that has been freed, resulting in an application crash. This issue is only exploitable when a NSS module implements only the _nss_*_gethostbyname2_r and _nss_*_getcanonname_r hooks without implementing the _nss_*_gethostbyname3_r hook. The resolved name should return a large number of IPv6 and IPv4, and the call to the getaddrinfo function should have the AF_INET6 address family with AI_CANONNAME, AI_ALL and AI_V4MAPPED as flags.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2023-4813",
          "severity": "Medium",
          "description": "A flaw was found in glibc. In an uncommon situation, the gaih_inet function may use memory that has been freed, resulting in an application crash. This issue is only exploitable when the getaddrinfo function is called and the hosts database in /etc/nsswitch.conf is configured with SUCCESS=continue or SUCCESS=merge.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2024-33600",
          "severity": "Medium",
          "description": "nscd: Null pointer crashes after notfound response  If the Name Service Cache Daemon's (nscd) cache fails to add a not-found netgroup response to the cache, the client request can result in a null pointer dereference.  This flaw was introduced in glibc 2.15 when the cache was added to nscd.  This vulnerability is only present in the nscd binary.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2019-19126",
          "severity": "Low",
          "description": "On the x86-64 architecture, the GNU C Library (aka glibc) before 2.31 fails to ignore the LD_PREFER_MAP_32BIT_EXEC environment variable during program execution after a security transition, allowing local attackers to restrict the possible mapping addresses for loaded libraries and thus bypass ASLR for a setuid program.",
          "fix_version": "2.28-10+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2021-27645",
          "severity": "Low",
          "description": "The nameserver caching daemon (nscd) in the GNU C Library (aka glibc or libc6) 2.29 through 2.33, when processing a request for netgroup lookup, may crash due to a double-free, potentially resulting in degraded service or Denial of Service on the local system. This is related to netgroupcache.c.",
          "fix_version": "2.28-10+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2010-4756",
          "severity": "Negligible",
          "description": "The glob implementation in the GNU C Library (aka glibc or libc6) allows remote authenticated users to cause a denial of service (CPU and memory consumption) via crafted glob expressions that do not match any pathnames, as demonstrated by glob expressions in STAT commands to an FTP daemon, a different vulnerability than CVE-2010-2632.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2018-20796",
          "severity": "Negligible",
          "description": "In the GNU C Library (aka glibc or libc6) through 2.29, check_dst_limits_calc_pos_1 in posix/regexec.c has Uncontrolled Recursion, as demonstrated by '(\\227|)(\\\\1\\\\1|t1|\\\\\\2537)+' in grep.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2019-1010022",
          "severity": "Negligible",
          "description": "GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may bypass stack guard protection. The component is: nptl. The attack vector is: Exploit stack buffer overflow vulnerability and use this bypass vulnerability to bypass stack guard. NOTE: Upstream comments indicate \"this is being treated as a non-security bug and no real threat.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2019-1010023",
          "severity": "Negligible",
          "description": "GNU Libc current is affected by: Re-mapping current loaded library with malicious ELF file. The impact is: In worst case attacker may evaluate privileges. The component is: libld. The attack vector is: Attacker sends 2 ELF files to victim and asks to run ldd on it. ldd execute code. NOTE: Upstream comments indicate \"this is being treated as a non-security bug and no real threat.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2019-1010024",
          "severity": "Negligible",
          "description": "GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may bypass ASLR using cache of thread stack and heap. The component is: glibc. NOTE: Upstream comments indicate \"this is being treated as a non-security bug and no real threat.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2019-1010025",
          "severity": "Negligible",
          "description": "GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may guess the heap addresses of pthread_created thread. The component is: glibc. NOTE: the vendor's position is \"ASLR bypass itself is not a vulnerability.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2019-9192",
          "severity": "Negligible",
          "description": "In the GNU C Library (aka glibc or libc6) through 2.29, check_dst_limits_calc_pos_1 in posix/regexec.c has Uncontrolled Recursion, as demonstrated by '(|)(\\\\1\\\\1)*' in grep, a different issue than CVE-2018-20796. NOTE: the software maintainer disputes that this is a vulnerability because the behavior occurs only with a crafted pattern",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libcap-ng0",
      "version": "0.7.9-2",
      "type": "library",
      "origin": "pkg:deb/debian/libcap-ng0@0.7.9-2?arch=amd64&distro=debian-10&upstream=libcap-ng",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "libcom-err2",
      "version": "1.44.5-1+deb10u3",
      "type": "library",
      "origin": "pkg:deb/debian/libcom-err2@1.44.5-1%2Bdeb10u3?arch=amd64&distro=debian-10&upstream=e2fsprogs",
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": [
        {
          "id": "CVE-2022-1304",
          "severity": "High",
          "description": "An out-of-bounds read/write vulnerability was found in e2fsprogs 1.46.5. This issue leads to a segmentation fault and possibly arbitrary code execution via a specially crafted filesystem.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libcurl4",
      "version": "7.64.0-4+deb10u2",
      "type": "library",
      "origin": "pkg:deb/debian/libcurl4@7.64.0-4%2Bdeb10u2?arch=amd64&distro=debian-10&upstream=curl",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2022-32221",
          "severity": "Critical",
          "description": "When doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously was used to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the subsequent `POST` request. The problem exists in the logic for a reused handle when it is changed from a PUT to a POST.",
          "fix_version": "7.64.0-4+deb10u4",
          "references": []
        },
        {
          "id": "CVE-2021-22946",
          "severity": "High",
          "description": "A user can tell curl >= 7.20.0 and <= 7.78.0 to require a successful upgrade to TLS when speaking to an IMAP, POP3 or FTP server (`--ssl-reqd` on the command line or`CURLOPT_USE_SSL` set to `CURLUSESSL_CONTROL` or `CURLUSESSL_ALL` withlibcurl). This requirement could be bypassed if the server would return a properly crafted but perfectly legitimate response.This flaw would then make curl silently continue its operations **withoutTLS** contrary to the instructions and expectations, exposing possibly sensitive data in clear text over the network.",
          "fix_version": "7.64.0-4+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2022-22576",
          "severity": "High",
          "description": "An improper authentication vulnerability exists in curl 7.33.0 to and including 7.82.0 which might allow reuse OAUTH2-authenticated connections without properly making sure that the connection was authenticated with the same credentials as set for this transfer. This affects SASL-enabled protocols: SMPTP(S), IMAP(S), POP3(S) and LDAP(S) (openldap only).",
          "fix_version": "7.64.0-4+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2022-27781",
          "severity": "High",
          "description": "libcurl provides the `CURLOPT_CERTINFO` option to allow applications torequest details to be returned about a server's certificate chain.Due to an erroneous function, a malicious server could make libcurl built withNSS get stuck in a never-ending busy-loop when trying to retrieve thatinformation.",
          "fix_version": "7.64.0-4+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2022-27782",
          "severity": "High",
          "description": "libcurl would reuse a previously created connection even when a TLS or SSHrelated option had been changed that should have prohibited reuse.libcurl keeps previously used connections in a connection pool for subsequenttransfers to reuse if one of them matches the setup. However, several TLS andSSH settings were left out from the configuration match checks, making themmatch too easily.",
          "fix_version": "7.64.0-4+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2023-27533",
          "severity": "High",
          "description": "A vulnerability in input validation exists in curl <8.0 during communication using the TELNET protocol may allow an attacker to pass on maliciously crafted user name and \"telnet options\" during server negotiation. The lack of proper input scrubbing allows an attacker to send content or perform option negotiation without the application's intent. This vulnerability could be exploited if an application allows user input, thereby enabling attackers to execute arbitrary code on the system.",
          "fix_version": "7.64.0-4+deb10u6",
          "references": []
        },
        {
          "id": "CVE-2023-27534",
          "severity": "High",
          "description": "A path traversal vulnerability exists in curl <8.0.0 SFTP implementation causes the tilde (~) character to be wrongly replaced when used as a prefix in the first path element, in addition to its intended use as the first element to indicate a path relative to the user's home directory. Attackers can exploit this flaw to bypass filtering or execute arbitrary code by crafting a path like /~2/foo while accessing a server with a specific user.",
          "fix_version": "7.64.0-4+deb10u9",
          "references": []
        },
        {
          "id": "CVE-2024-2398",
          "severity": "High",
          "description": "When an application tells libcurl it wants to allow HTTP/2 server push, and the amount of received headers for the push surpasses the maximum allowed limit (1000), libcurl aborts the server push. When aborting, libcurl inadvertently does not free all the previously allocated headers and instead leaks the memory.  Further, this error condition fails silently and is therefore not easily detected by an application.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2021-22947",
          "severity": "Medium",
          "description": "When curl >= 7.20.0 and <= 7.78.0 connects to an IMAP or POP3 server to retrieve data using STARTTLS to upgrade to TLS security, the server can respond and send back multiple responses at once that curl caches. curl would then upgrade to TLS but not flush the in-queue of cached responses but instead continue using and trustingthe responses it got *before* the TLS handshake as if they were authenticated.Using this flaw, it allows a Man-In-The-Middle attacker to first inject the fake responses, then pass-through the TLS traffic from the legitimate server and trick curl into sending data back to the user thinking the attacker's injected data comes from the TLS-protected server.",
          "fix_version": "7.64.0-4+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2022-27774",
          "severity": "Medium",
          "description": "An insufficiently protected credentials vulnerability exists in curl 4.9 to and include curl 7.82.0 are affected that could allow an attacker to extract credentials when follows HTTP(S) redirects is used with authentication could leak credentials to other services that exist on different protocols or port numbers.",
          "fix_version": "7.64.0-4+deb10u4",
          "references": []
        },
        {
          "id": "CVE-2022-27776",
          "severity": "Medium",
          "description": "A insufficiently protected credentials vulnerability in fixed in curl 7.83.0 might leak authentication or cookie header data on HTTP redirects to the same host but another port number.",
          "fix_version": "7.64.0-4+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2022-32206",
          "severity": "Medium",
          "description": "curl < 7.84.0 supports \"chained\" HTTP compression algorithms, meaning that a serverresponse can be compressed multiple times and potentially with different algorithms. The number of acceptable \"links\" in this \"decompression chain\" was unbounded, allowing a malicious server to insert a virtually unlimited number of compression steps.The use of such a decompression chain could result in a \"malloc bomb\", makingcurl end up spending enormous amounts of allocated heap memory, or trying toand returning out of memory errors.",
          "fix_version": "7.64.0-4+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2022-32208",
          "severity": "Medium",
          "description": "When curl < 7.84.0 does FTP transfers secured by krb5, it handles message verification failures wrongly. This flaw makes it possible for a Man-In-The-Middle attack to go unnoticed and even allows it to inject data to the client.",
          "fix_version": "7.64.0-4+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2022-43552",
          "severity": "Medium",
          "description": "A use after free vulnerability exists in curl <7.87.0. Curl can be asked to *tunnel* virtually all protocols it supports through an HTTP proxy. HTTP proxies can (and often do) deny such tunnel operations. When getting denied to tunnel the specific protocols SMB or TELNET, curl would use a heap-allocated struct after it had been freed, in its transfer shutdown code path.",
          "fix_version": "7.64.0-4+deb10u4",
          "references": []
        },
        {
          "id": "CVE-2023-23916",
          "severity": "Medium",
          "description": "An allocation of resources without limits or throttling vulnerability exists in curl <v7.88.0 based on the \"chained\" HTTP compression algorithms, meaning that a server response can be compressed multiple times and potentially with differentalgorithms. The number of acceptable \"links\" in this \"decompression chain\" wascapped, but the cap was implemented on a per-header basis allowing a maliciousserver to insert a virtually unlimited number of compression steps simply byusing many headers. The use of such a decompression chain could result in a \"malloc bomb\", making curl end up spending enormous amounts of allocated heap memory, or trying to and returning out of memory errors.",
          "fix_version": "7.64.0-4+deb10u5",
          "references": []
        },
        {
          "id": "CVE-2023-27535",
          "severity": "Medium",
          "description": "An authentication bypass vulnerability exists in libcurl <8.0.0 in the FTP connection reuse feature that can result in wrong credentials being used during subsequent transfers. Previously created connections are kept in a connection pool for reuse if they match the current setup. However, certain FTP settings such as CURLOPT_FTP_ACCOUNT, CURLOPT_FTP_ALTERNATIVE_TO_USER, CURLOPT_FTP_SSL_CCC, and CURLOPT_USE_SSL were not included in the configuration match checks, causing them to match too easily. This could lead to libcurl using the wrong credentials when performing a transfer, potentially allowing unauthorized access to sensitive information.",
          "fix_version": "7.64.0-4+deb10u6",
          "references": []
        },
        {
          "id": "CVE-2023-27536",
          "severity": "Medium",
          "description": "An authentication bypass vulnerability exists libcurl <8.0.0 in the connection reuse feature which can reuse previously established connections with incorrect user permissions due to a failure to check for changes in the CURLOPT_GSSAPI_DELEGATION option. This vulnerability affects krb5/kerberos/negotiate/GSSAPI transfers and could potentially result in unauthorized access to sensitive information. The safest option is to not reuse connections if the CURLOPT_GSSAPI_DELEGATION option has been changed.",
          "fix_version": "7.64.0-4+deb10u6",
          "references": []
        },
        {
          "id": "CVE-2023-27538",
          "severity": "Medium",
          "description": "An authentication bypass vulnerability exists in libcurl prior to v8.0.0 where it reuses a previously established SSH connection despite the fact that an SSH option was modified, which should have prevented reuse. libcurl maintains a pool of previously used connections to reuse them for subsequent transfers if the configurations match. However, two SSH settings were omitted from the configuration check, allowing them to match easily, potentially leading to the reuse of an inappropriate connection.",
          "fix_version": "7.64.0-4+deb10u6",
          "references": []
        },
        {
          "id": "CVE-2023-28321",
          "severity": "Medium",
          "description": "An improper certificate validation vulnerability exists in curl <v8.1.0 in the way it supports matching of wildcard patterns when listed as \"Subject Alternative Name\" in TLS server certificates. curl can be built to use its own name matching function for TLS rather than one provided by a TLS library. This private wildcard matching function would match IDN (International Domain Name) hosts incorrectly and could as a result accept patterns that otherwise should mismatch. IDN hostnames are converted to puny code before used for certificate checks. Puny coded names always start with `xn--` and should not be allowed to pattern match, but the wildcard check in curl could still check for `x*`, which would match even though the IDN name most likely contained nothing even resembling an `x`.",
          "fix_version": "7.64.0-4+deb10u7",
          "references": []
        },
        {
          "id": "CVE-2023-46218",
          "severity": "Medium",
          "description": "This flaw allows a malicious HTTP server to set \"super cookies\" in curl that are then passed back to more origins than what is otherwise allowed or possible. This allows a site to set cookies that then would get sent to different and unrelated sites and domains.  It could do this by exploiting a mixed case flaw in curl's function that verifies a given cookie domain against the Public Suffix List (PSL). For example a cookie could be set with `domain=co.UK` when the URL used a lower case hostname `curl.co.uk`, even though `co.uk` is listed as a PSL domain.",
          "fix_version": "7.64.0-4+deb10u8",
          "references": []
        },
        {
          "id": "CVE-2021-22898",
          "severity": "Low",
          "description": "curl 7.7 through 7.76.1 suffers from an information disclosure when the `-t` command line option, known as `CURLOPT_TELNETOPTIONS` in libcurl, is used to send variable=content pairs to TELNET servers. Due to a flaw in the option parser for sending NEW_ENV variables, libcurl could be made to pass on uninitialized data from a stack based buffer to the server, resulting in potentially revealing sensitive internal information to the server using a clear-text network protocol.",
          "fix_version": "7.64.0-4+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2021-22924",
          "severity": "Low",
          "description": "libcurl keeps previously used connections in a connection pool for subsequenttransfers to reuse, if one of them matches the setup.Due to errors in the logic, the config matching function did not take 'issuercert' into account and it compared the involved paths *case insensitively*,which could lead to libcurl reusing wrong connections.File paths are, or can be, case sensitive on many systems but not all, and caneven vary depending on used file systems.The comparison also didn't include the 'issuer cert' which a transfer can setto qualify how to verify the server certificate.",
          "fix_version": "7.64.0-4+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2022-35252",
          "severity": "Low",
          "description": "When curl is used to retrieve and parse cookies from a HTTP(S) server, itaccepts cookies using control codes that when later are sent back to a HTTPserver might make the server return 400 responses. Effectively allowing a\"sister site\" to deny service to all siblings.",
          "fix_version": "7.64.0-4+deb10u4",
          "references": []
        },
        {
          "id": "CVE-2023-28322",
          "severity": "Low",
          "description": "An information disclosure vulnerability exists in curl <v8.1.0 when doing HTTP(S) transfers, libcurl might erroneously use the read callback (`CURLOPT_READFUNCTION`) to ask for data to send, even when the `CURLOPT_POSTFIELDS` option has been set, if the same handle previously wasused to issue a `PUT` request which used that callback. This flaw may surprise the application and cause it to misbehave and either send off the wrong data or use memory after free or similar in the second transfer. The problem exists in the logic for a reused handle when it is (expected to be) changed from a PUT to a POST.",
          "fix_version": "7.64.0-4+deb10u8",
          "references": []
        },
        {
          "id": "CVE-2023-38546",
          "severity": "Low",
          "description": "This flaw allows an attacker to insert cookies at will into a running program using libcurl, if the specific series of conditions are met.  libcurl performs transfers. In its API, an application creates \"easy handles\" that are the individual handles for single transfers.  libcurl provides a function call that duplicates en easy handle called [curl_easy_duphandle](https://curl.se/libcurl/c/curl_easy_duphandle.html).  If a transfer has cookies enabled when the handle is duplicated, the cookie-enable state is also cloned - but without cloning the actual cookies. If the source handle did not read any cookies from a specific file on disk, the cloned version of the handle would instead store the file name as `none` (using the four ASCII letters, no quotes).  Subsequent use of the cloned handle that does not explicitly set a source to load cookies from would then inadvertently load cookies from a file named `none` - if such a file exists and is readable in the current directory of the program using libcurl. And if using the correct file format of course.",
          "fix_version": "7.64.0-4+deb10u7",
          "references": []
        },
        {
          "id": "CVE-2020-19909",
          "severity": "Negligible",
          "description": "Integer overflow vulnerability in tool_operate.c in curl 7.65.2 via a large value as the retry delay. NOTE: many parties report that this has no direct security impact on the curl user; however, it may (in theory) cause a denial of service to associated systems or networks if, for example, --retry-delay is misinterpreted as a value much smaller than what was intended. This is not especially plausible because the overflow only happens if the user was trying to specify that curl should wait weeks (or longer) before trying to recover from a transient error.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2021-22922",
          "severity": "Negligible",
          "description": "When curl is instructed to download content using the metalink feature, thecontents is verified against a hash provided in the metalink XML file.The metalink XML file points out to the client how to get the same contentfrom a set of different URLs, potentially hosted by different servers and theclient can then download the file from one or several of them. In a serial orparallel manner.If one of the servers hosting the contents has been breached and the contentsof the specific file on that server is replaced with a modified payload, curlshould detect this when the hash of the file mismatches after a completeddownload. It should remove the contents and instead try getting the contentsfrom another URL. This is not done, and instead such a hash mismatch is onlymentioned in text and the potentially malicious content is kept in the file ondisk.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2021-22923",
          "severity": "Negligible",
          "description": "When curl is instructed to get content using the metalink feature, and a user name and password are used to download the metalink XML file, those same credentials are then subsequently passed on to each of the servers from which curl will download or try to download the contents from. Often contrary to the user's expectations and intentions and without telling the user it happened.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2023-28320",
          "severity": "Negligible",
          "description": "A denial of service vulnerability exists in curl <v8.1.0 in the way libcurl provides several different backends for resolving host names, selected at build time. If it is built to use the synchronous resolver, it allows name resolves to time-out slow operations using `alarm()` and `siglongjmp()`. When doing this, libcurl used a global buffer that was not mutex protected and a multi-threaded application might therefore crash or otherwise misbehave.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2024-2379",
          "severity": "Negligible",
          "description": "libcurl skips the certificate verification for a QUIC connection under certain conditions, when built to use wolfSSL. If told to use an unknown/bad cipher or curve, the error path accidentally skips the verification and returns OK, thus ignoring any certificate problems.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libdb5.3",
      "version": "5.3.28+dfsg1-0.5",
      "type": "library",
      "origin": "pkg:deb/debian/libdb5.3@5.3.28%2Bdfsg1-0.5?arch=amd64&distro=debian-10&upstream=db5.3",
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": [
        {
          "id": "CVE-2019-8457",
          "severity": "Negligible",
          "description": "SQLite3 from 3.6.0 to and including 3.27.2 is vulnerable to heap out-of-bound read in the rtreenode() function when handling invalid rtree tables.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libdebconfclient0",
      "version": "0.249",
      "type": "library",
      "origin": "pkg:deb/debian/libdebconfclient0@0.249?arch=amd64&distro=debian-10&upstream=cdebconf",
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "libexpat1",
      "version": "2.2.6-2+deb10u1",
      "type": "library",
      "origin": "pkg:deb/debian/libexpat1@2.2.6-2%2Bdeb10u1?arch=amd64&distro=debian-10&upstream=expat",
      "maintainer": null,
      "licenses": [
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2022-22822",
          "severity": "Critical",
          "description": "addBinding in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
          "fix_version": "2.2.6-2+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2022-22823",
          "severity": "Critical",
          "description": "build_model in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
          "fix_version": "2.2.6-2+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2022-22824",
          "severity": "Critical",
          "description": "defineAttribute in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
          "fix_version": "2.2.6-2+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2022-23852",
          "severity": "Critical",
          "description": "Expat (aka libexpat) before 2.4.4 has a signed integer overflow in XML_GetBuffer, for configurations with a nonzero XML_CONTEXT_BYTES.",
          "fix_version": "2.2.6-2+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2022-25235",
          "severity": "Critical",
          "description": "xmltok_impl.c in Expat (aka libexpat) before 2.4.5 lacks certain validation of encoding, such as checks for whether a UTF-8 character is valid in a certain context.",
          "fix_version": "2.2.6-2+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2022-25236",
          "severity": "Critical",
          "description": "xmlparse.c in Expat (aka libexpat) before 2.4.5 allows attackers to insert namespace-separator characters into namespace URIs.",
          "fix_version": "2.2.6-2+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2022-25315",
          "severity": "Critical",
          "description": "In Expat (aka libexpat) before 2.4.5, there is an integer overflow in storeRawNames.",
          "fix_version": "2.2.6-2+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2021-45960",
          "severity": "High",
          "description": "In Expat (aka libexpat) before 2.4.3, a left shift by 29 (or more) places in the storeAtts function in xmlparse.c can lead to realloc misbehavior (e.g., allocating too few bytes, or only freeing memory).",
          "fix_version": "2.2.6-2+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2021-46143",
          "severity": "High",
          "description": "In doProlog in xmlparse.c in Expat (aka libexpat) before 2.4.3, an integer overflow exists for m_groupSize.",
          "fix_version": "2.2.6-2+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2022-22825",
          "severity": "High",
          "description": "lookup in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
          "fix_version": "2.2.6-2+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2022-22826",
          "severity": "High",
          "description": "nextScaffoldPart in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
          "fix_version": "2.2.6-2+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2022-22827",
          "severity": "High",
          "description": "storeAtts in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
          "fix_version": "2.2.6-2+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2022-23990",
          "severity": "High",
          "description": "Expat (aka libexpat) before 2.4.4 has an integer overflow in the doProlog function.",
          "fix_version": "2.2.6-2+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2022-25314",
          "severity": "High",
          "description": "In Expat (aka libexpat) before 2.4.5, there is an integer overflow in copyString.",
          "fix_version": "2.2.6-2+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2022-40674",
          "severity": "High",
          "description": "libexpat before 2.4.9 has a use-after-free in the doContent function in xmlparse.c.",
          "fix_version": "2.2.6-2+deb10u5",
          "references": []
        },
        {
          "id": "CVE-2022-43680",
          "severity": "High",
          "description": "In libexpat through 2.4.9, there is a use-after free caused by overeager destruction of a shared DTD in XML_ExternalEntityParserCreate in out-of-memory situations.",
          "fix_version": "2.2.6-2+deb10u6",
          "references": []
        },
        {
          "id": "CVE-2023-52425",
          "severity": "High",
          "description": "libexpat through 2.5.0 allows a denial of service (resource consumption) because many full reparsings are required in the case of a large token for which multiple buffer fills are needed.",
          "fix_version": "2.2.6-2+deb10u7",
          "references": []
        },
        {
          "id": "CVE-2022-25313",
          "severity": "Medium",
          "description": "In Expat (aka libexpat) before 2.4.5, an attacker can trigger stack exhaustion in build_model via a large nesting depth in the DTD element.",
          "fix_version": "2.2.6-2+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2013-0340",
          "severity": "Negligible",
          "description": "expat 2.1.0 and earlier does not properly handle entities expansion unless an application developer uses the XML_SetEntityDeclHandler function, which allows remote attackers to cause a denial of service (resource consumption), send HTTP requests to intranet servers, or read arbitrary files via a crafted XML document, aka an XML External Entity (XXE) issue.  NOTE: it could be argued that because expat already provides the ability to disable external entity expansion, the responsibility for resolving this issue lies with application developers; according to this argument, this entry should be REJECTed, and each affected application would need its own CVE.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2023-52426",
          "severity": "Negligible",
          "description": "libexpat through 2.5.0 allows recursive XML Entity Expansion if XML_DTD is undefined at compile time.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2024-28757",
          "severity": "Negligible",
          "description": "libexpat through 2.6.1 allows an XML Entity Expansion attack when there is isolated use of external parsers (created via XML_ExternalEntityParserCreate).",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libext2fs2",
      "version": "1.44.5-1+deb10u3",
      "type": "library",
      "origin": "pkg:deb/debian/libext2fs2@1.44.5-1%2Bdeb10u3?arch=amd64&distro=debian-10&upstream=e2fsprogs",
      "maintainer": null,
      "licenses": [
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2022-1304",
          "severity": "High",
          "description": "An out-of-bounds read/write vulnerability was found in e2fsprogs 1.46.5. This issue leads to a segmentation fault and possibly arbitrary code execution via a specially crafted filesystem.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libfdisk1",
      "version": "2.33.1-0.1",
      "type": "library",
      "origin": "pkg:deb/debian/libfdisk1@2.33.1-0.1?arch=amd64&distro=debian-10&upstream=util-linux",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2021-37600",
          "severity": "Medium",
          "description": "An integer overflow in util-linux through 2.37.1 can potentially cause a buffer overflow if an attacker were able to use system resources in a way that leads to a large number in the /proc/sysvipc/sem file. NOTE: this is unexploitable in GNU C Library environments, and possibly in all realistic environments.",
          "fix_version": "2.33.1-0.1+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2024-28085",
          "severity": "Low",
          "description": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
          "fix_version": "2.33.1-0.1+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2022-0563",
          "severity": "Negligible",
          "description": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libffi6",
      "version": "3.2.1-9",
      "type": "library",
      "origin": "pkg:deb/debian/libffi6@3.2.1-9?arch=amd64&distro=debian-10&upstream=libffi",
      "maintainer": null,
      "licenses": [
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "libfontconfig1",
      "version": "2.13.1-2",
      "type": "library",
      "origin": "pkg:deb/debian/libfontconfig1@2.13.1-2?arch=amd64&distro=debian-10&upstream=fontconfig",
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "libfreetype6",
      "version": "2.9.1-3+deb10u2",
      "type": "library",
      "origin": "pkg:deb/debian/libfreetype6@2.9.1-3%2Bdeb10u2?arch=amd64&distro=debian-10&upstream=freetype",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2022-27404",
          "severity": "Critical",
          "description": "FreeType commit 1e2eb65048f75c64b68708efed6ce904c31f3b2f was discovered to contain a heap buffer overflow via the function sfnt_init_face.",
          "fix_version": "2.9.1-3+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2022-27405",
          "severity": "High",
          "description": "FreeType commit 53dfdcd8198d2b3201a23c4bad9190519ba918db was discovered to contain a segmentation violation via the function FNT_Size_Request.",
          "fix_version": "2.9.1-3+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2022-27406",
          "severity": "High",
          "description": "FreeType commit 22a0cccb4d9d002f33c1ba7a4b36812c7d4f46b5 was discovered to contain a segmentation violation via the function FT_Request_Size.",
          "fix_version": "2.9.1-3+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2022-31782",
          "severity": "Negligible",
          "description": "ftbench.c in FreeType Demo Programs through 2.12.1 has a heap-based buffer overflow.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libgcc1",
      "version": "1:8.3.0-6",
      "type": "library",
      "origin": "pkg:deb/debian/libgcc1@1%3A8.3.0-6?arch=amd64&distro=debian-10&upstream=gcc-8%408.3.0-6",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2018-12886",
          "severity": "High",
          "description": "stack_protect_prologue in cfgexpand.c and stack_protect_epilogue in function.c in GNU Compiler Collection (GCC) 4.1 through 8 (under certain circumstances) generate instruction sequences when targeting ARM targets that spill the address of the stack protector guard, which allows an attacker to bypass the protection of -fstack-protector, -fstack-protector-all, -fstack-protector-strong, and -fstack-protector-explicit against stack overflow by controlling what the stack canary is compared against.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2019-15847",
          "severity": "High",
          "description": "The POWER9 backend in GNU Compiler Collection (GCC) before version 10 could optimize multiple calls of the __builtin_darn intrinsic into a single call, thus reducing the entropy of the random number generator. This occurred because a volatile operation was not specified. For example, within a single execution of a program, the output of every __builtin_darn() call may be the same.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2023-4039",
          "severity": "Medium",
          "description": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains  that target AArch64 allows an attacker to exploit an existing buffer  overflow in dynamically-sized local variables in your application  without this being detected. This stack-protector failure only applies  to C99-style dynamically-sized local variables or those created using  alloca(). The stack-protector operates as intended for statically-sized  local variables.  The default behavior when the stack-protector  detects an overflow is to terminate your application, resulting in  controlled loss of availability. An attacker who can exploit a buffer  overflow without triggering the stack-protector might be able to change  program flow control to cause an uncontrolled loss of availability or to  go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libgcrypt20",
      "version": "1.8.4-5",
      "type": "library",
      "origin": "pkg:deb/debian/libgcrypt20@1.8.4-5?arch=amd64&distro=debian-10",
      "maintainer": null,
      "licenses": [
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2021-33560",
          "severity": "High",
          "description": "Libgcrypt before 1.8.8 and 1.9.x before 1.9.3 mishandles ElGamal encryption because it lacks exponent blinding to address a side-channel attack against mpi_powm, and the window size is not chosen appropriately. This, for example, affects use of ElGamal in OpenPGP.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2019-13627",
          "severity": "Medium",
          "description": "It was discovered that there was a ECDSA timing attack in the libgcrypt20 cryptographic library. Version affected: 1.8.4-5, 1.7.6-2+deb9u3, and 1.6.3-2+deb8u4. Versions fixed: 1.8.5-2 and 1.6.3-2+deb8u7.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2021-40528",
          "severity": "Medium",
          "description": "The ElGamal implementation in Libgcrypt before 1.9.4 allows plaintext recovery because, during interaction between two cryptographic libraries, a certain dangerous combination of the prime defined by the receiver's public key, the generator defined by the receiver's public key, and the sender's ephemeral exponents can lead to a cross-configuration attack against OpenPGP.",
          "fix_version": "1.8.4-5+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2024-2236",
          "severity": "Medium",
          "description": "A timing-based side-channel flaw was found in libgcrypt's RSA implementation. This issue may allow a remote attacker to initiate a Bleichenbacher-style attack, which can lead to the decryption of RSA ciphertexts.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2018-6829",
          "severity": "Negligible",
          "description": "cipher/elgamal.c in Libgcrypt through 1.8.2, when used to encrypt messages directly, improperly encodes plaintexts, which allows attackers to obtain sensitive information by reading ciphertext data (i.e., it does not have semantic security in face of a ciphertext-only attack). The Decisional Diffie-Hellman (DDH) assumption does not hold for Libgcrypt's ElGamal implementation.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libgd3",
      "version": "2.2.5-5.2",
      "type": "library",
      "origin": "pkg:deb/debian/libgd3@2.2.5-5.2?arch=amd64&distro=debian-10&upstream=libgd2",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2017-6363",
          "severity": "High",
          "description": "In the GD Graphics Library (aka LibGD) through 2.2.5, there is a heap-based buffer over-read in tiffWriter in gd_tiff.c. NOTE: the vendor says \"In my opinion this issue should not have a CVE, since the GD and GD2 formats are documented to be 'obsolete, and should only be used for development and testing purposes.'",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2018-14553",
          "severity": "High",
          "description": "gdImageClone in gd.c in libgd 2.1.0-rc2 through 2.2.5 has a NULL pointer dereference allowing attackers to crash an application via a specific function call sequence. Only affects PHP when linked with an external libgd (not bundled).",
          "fix_version": "2.2.5-5.2+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2021-38115",
          "severity": "Medium",
          "description": "read_header_tga in gd_tga.c in the GD Graphics Library (aka LibGD) through 2.3.2 allows remote attackers to cause a denial of service (out-of-bounds read) via a crafted TGA file.",
          "fix_version": "2.2.5-5.2+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2021-40812",
          "severity": "Medium",
          "description": "The GD Graphics Library (aka LibGD) through 2.3.2 has an out-of-bounds read because of the lack of certain gdGetBuf and gdPutBuf return value checks.",
          "fix_version": "2.2.5-5.2+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2021-40145",
          "severity": "Negligible",
          "description": "gdImageGd2Ptr in gd_gd2.c in the GD Graphics Library (aka LibGD) through 2.3.2 has a double free. NOTE: the vendor's position is \"The GD2 image format is a proprietary image format of libgd. It has to be regarded as being obsolete, and should only be used for development and testing purposes.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libgeoip1",
      "version": "1.6.12-1",
      "type": "library",
      "origin": "pkg:deb/debian/libgeoip1@1.6.12-1?arch=amd64&distro=debian-10&upstream=geoip",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "libgmp10",
      "version": "2:6.1.2+dfsg-4",
      "type": "library",
      "origin": "pkg:deb/debian/libgmp10@2%3A6.1.2%2Bdfsg-4?arch=amd64&distro=debian-10&upstream=gmp",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2021-43618",
          "severity": "High",
          "description": "GNU Multiple Precision Arithmetic Library (GMP) through 6.2.1 has an mpz/inp_raw.c integer overflow and resultant buffer overflow via crafted input, leading to a segmentation fault on 32-bit platforms.",
          "fix_version": "2:6.1.2+dfsg-4+deb10u1",
          "references": []
        }
      ]
    },
    {
      "name": "libgnutls30",
      "version": "3.6.7-4+deb10u6",
      "type": "library",
      "origin": "pkg:deb/debian/libgnutls30@3.6.7-4%2Bdeb10u6?arch=amd64&distro=debian-10&upstream=gnutls28",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2021-20231",
          "severity": "Critical",
          "description": "A flaw was found in gnutls. A use after free issue in client sending key_share extension may lead to memory corruption and other consequences.",
          "fix_version": "3.6.7-4+deb10u7",
          "references": []
        },
        {
          "id": "CVE-2021-20232",
          "severity": "Critical",
          "description": "A flaw was found in gnutls. A use after free issue in client_send_params in lib/ext/pre_shared_key.c may lead to memory corruption and other potential consequences.",
          "fix_version": "3.6.7-4+deb10u7",
          "references": []
        },
        {
          "id": "CVE-2020-24659",
          "severity": "High",
          "description": "An issue was discovered in GnuTLS before 3.6.15. A server can trigger a NULL pointer dereference in a TLS 1.3 client if a no_renegotiation alert is sent with unexpected timing, and then an invalid second handshake occurs. The crash happens in the application's error handling path, where the gnutls_deinit function is called after detecting a handshake failure.",
          "fix_version": "3.6.7-4+deb10u7",
          "references": []
        },
        {
          "id": "CVE-2022-2509",
          "severity": "High",
          "description": "A vulnerability found in gnutls. This security flaw happens because of a double free error occurs during verification of pkcs7 signatures in gnutls_pkcs7_verify function.",
          "fix_version": "3.6.7-4+deb10u9",
          "references": []
        },
        {
          "id": "CVE-2023-0361",
          "severity": "High",
          "description": "A timing side-channel in the handling of RSA ClientKeyExchange messages was discovered in GnuTLS. This side-channel can be sufficient to recover the key encrypted in the RSA ciphertext across a network in a Bleichenbacher style attack. To achieve a successful decryption the attacker would need to send a large amount of specially crafted messages to the vulnerable server. By recovering the secret from the ClientKeyExchange message, the attacker would be able to decrypt the application data exchanged over that connection.",
          "fix_version": "3.6.7-4+deb10u10",
          "references": []
        },
        {
          "id": "CVE-2024-0553",
          "severity": "High",
          "description": "A vulnerability was found in GnuTLS. The response times to malformed ciphertexts in RSA-PSK ClientKeyExchange differ from the response times of ciphertexts with correct PKCS#1 v1.5 padding. This issue may allow a remote attacker to perform a timing side-channel attack in the RSA-PSK key exchange, potentially leading to the leakage of sensitive data. CVE-2024-0553 is designated as an incomplete resolution for CVE-2023-5981.",
          "fix_version": "3.6.7-4+deb10u12",
          "references": []
        },
        {
          "id": "CVE-2021-4209",
          "severity": "Medium",
          "description": "A NULL pointer dereference flaw was found in GnuTLS. As Nettle's hash update functions internally call memcpy, providing zero-length input may cause undefined behavior. This flaw leads to a denial of service after authentication in rare circumstances.",
          "fix_version": "3.6.7-4+deb10u9",
          "references": []
        },
        {
          "id": "CVE-2023-5981",
          "severity": "Medium",
          "description": "A vulnerability was found that the response times to malformed ciphertexts in RSA-PSK ClientKeyExchange differ from response times of ciphertexts with correct PKCS#1 v1.5 padding.",
          "fix_version": "3.6.7-4+deb10u11",
          "references": []
        },
        {
          "id": "CVE-2011-3389",
          "severity": "Negligible",
          "description": "The SSL protocol, as used in certain configurations in Microsoft Windows and Microsoft Internet Explorer, Mozilla Firefox, Google Chrome, Opera, and other products, encrypts data by using CBC mode with chained initialization vectors, which allows man-in-the-middle attackers to obtain plaintext HTTP headers via a blockwise chosen-boundary attack (BCBA) on an HTTPS session, in conjunction with JavaScript code that uses (1) the HTML5 WebSocket API, (2) the Java URLConnection API, or (3) the Silverlight WebClient API, aka a \"BEAST\" attack.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libgpg-error0",
      "version": "1.35-1",
      "type": "library",
      "origin": "pkg:deb/debian/libgpg-error0@1.35-1?arch=amd64&distro=debian-10&upstream=libgpg-error",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "libgssapi-krb5-2",
      "version": "1.17-3+deb10u1",
      "type": "library",
      "origin": "pkg:deb/debian/libgssapi-krb5-2@1.17-3%2Bdeb10u1?arch=amd64&distro=debian-10&upstream=krb5",
      "maintainer": null,
      "licenses": [
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2021-36222",
          "severity": "High",
          "description": "ec_verify in kdc/kdc_preauth_ec.c in the Key Distribution Center (KDC) in MIT Kerberos 5 (aka krb5) before 1.18.4 and 1.19.x before 1.19.2 allows remote attackers to cause a NULL pointer dereference and daemon crash. This occurs because a return value is not properly managed in a certain situation.",
          "fix_version": "1.17-3+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2022-42898",
          "severity": "High",
          "description": "PAC parsing in MIT Kerberos 5 (aka krb5) before 1.19.4 and 1.20.x before 1.20.1 has integer overflows that may lead to remote code execution (in KDC, kadmind, or a GSS or Kerberos application server) on 32-bit platforms (which have a resultant heap-based buffer overflow), and cause a denial of service on other platforms. This occurs in krb5_pac_parse in lib/krb5/krb/pac.c. Heimdal before 7.7.1 has \"a similar bug.\"",
          "fix_version": "1.17-3+deb10u5",
          "references": []
        },
        {
          "id": "CVE-2024-26461",
          "severity": "High",
          "description": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/lib/gssapi/krb5/k5sealv3.c.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2021-37750",
          "severity": "Medium",
          "description": "The Key Distribution Center (KDC) in MIT Kerberos 5 (aka krb5) before 1.18.5 and 1.19.x before 1.19.3 has a NULL pointer dereference in kdc/do_tgs_req.c via a FAST inner body that lacks a server field.",
          "fix_version": "1.17-3+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2023-36054",
          "severity": "Medium",
          "description": "lib/kadm5/kadm_rpc_xdr.c in MIT Kerberos 5 (aka krb5) before 1.20.2 and 1.21.x before 1.21.1 frees an uninitialized pointer. A remote authenticated user can trigger a kadmind crash. This occurs because _xdr_kadm5_principal_ent_rec does not validate the relationship between n_key_data and the key_data array count.",
          "fix_version": "1.17-3+deb10u6",
          "references": []
        },
        {
          "id": "CVE-2024-26458",
          "severity": "Medium",
          "description": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak in /krb5/src/lib/rpc/pmap_rmt.c.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2024-26462",
          "severity": "Medium",
          "description": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/kdc/ndr.c.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2018-5709",
          "severity": "Negligible",
          "description": "An issue was discovered in MIT Kerberos 5 (aka krb5) through 1.16. There is a variable \"dbentry->n_key_data\" in kadmin/dbutil/dump.c that can store 16-bit data but unknowingly the developer has assigned a \"u4\" variable to it, which is for 32-bit data. An attacker can use this vulnerability to affect other artifacts of the database as we know that a Kerberos database dump file contains trusted data.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libhogweed4",
      "version": "3.4.1-1",
      "type": "library",
      "origin": "pkg:deb/debian/libhogweed4@3.4.1-1?arch=amd64&distro=debian-10&upstream=nettle",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2021-20305",
          "severity": "High",
          "description": "A flaw was found in Nettle in versions before 3.7.2, where several Nettle signature verification functions (GOST DSA, EDDSA & ECDSA) result in the Elliptic Curve Cryptography point (ECC) multiply function being called with out-of-range scalers, possibly resulting in incorrect results. This flaw allows an attacker to force an invalid signature, causing an assertion failure or possible validation. The highest threat to this vulnerability is to confidentiality, integrity, as well as system availability.",
          "fix_version": "3.4.1-1+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2021-3580",
          "severity": "High",
          "description": "A flaw was found in the way nettle's RSA decryption functions handled specially crafted ciphertext. An attacker could use this flaw to provide a manipulated ciphertext leading to application crash and denial of service.",
          "fix_version": "3.4.1-1+deb10u1",
          "references": []
        }
      ]
    },
    {
      "name": "libicu63",
      "version": "63.1-6+deb10u1",
      "type": "library",
      "origin": "pkg:deb/debian/libicu63@63.1-6%2Bdeb10u1?arch=amd64&distro=debian-10&upstream=icu",
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": [
        {
          "id": "CVE-2020-21913",
          "severity": "Medium",
          "description": "International Components for Unicode (ICU-20850) v66.1 was discovered to contain a use after free bug in the pkg_createWithAssemblyCode function in the file tools/pkgdata/pkgdata.cpp.",
          "fix_version": "63.1-6+deb10u2",
          "references": []
        }
      ]
    },
    {
      "name": "libidn2-0",
      "version": "2.0.5-1+deb10u1",
      "type": "library",
      "origin": "pkg:deb/debian/libidn2-0@2.0.5-1%2Bdeb10u1?arch=amd64&distro=debian-10&upstream=libidn2",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2019-12290",
          "severity": "High",
          "description": "GNU libidn2 before 2.2.0 fails to perform the roundtrip checks specified in RFC3490 Section 4.2 when converting A-labels to U-labels. This makes it possible in some circumstances for one domain to impersonate another. By creating a malicious domain that matches a target domain except for the inclusion of certain punycoded Unicode characters (that would be discarded when converted first to a Unicode label and then back to an ASCII label), arbitrary domains can be impersonated.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libintl",
      "version": "UNKNOWN",
      "type": "library",
      "origin": "pkg:maven/libintl/libintl",
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "libjbig0",
      "version": "2.1-3.1+b2",
      "type": "library",
      "origin": "pkg:deb/debian/libjbig0@2.1-3.1%2Bb2?arch=amd64&distro=debian-10&upstream=jbigkit%402.1-3.1",
      "maintainer": null,
      "licenses": [
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2017-9937",
          "severity": "Negligible",
          "description": "In LibTIFF 4.0.8, there is a memory malloc failure in tif_jbig.c. A crafted TIFF document can lead to an abort resulting in a remote denial of service attack.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libjpeg62-turbo",
      "version": "1:1.5.2-2+deb10u1",
      "type": "library",
      "origin": "pkg:deb/debian/libjpeg62-turbo@1%3A1.5.2-2%2Bdeb10u1?arch=amd64&distro=debian-10&upstream=libjpeg-turbo",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2020-35538",
          "severity": "Medium",
          "description": "A crafted input file could cause a null pointer dereference in jcopy_sample_rows() when processed by libjpeg-turbo.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2021-46822",
          "severity": "Medium",
          "description": "The PPM reader in libjpeg-turbo through 2.0.90 mishandles use of tjLoadImage for loading a 16-bit binary PPM file into a grayscale buffer and loading a 16-bit binary PGM file into an RGB buffer. This is related to a heap-based buffer overflow in the get_word_rgb_row function in rdppm.c.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2017-15232",
          "severity": "Negligible",
          "description": "libjpeg-turbo 1.5.2 has a NULL Pointer Dereference in jdpostct.c and jquant1.c via a crafted JPEG file.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2018-11813",
          "severity": "Negligible",
          "description": "libjpeg 9c has a large loop because read_pixel in rdtarga.c mishandles EOF.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2020-17541",
          "severity": "Negligible",
          "description": "Libjpeg-turbo all version have a stack-based buffer overflow in the \"transform\" component. A remote attacker can send a malformed jpeg file to the service and cause arbitrary code execution or denial of service of the target service.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libk5crypto3",
      "version": "1.17-3+deb10u1",
      "type": "library",
      "origin": "pkg:deb/debian/libk5crypto3@1.17-3%2Bdeb10u1?arch=amd64&distro=debian-10&upstream=krb5",
      "maintainer": null,
      "licenses": [
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2021-36222",
          "severity": "High",
          "description": "ec_verify in kdc/kdc_preauth_ec.c in the Key Distribution Center (KDC) in MIT Kerberos 5 (aka krb5) before 1.18.4 and 1.19.x before 1.19.2 allows remote attackers to cause a NULL pointer dereference and daemon crash. This occurs because a return value is not properly managed in a certain situation.",
          "fix_version": "1.17-3+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2022-42898",
          "severity": "High",
          "description": "PAC parsing in MIT Kerberos 5 (aka krb5) before 1.19.4 and 1.20.x before 1.20.1 has integer overflows that may lead to remote code execution (in KDC, kadmind, or a GSS or Kerberos application server) on 32-bit platforms (which have a resultant heap-based buffer overflow), and cause a denial of service on other platforms. This occurs in krb5_pac_parse in lib/krb5/krb/pac.c. Heimdal before 7.7.1 has \"a similar bug.\"",
          "fix_version": "1.17-3+deb10u5",
          "references": []
        },
        {
          "id": "CVE-2024-26461",
          "severity": "High",
          "description": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/lib/gssapi/krb5/k5sealv3.c.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2021-37750",
          "severity": "Medium",
          "description": "The Key Distribution Center (KDC) in MIT Kerberos 5 (aka krb5) before 1.18.5 and 1.19.x before 1.19.3 has a NULL pointer dereference in kdc/do_tgs_req.c via a FAST inner body that lacks a server field.",
          "fix_version": "1.17-3+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2023-36054",
          "severity": "Medium",
          "description": "lib/kadm5/kadm_rpc_xdr.c in MIT Kerberos 5 (aka krb5) before 1.20.2 and 1.21.x before 1.21.1 frees an uninitialized pointer. A remote authenticated user can trigger a kadmind crash. This occurs because _xdr_kadm5_principal_ent_rec does not validate the relationship between n_key_data and the key_data array count.",
          "fix_version": "1.17-3+deb10u6",
          "references": []
        },
        {
          "id": "CVE-2024-26458",
          "severity": "Medium",
          "description": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak in /krb5/src/lib/rpc/pmap_rmt.c.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2024-26462",
          "severity": "Medium",
          "description": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/kdc/ndr.c.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2018-5709",
          "severity": "Negligible",
          "description": "An issue was discovered in MIT Kerberos 5 (aka krb5) through 1.16. There is a variable \"dbentry->n_key_data\" in kadmin/dbutil/dump.c that can store 16-bit data but unknowingly the developer has assigned a \"u4\" variable to it, which is for 32-bit data. An attacker can use this vulnerability to affect other artifacts of the database as we know that a Kerberos database dump file contains trusted data.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libkeyutils1",
      "version": "1.6-6",
      "type": "library",
      "origin": "pkg:deb/debian/libkeyutils1@1.6-6?arch=amd64&distro=debian-10&upstream=keyutils",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "libkrb5-3",
      "version": "1.17-3+deb10u1",
      "type": "library",
      "origin": "pkg:deb/debian/libkrb5-3@1.17-3%2Bdeb10u1?arch=amd64&distro=debian-10&upstream=krb5",
      "maintainer": null,
      "licenses": [
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2021-36222",
          "severity": "High",
          "description": "ec_verify in kdc/kdc_preauth_ec.c in the Key Distribution Center (KDC) in MIT Kerberos 5 (aka krb5) before 1.18.4 and 1.19.x before 1.19.2 allows remote attackers to cause a NULL pointer dereference and daemon crash. This occurs because a return value is not properly managed in a certain situation.",
          "fix_version": "1.17-3+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2022-42898",
          "severity": "High",
          "description": "PAC parsing in MIT Kerberos 5 (aka krb5) before 1.19.4 and 1.20.x before 1.20.1 has integer overflows that may lead to remote code execution (in KDC, kadmind, or a GSS or Kerberos application server) on 32-bit platforms (which have a resultant heap-based buffer overflow), and cause a denial of service on other platforms. This occurs in krb5_pac_parse in lib/krb5/krb/pac.c. Heimdal before 7.7.1 has \"a similar bug.\"",
          "fix_version": "1.17-3+deb10u5",
          "references": []
        },
        {
          "id": "CVE-2024-26461",
          "severity": "High",
          "description": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/lib/gssapi/krb5/k5sealv3.c.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2021-37750",
          "severity": "Medium",
          "description": "The Key Distribution Center (KDC) in MIT Kerberos 5 (aka krb5) before 1.18.5 and 1.19.x before 1.19.3 has a NULL pointer dereference in kdc/do_tgs_req.c via a FAST inner body that lacks a server field.",
          "fix_version": "1.17-3+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2023-36054",
          "severity": "Medium",
          "description": "lib/kadm5/kadm_rpc_xdr.c in MIT Kerberos 5 (aka krb5) before 1.20.2 and 1.21.x before 1.21.1 frees an uninitialized pointer. A remote authenticated user can trigger a kadmind crash. This occurs because _xdr_kadm5_principal_ent_rec does not validate the relationship between n_key_data and the key_data array count.",
          "fix_version": "1.17-3+deb10u6",
          "references": []
        },
        {
          "id": "CVE-2024-26458",
          "severity": "Medium",
          "description": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak in /krb5/src/lib/rpc/pmap_rmt.c.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2024-26462",
          "severity": "Medium",
          "description": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/kdc/ndr.c.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2018-5709",
          "severity": "Negligible",
          "description": "An issue was discovered in MIT Kerberos 5 (aka krb5) through 1.16. There is a variable \"dbentry->n_key_data\" in kadmin/dbutil/dump.c that can store 16-bit data but unknowingly the developer has assigned a \"u4\" variable to it, which is for 32-bit data. An attacker can use this vulnerability to affect other artifacts of the database as we know that a Kerberos database dump file contains trusted data.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libkrb5support0",
      "version": "1.17-3+deb10u1",
      "type": "library",
      "origin": "pkg:deb/debian/libkrb5support0@1.17-3%2Bdeb10u1?arch=amd64&distro=debian-10&upstream=krb5",
      "maintainer": null,
      "licenses": [
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2021-36222",
          "severity": "High",
          "description": "ec_verify in kdc/kdc_preauth_ec.c in the Key Distribution Center (KDC) in MIT Kerberos 5 (aka krb5) before 1.18.4 and 1.19.x before 1.19.2 allows remote attackers to cause a NULL pointer dereference and daemon crash. This occurs because a return value is not properly managed in a certain situation.",
          "fix_version": "1.17-3+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2022-42898",
          "severity": "High",
          "description": "PAC parsing in MIT Kerberos 5 (aka krb5) before 1.19.4 and 1.20.x before 1.20.1 has integer overflows that may lead to remote code execution (in KDC, kadmind, or a GSS or Kerberos application server) on 32-bit platforms (which have a resultant heap-based buffer overflow), and cause a denial of service on other platforms. This occurs in krb5_pac_parse in lib/krb5/krb/pac.c. Heimdal before 7.7.1 has \"a similar bug.\"",
          "fix_version": "1.17-3+deb10u5",
          "references": []
        },
        {
          "id": "CVE-2024-26461",
          "severity": "High",
          "description": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/lib/gssapi/krb5/k5sealv3.c.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2021-37750",
          "severity": "Medium",
          "description": "The Key Distribution Center (KDC) in MIT Kerberos 5 (aka krb5) before 1.18.5 and 1.19.x before 1.19.3 has a NULL pointer dereference in kdc/do_tgs_req.c via a FAST inner body that lacks a server field.",
          "fix_version": "1.17-3+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2023-36054",
          "severity": "Medium",
          "description": "lib/kadm5/kadm_rpc_xdr.c in MIT Kerberos 5 (aka krb5) before 1.20.2 and 1.21.x before 1.21.1 frees an uninitialized pointer. A remote authenticated user can trigger a kadmind crash. This occurs because _xdr_kadm5_principal_ent_rec does not validate the relationship between n_key_data and the key_data array count.",
          "fix_version": "1.17-3+deb10u6",
          "references": []
        },
        {
          "id": "CVE-2024-26458",
          "severity": "Medium",
          "description": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak in /krb5/src/lib/rpc/pmap_rmt.c.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2024-26462",
          "severity": "Medium",
          "description": "Kerberos 5 (aka krb5) 1.21.2 contains a memory leak vulnerability in /krb5/src/kdc/ndr.c.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2018-5709",
          "severity": "Negligible",
          "description": "An issue was discovered in MIT Kerberos 5 (aka krb5) through 1.16. There is a variable \"dbentry->n_key_data\" in kadmin/dbutil/dump.c that can store 16-bit data but unknowingly the developer has assigned a \"u4\" variable to it, which is for 32-bit data. An attacker can use this vulnerability to affect other artifacts of the database as we know that a Kerberos database dump file contains trusted data.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libldap-2.4-2",
      "version": "2.4.47+dfsg-3+deb10u6",
      "type": "library",
      "origin": "pkg:deb/debian/libldap-2.4-2@2.4.47%2Bdfsg-3%2Bdeb10u6?arch=amd64&distro=debian-10&upstream=openldap",
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": [
        {
          "id": "CVE-2022-29155",
          "severity": "Critical",
          "description": "In OpenLDAP 2.x before 2.5.12 and 2.6.x before 2.6.2, a SQL injection vulnerability exists in the experimental back-sql backend to slapd, via a SQL statement within an LDAP query. This can occur during an LDAP search operation when the search filter is processed, due to a lack of proper escaping.",
          "fix_version": "2.4.47+dfsg-3+deb10u7",
          "references": []
        },
        {
          "id": "CVE-2023-2953",
          "severity": "High",
          "description": "A vulnerability was found in openldap. This security flaw causes a null pointer dereference in ber_memalloc_x() function.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2015-3276",
          "severity": "Negligible",
          "description": "The nss_parse_ciphers function in libraries/libldap/tls_m.c in OpenLDAP does not properly parse OpenSSL-style multi-keyword mode cipher strings, which might cause a weaker than intended cipher to be used and allow remote attackers to have unspecified impact via unknown vectors.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2017-14159",
          "severity": "Negligible",
          "description": "slapd in OpenLDAP 2.4.45 and earlier creates a PID file after dropping privileges to a non-root account, which might allow local users to kill arbitrary processes by leveraging access to this non-root account for PID file modification before a root script executes a \"kill `cat /pathname`\" command, as demonstrated by openldap-initscript.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2017-17740",
          "severity": "Negligible",
          "description": "contrib/slapd-modules/nops/nops.c in OpenLDAP through 2.4.45, when both the nops module and the memberof overlay are enabled, attempts to free a buffer that was allocated on the stack, which allows remote attackers to cause a denial of service (slapd crash) via a member MODDN operation.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2020-15719",
          "severity": "Negligible",
          "description": "libldap in certain third-party OpenLDAP packages has a certificate-validation flaw when the third-party package is asserting RFC6125 support. It considers CN even when there is a non-matching subjectAltName (SAN). This is fixed in, for example, openldap-2.4.46-10.el8 in Red Hat Enterprise Linux.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libldap-common",
      "version": "2.4.47+dfsg-3+deb10u6",
      "type": "library",
      "origin": "pkg:deb/debian/libldap-common@2.4.47%2Bdfsg-3%2Bdeb10u6?arch=all&distro=debian-10&upstream=openldap",
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": [
        {
          "id": "CVE-2022-29155",
          "severity": "Critical",
          "description": "In OpenLDAP 2.x before 2.5.12 and 2.6.x before 2.6.2, a SQL injection vulnerability exists in the experimental back-sql backend to slapd, via a SQL statement within an LDAP query. This can occur during an LDAP search operation when the search filter is processed, due to a lack of proper escaping.",
          "fix_version": "2.4.47+dfsg-3+deb10u7",
          "references": []
        },
        {
          "id": "CVE-2023-2953",
          "severity": "High",
          "description": "A vulnerability was found in openldap. This security flaw causes a null pointer dereference in ber_memalloc_x() function.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2015-3276",
          "severity": "Negligible",
          "description": "The nss_parse_ciphers function in libraries/libldap/tls_m.c in OpenLDAP does not properly parse OpenSSL-style multi-keyword mode cipher strings, which might cause a weaker than intended cipher to be used and allow remote attackers to have unspecified impact via unknown vectors.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2017-14159",
          "severity": "Negligible",
          "description": "slapd in OpenLDAP 2.4.45 and earlier creates a PID file after dropping privileges to a non-root account, which might allow local users to kill arbitrary processes by leveraging access to this non-root account for PID file modification before a root script executes a \"kill `cat /pathname`\" command, as demonstrated by openldap-initscript.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2017-17740",
          "severity": "Negligible",
          "description": "contrib/slapd-modules/nops/nops.c in OpenLDAP through 2.4.45, when both the nops module and the memberof overlay are enabled, attempts to free a buffer that was allocated on the stack, which allows remote attackers to cause a denial of service (slapd crash) via a member MODDN operation.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2020-15719",
          "severity": "Negligible",
          "description": "libldap in certain third-party OpenLDAP packages has a certificate-validation flaw when the third-party package is asserting RFC6125 support. It considers CN even when there is a non-matching subjectAltName (SAN). This is fixed in, for example, openldap-2.4.46-10.el8 in Red Hat Enterprise Linux.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "liblz4-1",
      "version": "1.8.3-1",
      "type": "library",
      "origin": "pkg:deb/debian/liblz4-1@1.8.3-1?arch=amd64&distro=debian-10&upstream=lz4",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2021-3520",
          "severity": "Critical",
          "description": "There's a flaw in lz4. An attacker who submits a crafted file to an application linked with lz4 may be able to trigger an integer overflow, leading to calling of memmove() on a negative size argument, causing an out-of-bounds write and/or a crash. The greatest impact of this flaw is to availability, with some potential impact to confidentiality and integrity as well.",
          "fix_version": "1.8.3-1+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2019-17543",
          "severity": "Low",
          "description": "LZ4 before 1.9.2 has a heap-based buffer overflow in LZ4_write32 (related to LZ4_compress_destSize), affecting applications that call LZ4_compress_fast with a large input. (This issue can also lead to data corruption.) NOTE: the vendor states \"only a few specific / uncommon usages of the API are at risk.\"",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "liblzma5",
      "version": "5.2.4-1",
      "type": "library",
      "origin": "pkg:deb/debian/liblzma5@5.2.4-1?arch=amd64&distro=debian-10&upstream=xz-utils",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2022-1271",
          "severity": "High",
          "description": "An arbitrary file write vulnerability was found in GNU gzip's zgrep utility. When zgrep is applied on the attacker's chosen file name (for example, a crafted file name), this can overwrite an attacker's content to an arbitrary attacker-selected file. This flaw occurs due to insufficient validation when processing filenames with two or more newlines where selected content and the target file names are embedded in crafted multi-line file names. This flaw allows a remote, low privileged attacker to force zgrep to write arbitrary files on the system.",
          "fix_version": "5.2.4-1+deb10u1",
          "references": []
        }
      ]
    },
    {
      "name": "libmount1",
      "version": "2.33.1-0.1",
      "type": "library",
      "origin": "pkg:deb/debian/libmount1@2.33.1-0.1?arch=amd64&distro=debian-10&upstream=util-linux",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2021-37600",
          "severity": "Medium",
          "description": "An integer overflow in util-linux through 2.37.1 can potentially cause a buffer overflow if an attacker were able to use system resources in a way that leads to a large number in the /proc/sysvipc/sem file. NOTE: this is unexploitable in GNU C Library environments, and possibly in all realistic environments.",
          "fix_version": "2.33.1-0.1+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2024-28085",
          "severity": "Low",
          "description": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
          "fix_version": "2.33.1-0.1+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2022-0563",
          "severity": "Negligible",
          "description": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libncursesw6",
      "version": "6.1+20181013-2+deb10u2",
      "type": "library",
      "origin": "pkg:deb/debian/libncursesw6@6.1%2B20181013-2%2Bdeb10u2?arch=amd64&distro=debian-10&upstream=ncurses",
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": [
        {
          "id": "CVE-2021-39537",
          "severity": "High",
          "description": "An issue was discovered in ncurses through v6.2-1. _nc_captoinfo in captoinfo.c has a heap-based buffer overflow.",
          "fix_version": "6.1+20181013-2+deb10u5",
          "references": []
        },
        {
          "id": "CVE-2022-29458",
          "severity": "High",
          "description": "ncurses 6.3 before patch 20220416 has an out-of-bounds read and segmentation violation in convert_strings in tinfo/read_entry.c in the terminfo library.",
          "fix_version": "6.1+20181013-2+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2023-29491",
          "severity": "High",
          "description": "ncurses before 6.4 20230408, when used by a setuid application, allows local users to trigger security-relevant memory corruption via malformed data in a terminfo database file that is found in $HOME/.terminfo or reached via the TERMINFO or TERM environment variable.",
          "fix_version": "6.1+20181013-2+deb10u5",
          "references": []
        },
        {
          "id": "CVE-2020-19189",
          "severity": "Medium",
          "description": "Buffer Overflow vulnerability in postprocess_terminfo function in tinfo/parse_entry.c:997 in ncurses 6.1 allows remote attackers to cause a denial of service via crafted command.",
          "fix_version": "6.1+20181013-2+deb10u4",
          "references": []
        },
        {
          "id": "CVE-2023-50495",
          "severity": "Medium",
          "description": "NCurse v6.4-20230418 was discovered to contain a segmentation fault via the component _nc_wrap_entry().",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2023-45918",
          "severity": "Unknown",
          "description": "ncurses 6.4-20230610 has a NULL pointer dereference in tgetstr in tinfo/lib_termcap.c.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libnettle6",
      "version": "3.4.1-1",
      "type": "library",
      "origin": "pkg:deb/debian/libnettle6@3.4.1-1?arch=amd64&distro=debian-10&upstream=nettle",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2021-20305",
          "severity": "High",
          "description": "A flaw was found in Nettle in versions before 3.7.2, where several Nettle signature verification functions (GOST DSA, EDDSA & ECDSA) result in the Elliptic Curve Cryptography point (ECC) multiply function being called with out-of-range scalers, possibly resulting in incorrect results. This flaw allows an attacker to force an invalid signature, causing an assertion failure or possible validation. The highest threat to this vulnerability is to confidentiality, integrity, as well as system availability.",
          "fix_version": "3.4.1-1+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2021-3580",
          "severity": "High",
          "description": "A flaw was found in the way nettle's RSA decryption functions handled specially crafted ciphertext. An attacker could use this flaw to provide a manipulated ciphertext leading to application crash and denial of service.",
          "fix_version": "3.4.1-1+deb10u1",
          "references": []
        }
      ]
    },
    {
      "name": "libnghttp2-14",
      "version": "1.36.0-2+deb10u1",
      "type": "library",
      "origin": "pkg:deb/debian/libnghttp2-14@1.36.0-2%2Bdeb10u1?arch=amd64&distro=debian-10&upstream=nghttp2",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2020-11080",
          "severity": "High",
          "description": "In nghttp2 before version 1.41.0, the overly large HTTP/2 SETTINGS frame payload causes denial of service. The proof of concept attack involves a malicious client constructing a SETTINGS frame with a length of 14,400 bytes (2400 individual settings entries) over and over again. The attack causes the CPU to spike at 100%. nghttp2 v1.41.0 fixes this vulnerability. There is a workaround to this vulnerability. Implement nghttp2_on_frame_recv_callback callback, and if received frame is SETTINGS frame and the number of settings entries are large (e.g., > 32), then drop the connection.",
          "fix_version": "1.36.0-2+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2023-44487",
          "severity": "High",
          "description": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
          "fix_version": "1.36.0-2+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2024-28182",
          "severity": "Medium",
          "description": "nghttp2 is an implementation of the Hypertext Transfer Protocol version 2 in C. The nghttp2 library prior to version 1.61.0 keeps reading the unbounded number of HTTP/2 CONTINUATION frames even after a stream is reset to keep HPACK context in sync.  This causes excessive CPU usage to decode HPACK stream. nghttp2 v1.61.0 mitigates this vulnerability by limiting the number of CONTINUATION frames it accepts per stream. There is no workaround for this vulnerability.",
          "fix_version": "1.36.0-2+deb10u3",
          "references": []
        }
      ]
    },
    {
      "name": "libp11-kit0",
      "version": "0.23.15-2+deb10u1",
      "type": "library",
      "origin": "pkg:deb/debian/libp11-kit0@0.23.15-2%2Bdeb10u1?arch=amd64&distro=debian-10&upstream=p11-kit",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "libpam-modules",
      "version": "1.3.1-5",
      "type": "library",
      "origin": "pkg:deb/debian/libpam-modules@1.3.1-5?arch=amd64&distro=debian-10&upstream=pam",
      "maintainer": null,
      "licenses": [
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2024-22365",
          "severity": "Medium",
          "description": "linux-pam (aka Linux PAM) before 1.6.0 allows attackers to cause a denial of service (blocked login process) via mkfifo because the openat call (for protect_dir) lacks O_DIRECTORY.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libpam-modules-bin",
      "version": "1.3.1-5",
      "type": "library",
      "origin": "pkg:deb/debian/libpam-modules-bin@1.3.1-5?arch=amd64&distro=debian-10&upstream=pam",
      "maintainer": null,
      "licenses": [
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2024-22365",
          "severity": "Medium",
          "description": "linux-pam (aka Linux PAM) before 1.6.0 allows attackers to cause a denial of service (blocked login process) via mkfifo because the openat call (for protect_dir) lacks O_DIRECTORY.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libpam-runtime",
      "version": "1.3.1-5",
      "type": "library",
      "origin": "pkg:deb/debian/libpam-runtime@1.3.1-5?arch=all&distro=debian-10&upstream=pam",
      "maintainer": null,
      "licenses": [
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2024-22365",
          "severity": "Medium",
          "description": "linux-pam (aka Linux PAM) before 1.6.0 allows attackers to cause a denial of service (blocked login process) via mkfifo because the openat call (for protect_dir) lacks O_DIRECTORY.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libpam0g",
      "version": "1.3.1-5",
      "type": "library",
      "origin": "pkg:deb/debian/libpam0g@1.3.1-5?arch=amd64&distro=debian-10&upstream=pam",
      "maintainer": null,
      "licenses": [
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2024-22365",
          "severity": "Medium",
          "description": "linux-pam (aka Linux PAM) before 1.6.0 allows attackers to cause a denial of service (blocked login process) via mkfifo because the openat call (for protect_dir) lacks O_DIRECTORY.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libpcre3",
      "version": "2:8.39-12",
      "type": "library",
      "origin": "pkg:deb/debian/libpcre3@2%3A8.39-12?arch=amd64&distro=debian-10&upstream=pcre3",
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": [
        {
          "id": "CVE-2020-14155",
          "severity": "Medium",
          "description": "libpcre in PCRE before 8.44 allows an integer overflow via a large number after a (?C substring.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2017-11164",
          "severity": "Negligible",
          "description": "In PCRE 8.41, the OP_KETRMAX feature in the match function in pcre_exec.c allows stack exhaustion (uncontrolled recursion) when processing a crafted regular expression.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2017-16231",
          "severity": "Negligible",
          "description": "In PCRE 8.41, after compiling, a pcretest load test PoC produces a crash overflow in the function match() in pcre_exec.c because of a self-recursive call. NOTE: third parties dispute the relevance of this report, noting that there are options that can be used to limit the amount of stack that is used",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2017-7245",
          "severity": "Negligible",
          "description": "Stack-based buffer overflow in the pcre32_copy_substring function in pcre_get.c in libpcre1 in PCRE 8.40 allows remote attackers to cause a denial of service (WRITE of size 4) or possibly have unspecified other impact via a crafted file.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2017-7246",
          "severity": "Negligible",
          "description": "Stack-based buffer overflow in the pcre32_copy_substring function in pcre_get.c in libpcre1 in PCRE 8.40 allows remote attackers to cause a denial of service (WRITE of size 268) or possibly have unspecified other impact via a crafted file.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2019-20838",
          "severity": "Negligible",
          "description": "libpcre in PCRE before 8.43 allows a subject buffer over-read in JIT when UTF is disabled, and \\X or \\R has more than one fixed quantifier, a related issue to CVE-2019-20454.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libpng16-16",
      "version": "1.6.36-6",
      "type": "library",
      "origin": "pkg:deb/debian/libpng16-16@1.6.36-6?arch=amd64&distro=debian-10&upstream=libpng1.6",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2018-14048",
          "severity": "Negligible",
          "description": "An issue has been found in libpng 1.6.34. It is a SEGV in the function png_free_data in png.c, related to the recommended error handling for png_read_image.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2018-14550",
          "severity": "Negligible",
          "description": "An issue has been found in third-party PNM decoding associated with libpng 1.6.35. It is a stack-based buffer overflow in the function get_token in pnm2png.c in pnm2png.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2019-6129",
          "severity": "Negligible",
          "description": "png_create_info_struct in png.c in libpng 1.6.36 has a memory leak, as demonstrated by pngcp. NOTE: a third party has stated \"I don't think it is libpng's job to free this buffer.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2021-4214",
          "severity": "Negligible",
          "description": "A heap overflow flaw was found in libpngs' pngimage.c program. This flaw allows an attacker with local network access to pass a specially crafted PNG file to the pngimage utility, causing an application to crash, leading to a denial of service.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libpsl5",
      "version": "0.20.2-2",
      "type": "library",
      "origin": "pkg:deb/debian/libpsl5@0.20.2-2?arch=amd64&distro=debian-10&upstream=libpsl",
      "maintainer": null,
      "licenses": [
        null,
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "libreadline7",
      "version": "7.0-5",
      "type": "library",
      "origin": "pkg:deb/debian/libreadline7@7.0-5?arch=amd64&distro=debian-10&upstream=readline",
      "maintainer": null,
      "licenses": [
        null,
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "librtmp1",
      "version": "2.4+20151223.gitfa8646d.1-2",
      "type": "library",
      "origin": "pkg:deb/debian/librtmp1@2.4%2B20151223.gitfa8646d.1-2?arch=amd64&distro=debian-10&upstream=rtmpdump",
      "maintainer": null,
      "licenses": [
        null,
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "libsasl2-2",
      "version": "2.1.27+dfsg-1+deb10u1",
      "type": "library",
      "origin": "pkg:deb/debian/libsasl2-2@2.1.27%2Bdfsg-1%2Bdeb10u1?arch=amd64&distro=debian-10&upstream=cyrus-sasl2",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2022-24407",
          "severity": "High",
          "description": "In Cyrus SASL 2.1.17 through 2.1.27 before 2.1.28, plugins/sql.c does not escape the password for a SQL INSERT or UPDATE statement.",
          "fix_version": "2.1.27+dfsg-1+deb10u2",
          "references": []
        }
      ]
    },
    {
      "name": "libsasl2-modules-db",
      "version": "2.1.27+dfsg-1+deb10u1",
      "type": "library",
      "origin": "pkg:deb/debian/libsasl2-modules-db@2.1.27%2Bdfsg-1%2Bdeb10u1?arch=amd64&distro=debian-10&upstream=cyrus-sasl2",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2022-24407",
          "severity": "High",
          "description": "In Cyrus SASL 2.1.17 through 2.1.27 before 2.1.28, plugins/sql.c does not escape the password for a SQL INSERT or UPDATE statement.",
          "fix_version": "2.1.27+dfsg-1+deb10u2",
          "references": []
        }
      ]
    },
    {
      "name": "libseccomp2",
      "version": "2.3.3-4",
      "type": "library",
      "origin": "pkg:deb/debian/libseccomp2@2.3.3-4?arch=amd64&distro=debian-10&upstream=libseccomp",
      "maintainer": null,
      "licenses": [
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2019-9893",
          "severity": "Negligible",
          "description": "libseccomp before 2.4.0 did not correctly generate 64-bit syscall argument comparisons using the arithmetic operators (LT, GT, LE, GE), which might able to lead to bypassing seccomp filters and potential privilege escalations.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libselinux1",
      "version": "2.8-1+b1",
      "type": "library",
      "origin": "pkg:deb/debian/libselinux1@2.8-1%2Bb1?arch=amd64&distro=debian-10&upstream=libselinux%402.8-1",
      "maintainer": null,
      "licenses": [
        null,
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "libsemanage-common",
      "version": "2.8-2",
      "type": "library",
      "origin": "pkg:deb/debian/libsemanage-common@2.8-2?arch=all&distro=debian-10&upstream=libsemanage",
      "maintainer": null,
      "licenses": [
        null,
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "libsemanage1",
      "version": "2.8-2",
      "type": "library",
      "origin": "pkg:deb/debian/libsemanage1@2.8-2?arch=amd64&distro=debian-10&upstream=libsemanage",
      "maintainer": null,
      "licenses": [
        null,
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "libsepol1",
      "version": "2.8-1",
      "type": "library",
      "origin": "pkg:deb/debian/libsepol1@2.8-1?arch=amd64&distro=debian-10&upstream=libsepol",
      "maintainer": null,
      "licenses": [
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2021-36084",
          "severity": "Low",
          "description": "The CIL compiler in SELinux 3.2 has a use-after-free in __cil_verify_classperms (called from __cil_verify_classpermission and __cil_pre_verify_helper).",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2021-36085",
          "severity": "Low",
          "description": "The CIL compiler in SELinux 3.2 has a use-after-free in __cil_verify_classperms (called from __verify_map_perm_classperms and hashtab_map).",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2021-36086",
          "severity": "Low",
          "description": "The CIL compiler in SELinux 3.2 has a use-after-free in cil_reset_classpermission (called from cil_reset_classperms_set and cil_reset_classperms_list).",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2021-36087",
          "severity": "Low",
          "description": "The CIL compiler in SELinux 3.2 has a heap-based buffer over-read in ebitmap_match_any (called indirectly from cil_check_neverallow). This occurs because there is sometimes a lack of checks for invalid statements in an optional block.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libsmartcols1",
      "version": "2.33.1-0.1",
      "type": "library",
      "origin": "pkg:deb/debian/libsmartcols1@2.33.1-0.1?arch=amd64&distro=debian-10&upstream=util-linux",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2021-37600",
          "severity": "Medium",
          "description": "An integer overflow in util-linux through 2.37.1 can potentially cause a buffer overflow if an attacker were able to use system resources in a way that leads to a large number in the /proc/sysvipc/sem file. NOTE: this is unexploitable in GNU C Library environments, and possibly in all realistic environments.",
          "fix_version": "2.33.1-0.1+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2024-28085",
          "severity": "Low",
          "description": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
          "fix_version": "2.33.1-0.1+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2022-0563",
          "severity": "Negligible",
          "description": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libss2",
      "version": "1.44.5-1+deb10u3",
      "type": "library",
      "origin": "pkg:deb/debian/libss2@1.44.5-1%2Bdeb10u3?arch=amd64&distro=debian-10&upstream=e2fsprogs",
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": [
        {
          "id": "CVE-2022-1304",
          "severity": "High",
          "description": "An out-of-bounds read/write vulnerability was found in e2fsprogs 1.46.5. This issue leads to a segmentation fault and possibly arbitrary code execution via a specially crafted filesystem.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libssh2-1",
      "version": "1.8.0-2.1",
      "type": "library",
      "origin": "pkg:deb/debian/libssh2-1@1.8.0-2.1?arch=amd64&distro=debian-10&upstream=libssh2",
      "maintainer": null,
      "licenses": [
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2019-13115",
          "severity": "High",
          "description": "In libssh2 before 1.9.0, kex_method_diffie_hellman_group_exchange_sha256_key_exchange in kex.c has an integer overflow that could lead to an out-of-bounds read in the way packets are read from the server. A remote attacker who compromises a SSH server may be able to disclose sensitive information or cause a denial of service condition on the client system when a user connects to the server. This is related to an _libssh2_check_length mistake, and is different from the various issues fixed in 1.8.1, such as CVE-2019-3855.",
          "fix_version": "1.8.0-2.1+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2019-17498",
          "severity": "High",
          "description": "In libssh2 v1.9.0 and earlier versions, the SSH_MSG_DISCONNECT logic in packet.c has an integer overflow in a bounds check, enabling an attacker to specify an arbitrary (out-of-bounds) offset for a subsequent memory read. A crafted SSH server may be able to disclose sensitive information or cause a denial of service condition on the client system when a user connects to the server.",
          "fix_version": "1.8.0-2.1+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2020-22218",
          "severity": "High",
          "description": "An issue was discovered in function _libssh2_packet_add in libssh2 1.10.0 allows attackers to access out of bounds memory.",
          "fix_version": "1.8.0-2.1+deb10u1",
          "references": []
        }
      ]
    },
    {
      "name": "libssl1.1",
      "version": "1.1.1d-0+deb10u6",
      "type": "library",
      "origin": "pkg:deb/debian/libssl1.1@1.1.1d-0%2Bdeb10u6?arch=amd64&distro=debian-10&upstream=openssl",
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": [
        {
          "id": "CVE-2021-3711",
          "severity": "Critical",
          "description": "In order to decrypt SM2 encrypted data an application is expected to call the API function EVP_PKEY_decrypt(). Typically an application will call this function twice. The first time, on entry, the \"out\" parameter can be NULL and, on exit, the \"outlen\" parameter is populated with the buffer size required to hold the decrypted plaintext. The application can then allocate a sufficiently sized buffer and call EVP_PKEY_decrypt() again, but this time passing a non-NULL value for the \"out\" parameter. A bug in the implementation of the SM2 decryption code means that the calculation of the buffer size required to hold the plaintext returned by the first call to EVP_PKEY_decrypt() can be smaller than the actual size required by the second call. This can lead to a buffer overflow when EVP_PKEY_decrypt() is called by the application a second time with a buffer that is too small. A malicious attacker who is able present SM2 content for decryption to an application could cause attacker chosen data to overflow the buffer by up to a maximum of 62 bytes altering the contents of other data held after the buffer, possibly changing application behaviour or causing the application to crash. The location of the buffer is application dependent but is typically heap allocated. Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k).",
          "fix_version": "1.1.1d-0+deb10u7",
          "references": []
        },
        {
          "id": "CVE-2022-1292",
          "severity": "Critical",
          "description": "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
          "fix_version": "1.1.1n-0+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2022-2068",
          "severity": "Critical",
          "description": "In addition to the c_rehash shell command injection identified in CVE-2022-1292, further circumstances where the c_rehash script does not properly sanitise shell metacharacters to prevent command injection were found by code review. When the CVE-2022-1292 was fixed it was not discovered that there are other places in the script where the file names of certificates being hashed were possibly passed to a command executed through the shell. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.4 (Affected 3.0.0,3.0.1,3.0.2,3.0.3). Fixed in OpenSSL 1.1.1p (Affected 1.1.1-1.1.1o). Fixed in OpenSSL 1.0.2zf (Affected 1.0.2-1.0.2ze).",
          "fix_version": "1.1.1n-0+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2021-3712",
          "severity": "High",
          "description": "ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING structure which contains a buffer holding the string data and a field holding the buffer length. This contrasts with normal C strings which are repesented as a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL's own \"d2i\" functions (and other similar parsing functions) as well as any string whose value has been set with the ASN1_STRING_set() function will additionally NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING structures which do not NUL terminate the byte array by directly setting the \"data\" and \"length\" fields in the ASN1_STRING array. This can also happen by using the ASN1_STRING_set0() function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that the ASN1_STRING byte array will be NUL terminated, even though this is not guaranteed for strings that have been directly constructed. Where an application requests an ASN.1 structure to be printed, and where that ASN.1 structure contains ASN1_STRINGs that have been directly constructed by the application without NUL terminating the \"data\" field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates (for example if a certificate has been directly constructed by the application instead of loading it via the OpenSSL parsing functions, and the certificate contains non NUL terminated ASN1_STRING structures). It can also occur in the X509_get1_email(), X509_REQ_get1_email() and X509_get1_ocsp() functions. If a malicious actor can cause an application to directly construct an ASN1_STRING and then process it through one of the affected OpenSSL functions then this issue could be hit. This might result in a crash (causing a Denial of Service attack). It could also result in the disclosure of private memory contents (such as private keys, or sensitive plaintext). Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k). Fixed in OpenSSL 1.0.2za (Affected 1.0.2-1.0.2y).",
          "fix_version": "1.1.1d-0+deb10u7",
          "references": []
        },
        {
          "id": "CVE-2022-0778",
          "severity": "High",
          "description": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).",
          "fix_version": "1.1.1d-0+deb10u8",
          "references": []
        },
        {
          "id": "CVE-2022-4450",
          "severity": "High",
          "description": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and decodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data. If the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are populated with pointers to buffers containing the relevant decoded data. The caller is responsible for freeing those buffers. It is possible to construct a PEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex() will return a failure code but will populate the header argument with a pointer to a buffer that has already been freed. If the caller also frees this buffer then a double free will occur. This will most likely lead to a crash. This could be exploited by an attacker who has the ability to supply malicious PEM files for parsing to achieve a denial of service attack.  The functions PEM_read_bio() and PEM_read() are simple wrappers around PEM_read_bio_ex() and therefore these functions are also directly affected.  These functions are also called indirectly by a number of other OpenSSL functions including PEM_X509_INFO_read_bio_ex() and SSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal uses of these functions are not vulnerable because the caller does not free the header argument if PEM_read_bio_ex() returns a failure code. These locations include the PEM_read_bio_TYPE() functions as well as the decoders introduced in OpenSSL 3.0.  The OpenSSL asn1parse command line application is also impacted by this issue.",
          "fix_version": "1.1.1n-0+deb10u4",
          "references": []
        },
        {
          "id": "CVE-2023-0215",
          "severity": "High",
          "description": "The public API function BIO_new_NDEF is a helper function used for streaming ASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the SMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by end user applications.  The function receives a BIO from the caller, prepends a new BIO_f_asn1 filter BIO onto the front of it to form a BIO chain, and then returns the new head of the BIO chain to the caller. Under certain conditions, for example if a CMS recipient public key is invalid, the new filter BIO is freed and the function returns a NULL result indicating a failure. However, in this case, the BIO chain is not properly cleaned up and the BIO passed by the caller still retains internal pointers to the previously freed filter BIO. If the caller then goes on to call BIO_pop() on the BIO then a use-after-free will occur. This will most likely result in a crash.    This scenario occurs directly in the internal function B64_write_ASN1() which may cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on the BIO. This internal function is in turn called by the public API functions PEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream, SMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.  Other public API functions that may be impacted by this include i2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and i2d_PKCS7_bio_stream.  The OpenSSL cms and smime command line applications are similarly affected.",
          "fix_version": "1.1.1n-0+deb10u4",
          "references": []
        },
        {
          "id": "CVE-2023-0286",
          "severity": "High",
          "description": "There is a type confusion vulnerability relating to X.400 address processing inside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but the public structure definition for GENERAL_NAME incorrectly specified the type of the x400Address field as ASN1_TYPE. This field is subsequently interpreted by the OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an ASN1_STRING.  When CRL checking is enabled (i.e. the application sets the X509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass arbitrary pointers to a memcmp call, enabling them to read memory contents or enact a denial of service. In most cases, the attack requires the attacker to provide both the certificate chain and CRL, neither of which need to have a valid signature. If the attacker only controls one of these inputs, the other input must already contain an X.400 address as a CRL distribution point, which is uncommon. As such, this vulnerability is most likely to only affect applications which have implemented their own functionality for retrieving CRLs over a network.",
          "fix_version": "1.1.1n-0+deb10u4",
          "references": []
        },
        {
          "id": "CVE-2023-0464",
          "severity": "High",
          "description": "A security vulnerability has been identified in all supported versions  of OpenSSL related to the verification of X.509 certificate chains that include policy constraints.  Attackers may be able to exploit this vulnerability by creating a malicious certificate chain that triggers exponential use of computational resources, leading to a denial-of-service (DoS) attack on affected systems.  Policy processing is disabled by default but can be enabled by passing the `-policy' argument to the command line utilities or by calling the `X509_VERIFY_PARAM_set1_policies()' function.",
          "fix_version": "1.1.1n-0+deb10u5",
          "references": []
        },
        {
          "id": "CVE-2024-4741",
          "severity": "High",
          "description": null,
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2021-4160",
          "severity": "Medium",
          "description": "There is a carry propagation bug in the MIPS32 and MIPS64 squaring procedure. Many EC algorithms are affected, including some of the TLS 1.3 default curves. Impact was not analyzed in detail, because the pre-requisites for attack are considered unlikely and include reusing private keys. Analysis suggests that attacks against RSA and DSA as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH are considered just feasible (although very difficult) because most of the work necessary to deduce information about a private key may be performed offline. The amount of resources required for such an attack would be significant. However, for an attack on TLS to be meaningful, the server would have to share the DH private key among multiple clients, which is no longer an option since CVE-2016-0701. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0.0. It was addressed in the releases of 1.1.1m and 3.0.1 on the 15th of December 2021. For the 1.0.2 release it is addressed in git commit 6fc1aaaf3 that is available to premium support customers only. It will be made available in 1.0.2zc when it is released. The issue only affects OpenSSL on MIPS platforms. Fixed in OpenSSL 3.0.1 (Affected 3.0.0). Fixed in OpenSSL 1.1.1m (Affected 1.1.1-1.1.1l). Fixed in OpenSSL 1.0.2zc-dev (Affected 1.0.2-1.0.2zb).",
          "fix_version": "1.1.1d-0+deb10u8",
          "references": []
        },
        {
          "id": "CVE-2022-2097",
          "severity": "Medium",
          "description": "AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p).",
          "fix_version": "1.1.1n-0+deb10u4",
          "references": []
        },
        {
          "id": "CVE-2022-4304",
          "severity": "Medium",
          "description": "A timing based side channel exists in the OpenSSL RSA Decryption implementation which could be sufficient to recover a plaintext across a network in a Bleichenbacher style attack. To achieve a successful decryption an attacker would have to be able to send a very large number of trial messages for decryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5, RSA-OEAP and RSASVE.  For example, in a TLS connection, RSA is commonly used by a client to send an encrypted pre-master secret to the server. An attacker that had observed a genuine connection between a client and a server could use this flaw to send trial messages to the server and record the time taken to process them. After a sufficiently large number of messages the attacker could recover the pre-master secret used for the original connection and thus be able to decrypt the application data sent over that connection.",
          "fix_version": "1.1.1n-0+deb10u4",
          "references": []
        },
        {
          "id": "CVE-2023-0465",
          "severity": "Medium",
          "description": "Applications that use a non-default option when verifying certificates may be vulnerable to an attack from a malicious CA to circumvent certain checks.  Invalid certificate policies in leaf certificates are silently ignored by OpenSSL and other certificate policy checks are skipped for that certificate. A malicious CA could use this to deliberately assert invalid certificate policies in order to circumvent policy checking on the certificate altogether.  Policy processing is disabled by default but can be enabled by passing the `-policy' argument to the command line utilities or by calling the `X509_VERIFY_PARAM_set1_policies()' function.",
          "fix_version": "1.1.1n-0+deb10u5",
          "references": []
        },
        {
          "id": "CVE-2023-0466",
          "severity": "Medium",
          "description": "The function X509_VERIFY_PARAM_add0_policy() is documented to implicitly enable the certificate policy check when doing certificate verification. However the implementation of the function does not enable the check which allows certificates with invalid or incorrect policies to pass the certificate verification.  As suddenly enabling the policy check could break existing deployments it was decided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy() function.  Instead the applications that require OpenSSL to perform certificate policy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly enable the policy check by calling X509_VERIFY_PARAM_set_flags() with the X509_V_FLAG_POLICY_CHECK flag argument.  Certificate policy checks are disabled by default in OpenSSL and are not commonly used by applications.",
          "fix_version": "1.1.1n-0+deb10u5",
          "references": []
        },
        {
          "id": "CVE-2023-2650",
          "severity": "Medium",
          "description": "Issue summary: Processing some specially crafted ASN.1 object identifiers or data containing them may be very slow.  Impact summary: Applications that use OBJ_obj2txt() directly, or use any of the OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message size limit may experience notable to very long delays when processing those messages, which may lead to a Denial of Service.  An OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers - most of which have no size limit.  OBJ_obj2txt() may be used to translate an ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL type ASN1_OBJECT) to its canonical numeric text form, which are the sub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by periods.  When one of the sub-identifiers in the OBJECT IDENTIFIER is very large (these are sizes that are seen as absurdly large, taking up tens or hundreds of KiBs), the translation to a decimal number in text may take a very long time.  The time complexity is O(n^2) with 'n' being the size of the sub-identifiers in bytes (*).  With OpenSSL 3.0, support to fetch cryptographic algorithms using names / identifiers in string form was introduced.  This includes using OBJECT IDENTIFIERs in canonical numeric text form as identifiers for fetching algorithms.  Such OBJECT IDENTIFIERs may be received through the ASN.1 structure AlgorithmIdentifier, which is commonly used in multiple protocols to specify what cryptographic algorithm should be used to sign or verify, encrypt or decrypt, or digest passed data.  Applications that call OBJ_obj2txt() directly with untrusted data are affected, with any version of OpenSSL.  If the use is for the mere purpose of display, the severity is considered low.  In OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS.  It also impacts anything that processes X.509 certificates, including simple things like verifying its signature.  The impact on TLS is relatively low, because all versions of OpenSSL have a 100KiB limit on the peer's certificate chain.  Additionally, this only impacts clients, or servers that have explicitly enabled client authentication.  In OpenSSL 1.1.1 and 1.0.2, this only affects displaying diverse objects, such as X.509 certificates.  This is assumed to not happen in such a way that it would cause a Denial of Service, so these versions are considered not affected by this issue in such a way that it would be cause for concern, and the severity is therefore considered low.",
          "fix_version": "1.1.1n-0+deb10u5",
          "references": []
        },
        {
          "id": "CVE-2023-3446",
          "severity": "Medium",
          "description": "Issue summary: Checking excessively long DH keys or parameters may be very slow.  Impact summary: Applications that use the functions DH_check(), DH_check_ex() or EVP_PKEY_param_check() to check a DH key or DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service.  The function DH_check() performs various checks on DH parameters. One of those checks confirms that the modulus ('p' parameter) is not too large. Trying to use a very large modulus is slow and OpenSSL will not normally use a modulus which is over 10,000 bits in length.  However the DH_check() function checks numerous aspects of the key or parameters that have been supplied. Some of those checks use the supplied modulus value even if it has already been found to be too large.  An application that calls DH_check() and supplies a key or parameters obtained from an untrusted source could be vulernable to a Denial of Service attack.  The function DH_check() is itself called by a number of other OpenSSL functions. An application calling any of those other functions may similarly be affected. The other functions affected by this are DH_check_ex() and EVP_PKEY_param_check().  Also vulnerable are the OpenSSL dhparam and pkeyparam command line applications when using the '-check' option.  The OpenSSL SSL/TLS implementation is not affected by this issue. The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
          "fix_version": "1.1.1n-0+deb10u6",
          "references": []
        },
        {
          "id": "CVE-2023-3817",
          "severity": "Medium",
          "description": "Issue summary: Checking excessively long DH keys or parameters may be very slow.  Impact summary: Applications that use the functions DH_check(), DH_check_ex() or EVP_PKEY_param_check() to check a DH key or DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service.  The function DH_check() performs various checks on DH parameters. After fixing CVE-2023-3446 it was discovered that a large q parameter value can also trigger an overly long computation during some of these checks. A correct q value, if present, cannot be larger than the modulus p parameter, thus it is unnecessary to perform these checks if q is larger than p.  An application that calls DH_check() and supplies a key or parameters obtained from an untrusted source could be vulnerable to a Denial of Service attack.  The function DH_check() is itself called by a number of other OpenSSL functions. An application calling any of those other functions may similarly be affected. The other functions affected by this are DH_check_ex() and EVP_PKEY_param_check().  Also vulnerable are the OpenSSL dhparam and pkeyparam command line applications when using the \"-check\" option.  The OpenSSL SSL/TLS implementation is not affected by this issue.  The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
          "fix_version": "1.1.1n-0+deb10u6",
          "references": []
        },
        {
          "id": "CVE-2023-5678",
          "severity": "Medium",
          "description": "Issue summary: Generating excessively long X9.42 DH keys or checking excessively long X9.42 DH keys or parameters may be very slow.  Impact summary: Applications that use the functions DH_generate_key() to generate an X9.42 DH key may experience long delays.  Likewise, applications that use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check() to check an X9.42 DH key or X9.42 DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service.  While DH_check() performs all the necessary checks (as of CVE-2023-3817), DH_check_pub_key() doesn't make any of these checks, and is therefore vulnerable for excessively large P and Q parameters.  Likewise, while DH_generate_key() performs a check for an excessively large P, it doesn't check for an excessively large Q.  An application that calls DH_generate_key() or DH_check_pub_key() and supplies a key or parameters obtained from an untrusted source could be vulnerable to a Denial of Service attack.  DH_generate_key() and DH_check_pub_key() are also called by a number of other OpenSSL functions.  An application calling any of those other functions may similarly be affected.  The other functions affected by this are DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().  Also vulnerable are the OpenSSL pkey command line application when using the \"-pubcheck\" option, as well as the OpenSSL genpkey command line application.  The OpenSSL SSL/TLS implementation is not affected by this issue.  The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2024-0727",
          "severity": "Medium",
          "description": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL to crash leading to a potential Denial of Service attack  Impact summary: Applications loading files in the PKCS12 format from untrusted sources might terminate abruptly.  A file in PKCS12 format can contain certificates and keys and may come from an untrusted source. The PKCS12 specification allows certain fields to be NULL, but OpenSSL does not correctly check for this case. This can lead to a NULL pointer dereference that results in OpenSSL crashing. If an application processes PKCS12 files from an untrusted source using the OpenSSL APIs then that application will be vulnerable to this issue.  OpenSSL APIs that are vulnerable to this are: PKCS12_parse(), PKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes() and PKCS12_newpass().  We have also fixed a similar issue in SMIME_write_PKCS7(). However since this function is related to writing data we do not consider it security significant.  The FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2024-2511",
          "severity": "Medium",
          "description": "Issue summary: Some non-default TLS server configurations can cause unbounded memory growth when processing TLSv1.3 sessions  Impact summary: An attacker may exploit certain server configurations to trigger unbounded memory growth that would lead to a Denial of Service  This problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is being used (but not if early_data support is also configured and the default anti-replay protection is in use). In this case, under certain conditions, the session cache can get into an incorrect state and it will fail to flush properly as it fills. The session cache will continue to grow in an unbounded manner. A malicious client could deliberately create the scenario for this failure to force a Denial of Service. It may also happen by accident in normal operation.  This issue only affects TLS servers supporting TLSv1.3. It does not affect TLS clients.  The FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL 1.0.2 is also not affected by this issue.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libstdc++6",
      "version": "8.3.0-6",
      "type": "library",
      "origin": "pkg:deb/debian/libstdc%2B%2B6@8.3.0-6?arch=amd64&distro=debian-10&upstream=gcc-8",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2018-12886",
          "severity": "High",
          "description": "stack_protect_prologue in cfgexpand.c and stack_protect_epilogue in function.c in GNU Compiler Collection (GCC) 4.1 through 8 (under certain circumstances) generate instruction sequences when targeting ARM targets that spill the address of the stack protector guard, which allows an attacker to bypass the protection of -fstack-protector, -fstack-protector-all, -fstack-protector-strong, and -fstack-protector-explicit against stack overflow by controlling what the stack canary is compared against.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2019-15847",
          "severity": "High",
          "description": "The POWER9 backend in GNU Compiler Collection (GCC) before version 10 could optimize multiple calls of the __builtin_darn intrinsic into a single call, thus reducing the entropy of the random number generator. This occurred because a volatile operation was not specified. For example, within a single execution of a program, the output of every __builtin_darn() call may be the same.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2023-4039",
          "severity": "Medium",
          "description": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains  that target AArch64 allows an attacker to exploit an existing buffer  overflow in dynamically-sized local variables in your application  without this being detected. This stack-protector failure only applies  to C99-style dynamically-sized local variables or those created using  alloca(). The stack-protector operates as intended for statically-sized  local variables.  The default behavior when the stack-protector  detects an overflow is to terminate your application, resulting in  controlled loss of availability. An attacker who can exploit a buffer  overflow without triggering the stack-protector might be able to change  program flow control to cause an uncontrolled loss of availability or to  go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libsystemd0",
      "version": "241-7~deb10u7",
      "type": "library",
      "origin": "pkg:deb/debian/libsystemd0@241-7~deb10u7?arch=amd64&distro=debian-10&upstream=systemd",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2019-3843",
          "severity": "High",
          "description": "It was discovered that a systemd service that uses DynamicUser property can create a SUID/SGID binary that would be allowed to run as the transient service UID/GID even after the service is terminated. A local attacker may use this flaw to access resources that will be owned by a potentially different service in the future, when the UID/GID will be recycled.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2019-3844",
          "severity": "High",
          "description": "It was discovered that a systemd service that uses DynamicUser property can get new privileges through the execution of SUID binaries, which would allow to create binaries owned by the service transient group with the setgid bit set. A local attacker may use this flaw to access resources that will be owned by a potentially different service in the future, when the GID will be recycled.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2023-26604",
          "severity": "High",
          "description": "systemd before 247 does not adequately block local privilege escalation for some Sudo configurations, e.g., plausible sudoers files in which the \"systemctl status\" command may be executed. Specifically, systemd does not set LESSSECURE to 1, and thus other programs may be launched from the less program. This presents a substantial security risk when running systemctl from Sudo, because less executes as root when the terminal size is too small to show the complete systemctl output.",
          "fix_version": "241-7~deb10u9",
          "references": []
        },
        {
          "id": "CVE-2023-50387",
          "severity": "High",
          "description": "Certain DNSSEC aspects of the DNS protocol (in RFC 4033, 4034, 4035, 6840, and related RFCs) allow remote attackers to cause a denial of service (CPU consumption) via one or more DNSSEC responses, aka the \"KeyTrap\" issue. One of the concerns is that, when there is a zone with many DNSKEY and RRSIG records, the protocol specification implies that an algorithm must evaluate all combinations of DNSKEY and RRSIG records.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2023-50868",
          "severity": "High",
          "description": "The Closest Encloser Proof aspect of the DNS protocol (in RFC 5155 when RFC 9276 guidance is skipped) allows remote attackers to cause a denial of service (CPU consumption for SHA-1 computations) via DNSSEC responses in a random subdomain attack, aka the \"NSEC3\" issue. The RFC 5155 specification implies that an algorithm must perform thousands of iterations of a hash function in certain situations.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2021-33910",
          "severity": "Medium",
          "description": "basic/unit-name.c in systemd prior to 246.15, 247.8, 248.5, and 249.1 has a Memory Allocation with an Excessive Size Value (involving strdupa and alloca for a pathname controlled by a local attacker) that results in an operating system crash.",
          "fix_version": "241-7~deb10u8",
          "references": []
        },
        {
          "id": "CVE-2021-3997",
          "severity": "Medium",
          "description": "A flaw was found in systemd. An uncontrolled recursion in systemd-tmpfiles may lead to a denial of service at boot time when too many nested directories are created in /tmp.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2022-3821",
          "severity": "Medium",
          "description": "An off-by-one Error issue was discovered in Systemd in format_timespan() function of time-util.c. An attacker could supply specific values for time and accuracy that leads to buffer overrun in format_timespan(), leading to a Denial of Service.",
          "fix_version": "241-7~deb10u10",
          "references": []
        },
        {
          "id": "CVE-2022-4415",
          "severity": "Medium",
          "description": "A vulnerability was found in systemd. This security flaw can cause a local information leak due to systemd-coredump not respecting the fs.suid_dumpable kernel setting.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2023-7008",
          "severity": "Medium",
          "description": "A vulnerability was found in systemd-resolved. This issue may allow systemd-resolved to accept records of DNSSEC-signed domains even when they have no signature, allowing man-in-the-middles (or the upstream DNS resolver) to manipulate records.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2013-4392",
          "severity": "Negligible",
          "description": "systemd, when updating file permissions, allows local users to change the permissions and SELinux security contexts for arbitrary files via a symlink attack on unspecified files.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2019-20386",
          "severity": "Negligible",
          "description": "An issue was discovered in button_open in login/logind-button.c in systemd before 243. When executing the udevadm trigger command, a memory leak may occur.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2020-13529",
          "severity": "Negligible",
          "description": "An exploitable denial-of-service vulnerability exists in Systemd 245. A specially crafted DHCP FORCERENEW packet can cause a server running the DHCP client to be vulnerable to a DHCP ACK spoofing attack. An attacker can forge a pair of FORCERENEW and DCHP ACK packets to reconfigure the server.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2023-31437",
          "severity": "Negligible",
          "description": "An issue was discovered in systemd 253. An attacker can modify a sealed log file such that, in some views, not all existing and sealed log messages are displayed. NOTE: the vendor reportedly sent \"a reply denying that any of the finding was a security vulnerability.\"",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2023-31438",
          "severity": "Negligible",
          "description": "An issue was discovered in systemd 253. An attacker can truncate a sealed log file and then resume log sealing such that checking the integrity shows no error, despite modifications. NOTE: the vendor reportedly sent \"a reply denying that any of the finding was a security vulnerability.\"",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2023-31439",
          "severity": "Negligible",
          "description": "An issue was discovered in systemd 253. An attacker can modify the contents of past events in a sealed log file and then adjust the file such that checking the integrity shows no error, despite modifications. NOTE: the vendor reportedly sent \"a reply denying that any of the finding was a security vulnerability.\"",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libtasn1-6",
      "version": "4.13-3",
      "type": "library",
      "origin": "pkg:deb/debian/libtasn1-6@4.13-3?arch=amd64&distro=debian-10",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2021-46848",
          "severity": "Critical",
          "description": "GNU Libtasn1 before 4.19.0 has an ETYPE_OK off-by-one array size check that affects asn1_encode_simple_der.",
          "fix_version": "4.13-3+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2018-1000654",
          "severity": "Negligible",
          "description": "GNU Libtasn1-4.13 libtasn1-4.13 version libtasn1-4.13, libtasn1-4.12 contains a DoS, specifically CPU usage will reach 100% when running asn1Paser against the POC due to an issue in _asn1_expand_object_id(p_tree), after a long time, the program will be killed. This attack appears to be exploitable via parsing a crafted file.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libtiff5",
      "version": "4.1.0+git191117-2~deb10u2",
      "type": "library",
      "origin": "pkg:deb/debian/libtiff5@4.1.0%2Bgit191117-2~deb10u2?arch=amd64&distro=debian-10&upstream=tiff",
      "maintainer": null,
      "licenses": [
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2022-0891",
          "severity": "High",
          "description": "A heap buffer overflow in ExtractImageSection function in tiffcrop.c in libtiff library Version 4.3.0 allows attacker to trigger unsafe or out of bounds memory access via crafted TIFF image file which could result into application crash, potential information disclosure or any other context-dependent impact",
          "fix_version": "4.1.0+git191117-2~deb10u4",
          "references": []
        },
        {
          "id": "CVE-2022-3970",
          "severity": "High",
          "description": "A vulnerability was found in LibTIFF. It has been classified as critical. This affects the function TIFFReadRGBATileExt of the file libtiff/tif_getimage.c. The manipulation leads to integer overflow. It is possible to initiate the attack remotely. The exploit has been disclosed to the public and may be used. The name of the patch is 227500897dfb07fb7d27f7aa570050e62617e3be. It is recommended to apply a patch to fix this issue. The identifier VDB-213549 was assigned to this vulnerability.",
          "fix_version": "4.1.0+git191117-2~deb10u5",
          "references": []
        },
        {
          "id": "CVE-2023-25434",
          "severity": "High",
          "description": "libtiff 4.5.0 is vulnerable to Buffer Overflow via extractContigSamplesBytes() at /libtiff/tools/tiffcrop.c:3215.",
          "fix_version": "4.1.0+git191117-2~deb10u7",
          "references": []
        },
        {
          "id": "CVE-2023-52355",
          "severity": "High",
          "description": "An out-of-memory flaw was found in libtiff that could be triggered by passing a crafted tiff file to the TIFFRasterScanlineSize64() API. This flaw allows a remote attacker to cause a denial of service via a crafted input with a size smaller than 379 KB.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2023-52356",
          "severity": "High",
          "description": "A segment fault (SEGV) flaw was found in libtiff that could be triggered by passing a crafted tiff file to the TIFFReadRGBATileExt() API. This flaw allows a remote attacker to cause a heap-buffer overflow, leading to a denial of service.",
          "fix_version": "4.1.0+git191117-2~deb10u9",
          "references": []
        },
        {
          "id": "CVE-2020-19143",
          "severity": "Medium",
          "description": "Buffer Overflow in LibTiff v4.0.10 allows attackers to cause a denial of service via the \"TIFFVGetField\" funtion in the component 'libtiff/tif_dir.c'.",
          "fix_version": "4.1.0+git191117-2~deb10u3",
          "references": []
        },
        {
          "id": "CVE-2022-0561",
          "severity": "Medium",
          "description": "Null source pointer passed as an argument to memcpy() function within TIFFFetchStripThing() in tif_dirread.c in libtiff versions from 3.9.0 to 4.3.0 could lead to Denial of Service via crafted TIFF file. For users that compile libtiff from sources, the fix is available with commit eecb0712.",
          "fix_version": "4.1.0+git191117-2~deb10u4",
          "references": []
        },
        {
          "id": "CVE-2022-0562",
          "severity": "Medium",
          "description": "Null source pointer passed as an argument to memcpy() function within TIFFReadDirectory() in tif_dirread.c in libtiff versions from 4.0 to 4.3.0 could lead to Denial of Service via crafted TIFF file. For users that compile libtiff from sources, a fix is available with commit 561599c.",
          "fix_version": "4.1.0+git191117-2~deb10u4",
          "references": []
        },
        {
          "id": "CVE-2022-0865",
          "severity": "Medium",
          "description": "Reachable Assertion in tiffcp in libtiff 4.3.0 allows attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit 5e180045.",
          "fix_version": "4.1.0+git191117-2~deb10u4",
          "references": []
        },
        {
          "id": "CVE-2022-0907",
          "severity": "Medium",
          "description": "Unchecked Return Value to NULL Pointer Dereference in tiffcrop in libtiff 4.3.0 allows attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit f2b656e2.",
          "fix_version": "4.1.0+git191117-2~deb10u4",
          "references": []
        },
        {
          "id": "CVE-2022-0908",
          "severity": "Medium",
          "description": "Null source pointer passed as an argument to memcpy() function within TIFFFetchNormalTag () in tif_dirread.c in libtiff versions up to 4.3.0 could lead to Denial of Service via crafted TIFF file.",
          "fix_version": "4.1.0+git191117-2~deb10u4",
          "references": []
        },
        {
          "id": "CVE-2022-0909",
          "severity": "Medium",
          "description": "Divide By Zero error in tiffcrop in libtiff 4.3.0 allows attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit f8d0f9aa.",
          "fix_version": "4.1.0+git191117-2~deb10u4",
          "references": []
        },
        {
          "id": "CVE-2022-0924",
          "severity": "Medium",
          "description": "Out-of-bounds Read error in tiffcp in libtiff 4.3.0 allows attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit 408976c4.",
          "fix_version": "4.1.0+git191117-2~deb10u4",
          "references": []
        },
        {
          "id": "CVE-2022-1354",
          "severity": "Medium",
          "description": "A heap buffer overflow flaw was found in Libtiffs' tiffinfo.c in TIFFReadRawDataStriped() function. This flaw allows an attacker to pass a crafted TIFF file to the tiffinfo tool, triggering a heap buffer overflow issue and causing a crash that leads to a denial of service.",
          "fix_version": "4.1.0+git191117-2~deb10u5",
          "references": []
        },
        {
          "id": "CVE-2022-1355",
          "severity": "Medium",
          "description": "A stack buffer overflow flaw was found in Libtiffs' tiffcp.c in main() function. This flaw allows an attacker to pass a crafted TIFF file to the tiffcp tool, triggering a stack buffer overflow issue, possibly corrupting the memory, and causing a crash that leads to a denial of service.",
          "fix_version": "4.1.0+git191117-2~deb10u5",
          "references": []
        },
        {
          "id": "CVE-2022-2056",
          "severity": "Medium",
          "description": "Divide By Zero error in tiffcrop in libtiff 4.4.0 allows attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit f3a5e010.",
          "fix_version": "4.1.0+git191117-2~deb10u5",
          "references": []
        },
        {
          "id": "CVE-2022-2057",
          "severity": "Medium",
          "description": "Divide By Zero error in tiffcrop in libtiff 4.4.0 allows attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit f3a5e010.",
          "fix_version": "4.1.0+git191117-2~deb10u5",
          "references": []
        },
        {
          "id": "CVE-2022-2058",
          "severity": "Medium",
          "description": "Divide By Zero error in tiffcrop in libtiff 4.4.0 allows attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit f3a5e010.",
          "fix_version": "4.1.0+git191117-2~deb10u5",
          "references": []
        },
        {
          "id": "CVE-2022-22844",
          "severity": "Medium",
          "description": "LibTIFF 4.3.0 has an out-of-bounds read in _TIFFmemcpy in tif_unix.c in certain situations involving a custom tag and 0x0200 as the second word of the DE field.",
          "fix_version": "4.1.0+git191117-2~deb10u4",
          "references": []
        },
        {
          "id": "CVE-2022-2867",
          "severity": "Medium",
          "description": "libtiff's tiffcrop utility has a uint32_t underflow that can lead to out of bounds read and write. An attacker who supplies a crafted file to tiffcrop (likely via tricking a user to run tiffcrop on it with certain parameters) could cause a crash or in some cases, further exploitation.",
          "fix_version": "4.1.0+git191117-2~deb10u5",
          "references": []
        },
        {
          "id": "CVE-2022-2868",
          "severity": "Medium",
          "description": "libtiff's tiffcrop utility has a improper input validation flaw that can lead to out of bounds read and ultimately cause a crash if an attacker is able to supply a crafted file to tiffcrop.",
          "fix_version": "4.1.0+git191117-2~deb10u5",
          "references": []
        },
        {
          "id": "CVE-2022-2869",
          "severity": "Medium",
          "description": "libtiff's tiffcrop tool has a uint32_t underflow which leads to out of bounds read and write in the extractContigSamples8bits routine. An attacker who supplies a crafted file to tiffcrop could trigger this flaw, most likely by tricking a user into opening the crafted file with tiffcrop. Triggering this flaw could cause a crash or potentially further exploitation.",
          "fix_version": "4.1.0+git191117-2~deb10u5",
          "references": []
        },
        {
          "id": "CVE-2022-34526",
          "severity": "Medium",
          "description": "A stack overflow was discovered in the _TIFFVGetField function of Tiffsplit v4.4.0. This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted TIFF file parsed by the \"tiffsplit\" or \"tiffcrop\" utilities.",
          "fix_version": "4.1.0+git191117-2~deb10u5",
          "references": []
        },
        {
          "id": "CVE-2022-3570",
          "severity": "Medium",
          "description": "Multiple heap buffer overflows in tiffcrop.c utility in libtiff library Version 4.4.0 allows attacker to trigger unsafe or out of bounds memory access via crafted TIFF image file which could result into application crash, potential information disclosure or any other context-dependent impact",
          "fix_version": "4.1.0+git191117-2~deb10u5",
          "references": []
        },
        {
          "id": "CVE-2022-3597",
          "severity": "Medium",
          "description": "LibTIFF 4.4.0 has an out-of-bounds write in _TIFFmemcpy in libtiff/tif_unix.c:346 when called from extractImageSection, tools/tiffcrop.c:6826, allowing attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit 236b7191.",
          "fix_version": "4.1.0+git191117-2~deb10u5",
          "references": []
        },
        {
          "id": "CVE-2022-3598",
          "severity": "Medium",
          "description": "LibTIFF 4.4.0 has an out-of-bounds write in extractContigSamplesShifted24bits in tools/tiffcrop.c:3604, allowing attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit cfbb883b.",
          "fix_version": "4.1.0+git191117-2~deb10u5",
          "references": []
        },
        {
          "id": "CVE-2022-3599",
          "severity": "Medium",
          "description": "LibTIFF 4.4.0 has an out-of-bounds read in writeSingleSection in tools/tiffcrop.c:7345, allowing attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit e8131125.",
          "fix_version": "4.1.0+git191117-2~deb10u5",
          "references": []
        },
        {
          "id": "CVE-2022-3626",
          "severity": "Medium",
          "description": "LibTIFF 4.4.0 has an out-of-bounds write in _TIFFmemset in libtiff/tif_unix.c:340 when called from processCropSelections, tools/tiffcrop.c:7619, allowing attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit 236b7191.",
          "fix_version": "4.1.0+git191117-2~deb10u5",
          "references": []
        },
        {
          "id": "CVE-2022-3627",
          "severity": "Medium",
          "description": "LibTIFF 4.4.0 has an out-of-bounds write in _TIFFmemcpy in libtiff/tif_unix.c:346 when called from extractImageSection, tools/tiffcrop.c:6860, allowing attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit 236b7191.",
          "fix_version": "4.1.0+git191117-2~deb10u5",
          "references": []
        },
        {
          "id": "CVE-2022-40090",
          "severity": "Medium",
          "description": "An issue was discovered in function TIFFReadDirectory libtiff before 4.4.0 allows attackers to cause a denial of service via crafted TIFF file.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2022-4645",
          "severity": "Medium",
          "description": "LibTIFF 4.4.0 has an out-of-bounds read in tiffcp in tools/tiffcp.c:948, allowing attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit e8131125.",
          "fix_version": "4.1.0+git191117-2~deb10u5",
          "references": []
        },
        {
          "id": "CVE-2022-48281",
          "severity": "Medium",
          "description": "processCropSelections in tools/tiffcrop.c in LibTIFF through 4.5.0 has a heap-based buffer overflow (e.g., \"WRITE of size 307203\") via a crafted TIFF image.",
          "fix_version": "4.1.0+git191117-2~deb10u6",
          "references": []
        },
        {
          "id": "CVE-2023-0795",
          "severity": "Medium",
          "description": "LibTIFF 4.4.0 has an out-of-bounds read in tiffcrop in tools/tiffcrop.c:3488, allowing attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit afaabc3e.",
          "fix_version": "4.1.0+git191117-2~deb10u7",
          "references": []
        },
        {
          "id": "CVE-2023-0796",
          "severity": "Medium",
          "description": "LibTIFF 4.4.0 has an out-of-bounds read in tiffcrop in tools/tiffcrop.c:3592, allowing attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit afaabc3e.",
          "fix_version": "4.1.0+git191117-2~deb10u7",
          "references": []
        },
        {
          "id": "CVE-2023-0797",
          "severity": "Medium",
          "description": "LibTIFF 4.4.0 has an out-of-bounds read in tiffcrop in libtiff/tif_unix.c:368, invoked by tools/tiffcrop.c:2903 and tools/tiffcrop.c:6921, allowing attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit afaabc3e.",
          "fix_version": "4.1.0+git191117-2~deb10u7",
          "references": []
        },
        {
          "id": "CVE-2023-0798",
          "severity": "Medium",
          "description": "LibTIFF 4.4.0 has an out-of-bounds read in tiffcrop in tools/tiffcrop.c:3400, allowing attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit afaabc3e.",
          "fix_version": "4.1.0+git191117-2~deb10u7",
          "references": []
        },
        {
          "id": "CVE-2023-0799",
          "severity": "Medium",
          "description": "LibTIFF 4.4.0 has an out-of-bounds read in tiffcrop in tools/tiffcrop.c:3701, allowing attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit afaabc3e.",
          "fix_version": "4.1.0+git191117-2~deb10u7",
          "references": []
        },
        {
          "id": "CVE-2023-0800",
          "severity": "Medium",
          "description": "LibTIFF 4.4.0 has an out-of-bounds write in tiffcrop in tools/tiffcrop.c:3502, allowing attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit 33aee127.",
          "fix_version": "4.1.0+git191117-2~deb10u7",
          "references": []
        },
        {
          "id": "CVE-2023-0801",
          "severity": "Medium",
          "description": "LibTIFF 4.4.0 has an out-of-bounds write in tiffcrop in libtiff/tif_unix.c:368, invoked by tools/tiffcrop.c:2903 and tools/tiffcrop.c:6778, allowing attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit 33aee127.",
          "fix_version": "4.1.0+git191117-2~deb10u7",
          "references": []
        },
        {
          "id": "CVE-2023-0802",
          "severity": "Medium",
          "description": "LibTIFF 4.4.0 has an out-of-bounds write in tiffcrop in tools/tiffcrop.c:3724, allowing attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit 33aee127.",
          "fix_version": "4.1.0+git191117-2~deb10u7",
          "references": []
        },
        {
          "id": "CVE-2023-0803",
          "severity": "Medium",
          "description": "LibTIFF 4.4.0 has an out-of-bounds write in tiffcrop in tools/tiffcrop.c:3516, allowing attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit 33aee127.",
          "fix_version": "4.1.0+git191117-2~deb10u7",
          "references": []
        },
        {
          "id": "CVE-2023-0804",
          "severity": "Medium",
          "description": "LibTIFF 4.4.0 has an out-of-bounds write in tiffcrop in tools/tiffcrop.c:3609, allowing attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit 33aee127.",
          "fix_version": "4.1.0+git191117-2~deb10u7",
          "references": []
        },
        {
          "id": "CVE-2023-25433",
          "severity": "Medium",
          "description": "libtiff 4.5.0 is vulnerable to Buffer Overflow via /libtiff/tools/tiffcrop.c:8499. Incorrect updating of buffer size after rotateImage() in tiffcrop cause heap-buffer-overflow and SEGV.",
          "fix_version": "4.1.0+git191117-2~deb10u8",
          "references": []
        },
        {
          "id": "CVE-2023-25435",
          "severity": "Medium",
          "description": "libtiff 4.5.0 is vulnerable to Buffer Overflow via extractContigSamplesShifted8bits() at /libtiff/tools/tiffcrop.c:3753.",
          "fix_version": "4.1.0+git191117-2~deb10u7",
          "references": []
        },
        {
          "id": "CVE-2023-26965",
          "severity": "Medium",
          "description": "loadImage() in tools/tiffcrop.c in LibTIFF through 4.5.0 has a heap-based use after free via a crafted TIFF image.",
          "fix_version": "4.1.0+git191117-2~deb10u8",
          "references": []
        },
        {
          "id": "CVE-2023-26966",
          "severity": "Medium",
          "description": "libtiff 4.5.0 is vulnerable to Buffer Overflow in uv_encode() when libtiff reads a corrupted little-endian TIFF file and specifies the output to be big-endian.",
          "fix_version": "4.1.0+git191117-2~deb10u8",
          "references": []
        },
        {
          "id": "CVE-2023-2908",
          "severity": "Medium",
          "description": "A null pointer dereference issue was found in Libtiff's tif_dir.c file. This issue may allow an attacker to pass a crafted TIFF image file to the tiffcp utility which triggers a runtime error that causes undefined behavior. This will result in an application crash, eventually leading to a denial of service.",
          "fix_version": "4.1.0+git191117-2~deb10u8",
          "references": []
        },
        {
          "id": "CVE-2023-30086",
          "severity": "Medium",
          "description": "Buffer Overflow vulnerability found in Libtiff V.4.0.7 allows a local attacker to cause a denial of service via the tiffcp function in tiffcp.c.",
          "fix_version": "4.1.0+git191117-2~deb10u5",
          "references": []
        },
        {
          "id": "CVE-2023-30774",
          "severity": "Medium",
          "description": "A vulnerability was found in the libtiff library. This flaw causes a heap buffer overflow issue via the TIFFTAG_INKNAMES and TIFFTAG_NUMBEROFINKS values.",
          "fix_version": "4.1.0+git191117-2~deb10u5",
          "references": []
        },
        {
          "id": "CVE-2023-3316",
          "severity": "Medium",
          "description": "A NULL pointer dereference in TIFFClose() is caused by a failure to open an output file (non-existent path or a path that requires permissions like /dev/null) while specifying zones.",
          "fix_version": "4.1.0+git191117-2~deb10u8",
          "references": []
        },
        {
          "id": "CVE-2023-3576",
          "severity": "Medium",
          "description": "A memory leak flaw was found in Libtiff's tiffcrop utility. This issue occurs when tiffcrop operates on a TIFF image file, allowing an attacker to pass a crafted TIFF image file to tiffcrop utility, which causes this memory leak issue, resulting an application crash, eventually leading to a denial of service.",
          "fix_version": "4.1.0+git191117-2~deb10u9",
          "references": []
        },
        {
          "id": "CVE-2023-3618",
          "severity": "Medium",
          "description": "A flaw was found in libtiff. A specially crafted tiff file can lead to a segmentation fault due to a buffer overflow in the Fax3Encode function in libtiff/tif_fax3.c, resulting in a denial of service.",
          "fix_version": "4.1.0+git191117-2~deb10u8",
          "references": []
        },
        {
          "id": "CVE-2023-40745",
          "severity": "Medium",
          "description": "LibTIFF is vulnerable to an integer overflow. This flaw allows remote attackers to cause a denial of service (application crash) or possibly execute an arbitrary code via a crafted tiff image, which triggers a heap-based buffer overflow.",
          "fix_version": "4.1.0+git191117-2~deb10u8",
          "references": []
        },
        {
          "id": "CVE-2023-41175",
          "severity": "Medium",
          "description": "A vulnerability was found in libtiff due to multiple potential integer overflows in raw2tiff.c. This flaw allows remote attackers to cause a denial of service or possibly execute an arbitrary code via a crafted tiff image, which triggers a heap-based buffer overflow.",
          "fix_version": "4.1.0+git191117-2~deb10u8",
          "references": []
        },
        {
          "id": "CVE-2023-6277",
          "severity": "Medium",
          "description": "An out-of-memory flaw was found in libtiff. Passing a crafted tiff file to TIFFOpen() API may allow a remote attacker to cause a denial of service via a craft input with size smaller than 379 KB.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2017-16232",
          "severity": "Negligible",
          "description": "LibTIFF 4.0.8 has multiple memory leak vulnerabilities, which allow attackers to cause a denial of service (memory consumption), as demonstrated by tif_open.c, tif_lzw.c, and tif_aux.c. NOTE: Third parties were unable to reproduce the issue",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2017-17973",
          "severity": "Negligible",
          "description": "In LibTIFF 4.0.8, there is a heap-based use-after-free in the t2p_writeproc function in tiff2pdf.c. NOTE: there is a third-party report of inability to reproduce this issue",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2017-5563",
          "severity": "Negligible",
          "description": "LibTIFF version 4.0.7 is vulnerable to a heap-based buffer over-read in tif_lzw.c resulting in DoS or code execution via a crafted bmp image to tools/bmp2tiff.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2017-9117",
          "severity": "Negligible",
          "description": "In LibTIFF 4.0.7, the program processes BMP images without verifying that biWidth and biHeight in the bitmap-information header match the actual input, leading to a heap-based buffer over-read in bmp2tiff.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2018-10126",
          "severity": "Negligible",
          "description": "LibTIFF 4.0.9 has a NULL pointer dereference in the jpeg_fdct_16x16 function in jfdctint.c.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2020-35521",
          "severity": "Negligible",
          "description": "A flaw was found in libtiff. Due to a memory allocation failure in tif_read.c, a crafted TIFF file can lead to an abort, resulting in denial of service.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2020-35522",
          "severity": "Negligible",
          "description": "In LibTIFF, there is a memory malloc failure in tif_pixarlog.c. A crafted TIFF document can lead to an abort, resulting in a remote denial of service attack.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2022-1056",
          "severity": "Negligible",
          "description": "Out-of-bounds Read error in tiffcrop in libtiff 4.3.0 allows attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit 46dc8fcd.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2022-1210",
          "severity": "Negligible",
          "description": "A vulnerability classified as problematic was found in LibTIFF 4.3.0. Affected by this vulnerability is the TIFF File Handler of tiff2ps. Opening a malicious file leads to a denial of service. The attack can be launched remotely but requires user interaction. The exploit has been disclosed to the public and may be used.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2022-2519",
          "severity": "Negligible",
          "description": "There is a double free or corruption in rotateImage() at tiffcrop.c:8839 found in libtiff 4.4.0rc1",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2022-2520",
          "severity": "Negligible",
          "description": "A flaw was found in libtiff 4.4.0rc1. There is a sysmalloc assertion fail in rotateImage() at tiffcrop.c:8621 that can cause program crash when reading a crafted input.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2022-2521",
          "severity": "Negligible",
          "description": "It was found in libtiff 4.4.0rc1 that there is an invalid pointer free operation in TIFFClose() at tif_close.c:131 called by tiffcrop.c:2522 that can cause a program crash and denial of service while processing crafted input.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2022-2953",
          "severity": "Negligible",
          "description": "LibTIFF 4.4.0 has an out-of-bounds read in extractImageSection in tools/tiffcrop.c:6905, allowing attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit 48d6ece8.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2023-1916",
          "severity": "Negligible",
          "description": "A flaw was found in tiffcrop, a program distributed by the libtiff package. A specially crafted tiff file can lead to an out-of-bounds read in the extractImageSection function in tools/tiffcrop.c, resulting in a denial of service and limited information disclosure. This issue affects libtiff versions 4.x.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2023-30775",
          "severity": "Negligible",
          "description": "A vulnerability was found in the libtiff library. This security flaw causes a heap buffer overflow in extractContigSamples32bits, tiffcrop.c.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2023-3164",
          "severity": "Negligible",
          "description": "A heap-buffer-overflow vulnerability was found in LibTIFF, in extractImageSection() at tools/tiffcrop.c:7916 and tools/tiffcrop.c:7801. This flaw allows attackers to cause a denial of service via a crafted tiff file.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2023-6228",
          "severity": "Negligible",
          "description": "An issue was found in the tiffcp utility distributed by the libtiff package where a crafted TIFF file on processing may cause a heap-based buffer overflow leads to an application crash.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libtinfo6",
      "version": "6.1+20181013-2+deb10u2",
      "type": "library",
      "origin": "pkg:deb/debian/libtinfo6@6.1%2B20181013-2%2Bdeb10u2?arch=amd64&distro=debian-10&upstream=ncurses",
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": [
        {
          "id": "CVE-2021-39537",
          "severity": "High",
          "description": "An issue was discovered in ncurses through v6.2-1. _nc_captoinfo in captoinfo.c has a heap-based buffer overflow.",
          "fix_version": "6.1+20181013-2+deb10u5",
          "references": []
        },
        {
          "id": "CVE-2022-29458",
          "severity": "High",
          "description": "ncurses 6.3 before patch 20220416 has an out-of-bounds read and segmentation violation in convert_strings in tinfo/read_entry.c in the terminfo library.",
          "fix_version": "6.1+20181013-2+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2023-29491",
          "severity": "High",
          "description": "ncurses before 6.4 20230408, when used by a setuid application, allows local users to trigger security-relevant memory corruption via malformed data in a terminfo database file that is found in $HOME/.terminfo or reached via the TERMINFO or TERM environment variable.",
          "fix_version": "6.1+20181013-2+deb10u5",
          "references": []
        },
        {
          "id": "CVE-2020-19189",
          "severity": "Medium",
          "description": "Buffer Overflow vulnerability in postprocess_terminfo function in tinfo/parse_entry.c:997 in ncurses 6.1 allows remote attackers to cause a denial of service via crafted command.",
          "fix_version": "6.1+20181013-2+deb10u4",
          "references": []
        },
        {
          "id": "CVE-2023-50495",
          "severity": "Medium",
          "description": "NCurse v6.4-20230418 was discovered to contain a segmentation fault via the component _nc_wrap_entry().",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2023-45918",
          "severity": "Unknown",
          "description": "ncurses 6.4-20230610 has a NULL pointer dereference in tgetstr in tinfo/lib_termcap.c.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libudev1",
      "version": "241-7~deb10u7",
      "type": "library",
      "origin": "pkg:deb/debian/libudev1@241-7~deb10u7?arch=amd64&distro=debian-10&upstream=systemd",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2019-3843",
          "severity": "High",
          "description": "It was discovered that a systemd service that uses DynamicUser property can create a SUID/SGID binary that would be allowed to run as the transient service UID/GID even after the service is terminated. A local attacker may use this flaw to access resources that will be owned by a potentially different service in the future, when the UID/GID will be recycled.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2019-3844",
          "severity": "High",
          "description": "It was discovered that a systemd service that uses DynamicUser property can get new privileges through the execution of SUID binaries, which would allow to create binaries owned by the service transient group with the setgid bit set. A local attacker may use this flaw to access resources that will be owned by a potentially different service in the future, when the GID will be recycled.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2023-26604",
          "severity": "High",
          "description": "systemd before 247 does not adequately block local privilege escalation for some Sudo configurations, e.g., plausible sudoers files in which the \"systemctl status\" command may be executed. Specifically, systemd does not set LESSSECURE to 1, and thus other programs may be launched from the less program. This presents a substantial security risk when running systemctl from Sudo, because less executes as root when the terminal size is too small to show the complete systemctl output.",
          "fix_version": "241-7~deb10u9",
          "references": []
        },
        {
          "id": "CVE-2023-50387",
          "severity": "High",
          "description": "Certain DNSSEC aspects of the DNS protocol (in RFC 4033, 4034, 4035, 6840, and related RFCs) allow remote attackers to cause a denial of service (CPU consumption) via one or more DNSSEC responses, aka the \"KeyTrap\" issue. One of the concerns is that, when there is a zone with many DNSKEY and RRSIG records, the protocol specification implies that an algorithm must evaluate all combinations of DNSKEY and RRSIG records.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2023-50868",
          "severity": "High",
          "description": "The Closest Encloser Proof aspect of the DNS protocol (in RFC 5155 when RFC 9276 guidance is skipped) allows remote attackers to cause a denial of service (CPU consumption for SHA-1 computations) via DNSSEC responses in a random subdomain attack, aka the \"NSEC3\" issue. The RFC 5155 specification implies that an algorithm must perform thousands of iterations of a hash function in certain situations.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2021-33910",
          "severity": "Medium",
          "description": "basic/unit-name.c in systemd prior to 246.15, 247.8, 248.5, and 249.1 has a Memory Allocation with an Excessive Size Value (involving strdupa and alloca for a pathname controlled by a local attacker) that results in an operating system crash.",
          "fix_version": "241-7~deb10u8",
          "references": []
        },
        {
          "id": "CVE-2021-3997",
          "severity": "Medium",
          "description": "A flaw was found in systemd. An uncontrolled recursion in systemd-tmpfiles may lead to a denial of service at boot time when too many nested directories are created in /tmp.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2022-3821",
          "severity": "Medium",
          "description": "An off-by-one Error issue was discovered in Systemd in format_timespan() function of time-util.c. An attacker could supply specific values for time and accuracy that leads to buffer overrun in format_timespan(), leading to a Denial of Service.",
          "fix_version": "241-7~deb10u10",
          "references": []
        },
        {
          "id": "CVE-2022-4415",
          "severity": "Medium",
          "description": "A vulnerability was found in systemd. This security flaw can cause a local information leak due to systemd-coredump not respecting the fs.suid_dumpable kernel setting.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2023-7008",
          "severity": "Medium",
          "description": "A vulnerability was found in systemd-resolved. This issue may allow systemd-resolved to accept records of DNSSEC-signed domains even when they have no signature, allowing man-in-the-middles (or the upstream DNS resolver) to manipulate records.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2013-4392",
          "severity": "Negligible",
          "description": "systemd, when updating file permissions, allows local users to change the permissions and SELinux security contexts for arbitrary files via a symlink attack on unspecified files.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2019-20386",
          "severity": "Negligible",
          "description": "An issue was discovered in button_open in login/logind-button.c in systemd before 243. When executing the udevadm trigger command, a memory leak may occur.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2020-13529",
          "severity": "Negligible",
          "description": "An exploitable denial-of-service vulnerability exists in Systemd 245. A specially crafted DHCP FORCERENEW packet can cause a server running the DHCP client to be vulnerable to a DHCP ACK spoofing attack. An attacker can forge a pair of FORCERENEW and DCHP ACK packets to reconfigure the server.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2023-31437",
          "severity": "Negligible",
          "description": "An issue was discovered in systemd 253. An attacker can modify a sealed log file such that, in some views, not all existing and sealed log messages are displayed. NOTE: the vendor reportedly sent \"a reply denying that any of the finding was a security vulnerability.\"",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2023-31438",
          "severity": "Negligible",
          "description": "An issue was discovered in systemd 253. An attacker can truncate a sealed log file and then resume log sealing such that checking the integrity shows no error, despite modifications. NOTE: the vendor reportedly sent \"a reply denying that any of the finding was a security vulnerability.\"",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2023-31439",
          "severity": "Negligible",
          "description": "An issue was discovered in systemd 253. An attacker can modify the contents of past events in a sealed log file and then adjust the file such that checking the integrity shows no error, despite modifications. NOTE: the vendor reportedly sent \"a reply denying that any of the finding was a security vulnerability.\"",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libunistring2",
      "version": "0.9.10-1",
      "type": "library",
      "origin": "pkg:deb/debian/libunistring2@0.9.10-1?arch=amd64&distro=debian-10&upstream=libunistring",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "libuuid1",
      "version": "2.33.1-0.1",
      "type": "library",
      "origin": "pkg:deb/debian/libuuid1@2.33.1-0.1?arch=amd64&distro=debian-10&upstream=util-linux",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2021-37600",
          "severity": "Medium",
          "description": "An integer overflow in util-linux through 2.37.1 can potentially cause a buffer overflow if an attacker were able to use system resources in a way that leads to a large number in the /proc/sysvipc/sem file. NOTE: this is unexploitable in GNU C Library environments, and possibly in all realistic environments.",
          "fix_version": "2.33.1-0.1+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2024-28085",
          "severity": "Low",
          "description": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
          "fix_version": "2.33.1-0.1+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2022-0563",
          "severity": "Negligible",
          "description": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libwebp6",
      "version": "0.6.1-2",
      "type": "library",
      "origin": "pkg:deb/debian/libwebp6@0.6.1-2?arch=amd64&distro=debian-10&upstream=libwebp",
      "maintainer": null,
      "licenses": [
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2018-25009",
          "severity": "Critical",
          "description": "A heap-based buffer overflow was found in libwebp in versions before 1.0.1 in GetLE16().",
          "fix_version": "0.6.1-2+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2018-25010",
          "severity": "Critical",
          "description": "A heap-based buffer overflow was found in libwebp in versions before 1.0.1 in ApplyFilter().",
          "fix_version": "0.6.1-2+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2018-25011",
          "severity": "Critical",
          "description": "A heap-based buffer overflow was found in libwebp in versions before 1.0.1 in PutLE16().",
          "fix_version": "0.6.1-2+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2018-25012",
          "severity": "Critical",
          "description": "A heap-based buffer overflow was found in libwebp in versions before 1.0.1 in GetLE24().",
          "fix_version": "0.6.1-2+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2018-25013",
          "severity": "Critical",
          "description": "A heap-based buffer overflow was found in libwebp in versions before 1.0.1 in ShiftBytes().",
          "fix_version": "0.6.1-2+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2018-25014",
          "severity": "Critical",
          "description": "A use of uninitialized value was found in libwebp in versions before 1.0.1 in ReadSymbol().",
          "fix_version": "0.6.1-2+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2020-36328",
          "severity": "Critical",
          "description": "A flaw was found in libwebp in versions before 1.0.1. A heap-based buffer overflow in function WebPDecodeRGBInto is possible due to an invalid check for buffer size. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.",
          "fix_version": "0.6.1-2+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2020-36329",
          "severity": "Critical",
          "description": "A flaw was found in libwebp in versions before 1.0.1. A use-after-free was found due to a thread being killed too early. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.",
          "fix_version": "0.6.1-2+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2020-36330",
          "severity": "Critical",
          "description": "A flaw was found in libwebp in versions before 1.0.1. An out-of-bounds read was found in function ChunkVerifyAndAssign. The highest threat from this vulnerability is to data confidentiality and to the service availability.",
          "fix_version": "0.6.1-2+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2020-36331",
          "severity": "Critical",
          "description": "A flaw was found in libwebp in versions before 1.0.1. An out-of-bounds read was found in function ChunkAssignData. The highest threat from this vulnerability is to data confidentiality and to the service availability.",
          "fix_version": "0.6.1-2+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2020-36332",
          "severity": "High",
          "description": "A flaw was found in libwebp in versions before 1.0.1. When reading a file libwebp allocates an excessive amount of memory. The highest threat from this vulnerability is to the service availability.",
          "fix_version": "0.6.1-2+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2023-1999",
          "severity": "High",
          "description": "There exists a use after free/double free in libwebp. An attacker can use the\u00c2\u00a0ApplyFiltersAndEncode() function and loop through to free best.bw and assign best = trial pointer. The second loop will then return 0 because of an Out of memory error in VP8 encoder, the pointer is still assigned to trial and the AddressSanitizer will attempt a double free.",
          "fix_version": "0.6.1-2+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2023-4863",
          "severity": "High",
          "description": "Heap buffer overflow in libwebp in Google Chrome prior to 116.0.5845.187 and libwebp 1.3.2 allowed a remote attacker to perform an out of bounds memory write via a crafted HTML page. (Chromium security severity: Critical)",
          "fix_version": "0.6.1-2+deb10u3",
          "references": []
        }
      ]
    },
    {
      "name": "libx11-6",
      "version": "2:1.6.7-1+deb10u1",
      "type": "library",
      "origin": "pkg:deb/debian/libx11-6@2%3A1.6.7-1%2Bdeb10u1?arch=amd64&distro=debian-10&upstream=libx11",
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": [
        {
          "id": "CVE-2021-31535",
          "severity": "Critical",
          "description": "LookupCol.c in X.Org X through X11R7.7 and libX11 before 1.7.1 might allow remote attackers to execute arbitrary code. The libX11 XLookupColor request (intended for server-side color lookup) contains a flaw allowing a client to send color-name requests with a name longer than the maximum size allowed by the protocol (and also longer than the maximum packet size for normal-sized packets). The user-controlled data exceeding the maximum size is then interpreted by the server as additional X protocol requests and executed, e.g., to disable X server authorization completely. For example, if the victim encounters malicious terminal control sequences for color codes, then the attacker may be able to take full control of the running graphical session.",
          "fix_version": "2:1.6.7-1+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2023-3138",
          "severity": "High",
          "description": "A vulnerability was found in libX11. The security flaw occurs because the functions in src/InitExt.c in libX11 do not check that the values provided for the Request, Event, or Error IDs are within the bounds of the arrays that those functions write to, using those IDs as array indexes. They trust that they were called with values provided by an Xserver adhering to the bounds specified in the X11 protocol, as all X servers provided by X.Org do. As the protocol only specifies a single byte for these values, an out-of-bounds value provided by a malicious server (or a malicious proxy-in-the-middle) can only overwrite other portions of the Display structure and not write outside the bounds of the Display structure itself, possibly causing the client to crash with this memory corruption.",
          "fix_version": "2:1.6.7-1+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2023-43787",
          "severity": "High",
          "description": "A vulnerability was found in libX11 due to an integer overflow within the XCreateImage() function. This flaw allows a local user to trigger an integer overflow and execute arbitrary code with elevated privileges.",
          "fix_version": "2:1.6.7-1+deb10u4",
          "references": []
        },
        {
          "id": "CVE-2023-43785",
          "severity": "Medium",
          "description": "A vulnerability was found in libX11 due to a boundary condition within the _XkbReadKeySyms() function. This flaw allows a local user to trigger an out-of-bounds read error and read the contents of memory on the system.",
          "fix_version": "2:1.6.7-1+deb10u4",
          "references": []
        },
        {
          "id": "CVE-2023-43786",
          "severity": "Medium",
          "description": "A vulnerability was found in libX11 due to an infinite loop within the PutSubImage() function. This flaw allows a local user to consume all available system resources and cause a denial of service condition.",
          "fix_version": "2:1.6.7-1+deb10u4",
          "references": []
        }
      ]
    },
    {
      "name": "libx11-data",
      "version": "2:1.6.7-1+deb10u1",
      "type": "library",
      "origin": "pkg:deb/debian/libx11-data@2%3A1.6.7-1%2Bdeb10u1?arch=all&distro=debian-10&upstream=libx11",
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": [
        {
          "id": "CVE-2021-31535",
          "severity": "Critical",
          "description": "LookupCol.c in X.Org X through X11R7.7 and libX11 before 1.7.1 might allow remote attackers to execute arbitrary code. The libX11 XLookupColor request (intended for server-side color lookup) contains a flaw allowing a client to send color-name requests with a name longer than the maximum size allowed by the protocol (and also longer than the maximum packet size for normal-sized packets). The user-controlled data exceeding the maximum size is then interpreted by the server as additional X protocol requests and executed, e.g., to disable X server authorization completely. For example, if the victim encounters malicious terminal control sequences for color codes, then the attacker may be able to take full control of the running graphical session.",
          "fix_version": "2:1.6.7-1+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2023-3138",
          "severity": "High",
          "description": "A vulnerability was found in libX11. The security flaw occurs because the functions in src/InitExt.c in libX11 do not check that the values provided for the Request, Event, or Error IDs are within the bounds of the arrays that those functions write to, using those IDs as array indexes. They trust that they were called with values provided by an Xserver adhering to the bounds specified in the X11 protocol, as all X servers provided by X.Org do. As the protocol only specifies a single byte for these values, an out-of-bounds value provided by a malicious server (or a malicious proxy-in-the-middle) can only overwrite other portions of the Display structure and not write outside the bounds of the Display structure itself, possibly causing the client to crash with this memory corruption.",
          "fix_version": "2:1.6.7-1+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2023-43787",
          "severity": "High",
          "description": "A vulnerability was found in libX11 due to an integer overflow within the XCreateImage() function. This flaw allows a local user to trigger an integer overflow and execute arbitrary code with elevated privileges.",
          "fix_version": "2:1.6.7-1+deb10u4",
          "references": []
        },
        {
          "id": "CVE-2023-43785",
          "severity": "Medium",
          "description": "A vulnerability was found in libX11 due to a boundary condition within the _XkbReadKeySyms() function. This flaw allows a local user to trigger an out-of-bounds read error and read the contents of memory on the system.",
          "fix_version": "2:1.6.7-1+deb10u4",
          "references": []
        },
        {
          "id": "CVE-2023-43786",
          "severity": "Medium",
          "description": "A vulnerability was found in libX11 due to an infinite loop within the PutSubImage() function. This flaw allows a local user to consume all available system resources and cause a denial of service condition.",
          "fix_version": "2:1.6.7-1+deb10u4",
          "references": []
        }
      ]
    },
    {
      "name": "libxau6",
      "version": "1:1.0.8-1+b2",
      "type": "library",
      "origin": "pkg:deb/debian/libxau6@1%3A1.0.8-1%2Bb2?arch=amd64&distro=debian-10&upstream=libxau%401%3A1.0.8-1",
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "libxcb1",
      "version": "1.13.1-2",
      "type": "library",
      "origin": "pkg:deb/debian/libxcb1@1.13.1-2?arch=amd64&distro=debian-10&upstream=libxcb",
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "libxdmcp6",
      "version": "1:1.1.2-3",
      "type": "library",
      "origin": "pkg:deb/debian/libxdmcp6@1%3A1.1.2-3?arch=amd64&distro=debian-10&upstream=libxdmcp",
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "libxml2",
      "version": "2.9.4+dfsg1-7+deb10u1",
      "type": "library",
      "origin": "pkg:deb/debian/libxml2@2.9.4%2Bdfsg1-7%2Bdeb10u1?arch=amd64&distro=debian-10",
      "maintainer": null,
      "licenses": [
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2017-16932",
          "severity": "High",
          "description": "parser.c in libxml2 before 2.9.5 does not prevent infinite recursion in parameter entities.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2021-3516",
          "severity": "High",
          "description": "There's a flaw in libxml2's xmllint in versions before 2.9.11. An attacker who is able to submit a crafted file to be processed by xmllint could trigger a use-after-free. The greatest impact of this flaw is to confidentiality, integrity, and availability.",
          "fix_version": "2.9.4+dfsg1-7+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2021-3517",
          "severity": "High",
          "description": "There is a flaw in the xml entity encoding functionality of libxml2 in versions before 2.9.11. An attacker who is able to supply a crafted file to be processed by an application linked with the affected functionality of libxml2 could trigger an out-of-bounds read. The most likely impact of this flaw is to application availability, with some potential impact to confidentiality and integrity if an attacker is able to use memory information to further exploit the application.",
          "fix_version": "2.9.4+dfsg1-7+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2021-3518",
          "severity": "High",
          "description": "There's a flaw in libxml2 in versions before 2.9.11. An attacker who is able to submit a crafted file to be processed by an application linked with libxml2 could trigger a use-after-free. The greatest impact from this flaw is to confidentiality, integrity, and availability.",
          "fix_version": "2.9.4+dfsg1-7+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2022-2309",
          "severity": "High",
          "description": "NULL Pointer Dereference allows attackers to cause a denial of service (or application crash). This only applies when lxml is used together with libxml2 2.9.10 through 2.9.14. libxml2 2.9.9 and earlier are not affected. It allows triggering crashes through forged input data, given a vulnerable code sequence in the application. The vulnerability is caused by the iterwalk function (also used by the canonicalize function). Such code shouldn't be in wide-spread use, given that parsing + iterwalk would usually be replaced with the more efficient iterparse function. However, an XML converter that serialises to C14N would also be vulnerable, for example, and there are legitimate use cases for this code sequence. If untrusted input is received (also remotely) and processed via iterwalk function, a crash can be triggered.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2022-23308",
          "severity": "High",
          "description": "valid.c in libxml2 before 2.9.13 has a use-after-free of ID and IDREF attributes.",
          "fix_version": "2.9.4+dfsg1-7+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2022-40303",
          "severity": "High",
          "description": "An issue was discovered in libxml2 before 2.10.3. When parsing a multi-gigabyte XML document with the XML_PARSE_HUGE parser option enabled, several integer counters can overflow. This results in an attempt to access an array at a negative 2GB offset, typically leading to a segmentation fault.",
          "fix_version": "2.9.4+dfsg1-7+deb10u5",
          "references": []
        },
        {
          "id": "CVE-2022-40304",
          "severity": "High",
          "description": "An issue was discovered in libxml2 before 2.10.3. Certain invalid XML entity definitions can corrupt a hash table key, potentially leading to subsequent logic errors. In one case, a double-free can be provoked.",
          "fix_version": "2.9.4+dfsg1-7+deb10u5",
          "references": []
        },
        {
          "id": "CVE-2024-25062",
          "severity": "High",
          "description": "An issue was discovered in libxml2 before 2.11.7 and 2.12.x before 2.12.5. When using the XML Reader interface with DTD validation and XInclude expansion enabled, processing crafted XML documents can lead to an xmlValidatePopElement use-after-free.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2016-3709",
          "severity": "Medium",
          "description": "Possible cross-site scripting vulnerability in libxml after commit 960f0e2.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2016-9318",
          "severity": "Medium",
          "description": "libxml2 2.9.4 and earlier, as used in XMLSec 1.2.23 and earlier and other products, does not offer a flag directly indicating that the current document may be read but other files may not be opened, which makes it easier for remote attackers to conduct XML External Entity (XXE) attacks via a crafted document.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2020-24977",
          "severity": "Medium",
          "description": "GNOME project libxml2 v2.9.10 has a global buffer over-read vulnerability in xmlEncodeEntitiesInternal at libxml2/entities.c. The issue has been fixed in commit 50f06b3e.",
          "fix_version": "2.9.4+dfsg1-7+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2021-3537",
          "severity": "Medium",
          "description": "A vulnerability found in libxml2 in versions before 2.9.11 shows that it did not propagate errors while parsing XML mixed content, causing a NULL dereference. If an untrusted XML document was parsed in recovery mode and post-validated, the flaw could be used to crash the application. The highest threat from this vulnerability is to system availability.",
          "fix_version": "2.9.4+dfsg1-7+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2021-3541",
          "severity": "Medium",
          "description": "A flaw was found in libxml2. Exponential entity expansion attack its possible bypassing all existing protection mechanisms and leading to denial of service.",
          "fix_version": "2.9.4+dfsg1-7+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2022-29824",
          "severity": "Medium",
          "description": "In libxml2 before 2.9.14, several buffer handling functions in buf.c (xmlBuf*) and tree.c (xmlBuffer*) don't check for integer overflows. This can result in out-of-bounds memory writes. Exploitation requires a victim to open a crafted, multi-gigabyte XML file. Other software using libxml2's buffer functions, for example libxslt through 1.1.35, is affected as well.",
          "fix_version": "2.9.4+dfsg1-7+deb10u4",
          "references": []
        },
        {
          "id": "CVE-2023-28484",
          "severity": "Medium",
          "description": "In libxml2 before 2.10.4, parsing of certain invalid XSD schemas can lead to a NULL pointer dereference and subsequently a segfault. This occurs in xmlSchemaFixupComplexType in xmlschemas.c.",
          "fix_version": "2.9.4+dfsg1-7+deb10u6",
          "references": []
        },
        {
          "id": "CVE-2023-29469",
          "severity": "Medium",
          "description": "An issue was discovered in libxml2 before 2.10.4. When hashing empty dict strings in a crafted XML document, xmlDictComputeFastKey in dict.c can produce non-deterministic values, leading to various logic and memory errors, such as a double free. This behavior occurs because there is an attempt to use the first byte of an empty string, and any value is possible (not solely the '\\0' value).",
          "fix_version": "2.9.4+dfsg1-7+deb10u6",
          "references": []
        },
        {
          "id": "CVE-2023-39615",
          "severity": "Medium",
          "description": "Xmlsoft Libxml2 v2.11.0 was discovered to contain an out-of-bounds read via the xmlSAX2StartElement() function at /libxml2/SAX2.c. This vulnerability allows attackers to cause a Denial of Service (DoS) via supplying a crafted XML file. NOTE: the vendor's position is that the product does not support the legacy SAX1 interface with custom callbacks; there is a crash even without crafted input.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2023-45322",
          "severity": "Medium",
          "description": "libxml2 through 2.11.5 has a use-after-free that can only occur after a certain memory allocation fails. This occurs in xmlUnlinkNode in tree.c. NOTE: the vendor's position is \"I don't think these issues are critical enough to warrant a CVE ID ... because an attacker typically can't control when memory allocations fail.\"",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2024-34459",
          "severity": "Negligible",
          "description": "An issue was discovered in xmllint (from libxml2) before 2.11.8 and 2.12.x before 2.12.7. Formatting error messages with xmllint --htmlout can result in a buffer over-read in xmlHTMLPrintFileContext in xmllint.c.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "libxpm4",
      "version": "1:3.5.12-1",
      "type": "library",
      "origin": "pkg:deb/debian/libxpm4@1%3A3.5.12-1?arch=amd64&distro=debian-10&upstream=libxpm",
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": [
        {
          "id": "CVE-2022-44617",
          "severity": "High",
          "description": "A flaw was found in libXpm. When processing a file with width of 0 and a very large height, some parser functions will be called repeatedly and can lead to an infinite loop, resulting in a Denial of Service in the application linked to the library.",
          "fix_version": "1:3.5.12-1+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2022-46285",
          "severity": "High",
          "description": "A flaw was found in libXpm. This issue occurs when parsing a file with a comment not closed; the end-of-file condition will not be detected, leading to an infinite loop and resulting in a Denial of Service in the application linked to the library.",
          "fix_version": "1:3.5.12-1+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2022-4883",
          "severity": "High",
          "description": "A flaw was found in libXpm. When processing files with .Z or .gz extensions, the library calls external programs to compress and uncompress files, relying on the PATH environment variable to find these programs, which could allow a malicious user to execute other programs by manipulating the PATH environment variable.",
          "fix_version": "1:3.5.12-1+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2023-43788",
          "severity": "Medium",
          "description": "A vulnerability was found in libXpm due to a boundary condition within the XpmCreateXpmImageFromBuffer() function. This flaw allows a local attacker to trigger an out-of-bounds read error and read the contents of memory on the system.",
          "fix_version": "1:3.5.12-1+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2023-43789",
          "severity": "Medium",
          "description": "A vulnerability was found in libXpm where a vulnerability exists due to a boundary condition, a local user can trigger an out-of-bounds read error and read contents of memory on the system.",
          "fix_version": "1:3.5.12-1+deb10u2",
          "references": []
        }
      ]
    },
    {
      "name": "libxslt1.1",
      "version": "1.1.32-2.2~deb10u1",
      "type": "library",
      "origin": "pkg:deb/debian/libxslt1.1@1.1.32-2.2~deb10u1?arch=amd64&distro=debian-10&upstream=libxslt",
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": [
        {
          "id": "CVE-2019-5815",
          "severity": "High",
          "description": "Type confusion in xsltNumberFormatGetMultipleLevel prior to libxslt 1.1.33 could allow attackers to potentially exploit heap corruption via crafted XML data.",
          "fix_version": "1.1.32-2.2~deb10u2",
          "references": []
        },
        {
          "id": "CVE-2015-9019",
          "severity": "Negligible",
          "description": "In libxslt 1.1.29 and earlier, the EXSLT math.random function was not initialized with a random seed during startup, which could cause usage of this function to produce predictable outputs.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2021-30560",
          "severity": "Negligible",
          "description": "Use after free in Blink XSLT in Google Chrome prior to 91.0.4472.164 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.",
          "fix_version": "1.1.32-2.2~deb10u2",
          "references": []
        }
      ]
    },
    {
      "name": "libzstd1",
      "version": "1.3.8+dfsg-3+deb10u2",
      "type": "library",
      "origin": "pkg:deb/debian/libzstd1@1.3.8%2Bdfsg-3%2Bdeb10u2?arch=amd64&distro=debian-10&upstream=libzstd",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "login",
      "version": "1:4.5-1.1",
      "type": "library",
      "origin": "pkg:deb/debian/login@1%3A4.5-1.1?arch=amd64&distro=debian-10&upstream=shadow",
      "maintainer": null,
      "licenses": [
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2023-4641",
          "severity": "Medium",
          "description": "A flaw was found in shadow-utils. When asking for a new password, shadow-utils asks the password twice. If the password fails on the second attempt, shadow-utils fails in cleaning the buffer used to store the first entry. This may allow an attacker with enough access to retrieve the password from the memory.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2018-7169",
          "severity": "Low",
          "description": "An issue was discovered in shadow 4.5. newgidmap (in shadow-utils) is setuid and allows an unprivileged user to be placed in a user namespace where setgroups(2) is permitted. This allows an attacker to remove themselves from a supplementary group, which may allow access to certain filesystem paths if the administrator has used \"group blacklisting\" (e.g., chmod g-rwx) to restrict access to paths. This flaw effectively reverts a security feature in the kernel (in particular, the /proc/self/setgroups knob) to prevent this sort of privilege escalation.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2023-29383",
          "severity": "Low",
          "description": "In Shadow 4.13, it is possible to inject control characters into fields provided to the SUID program chfn (change finger). Although it is not possible to exploit this directly (e.g., adding a new user fails because \\n is in the block list), it is possible to misrepresent the /etc/passwd file when viewed. Use of \\r manipulations and Unicode characters to work around blocking of the : character make it possible to give the impression that a new user has been added. In other words, an adversary may be able to convince a system administrator to take the system offline (an indirect, social-engineered denial of service) by demonstrating that \"cat /etc/passwd\" shows a rogue user account.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2007-5686",
          "severity": "Negligible",
          "description": "initscripts in rPath Linux 1 sets insecure permissions for the /var/log/btmp file, which allows local users to obtain sensitive information regarding authentication attempts.  NOTE: because sshd detects the insecure permissions and does not log certain events, this also prevents sshd from logging failed authentication attempts by remote attackers.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2013-4235",
          "severity": "Negligible",
          "description": "shadow: TOCTOU (time-of-check time-of-use) race condition when copying and removing directory trees",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2019-19882",
          "severity": "Negligible",
          "description": "shadow 4.8, in certain circumstances affecting at least Gentoo, Arch Linux, and Void Linux, allows local users to obtain root access because setuid programs are misconfigured. Specifically, this affects shadow 4.8 when compiled using --with-libpam but without explicitly passing --disable-account-tools-setuid, and without a PAM configuration suitable for use with setuid account management tools. This combination leads to account management tools (groupadd, groupdel, groupmod, useradd, userdel, usermod) that can easily be used by unprivileged local users to escalate privileges to root in multiple ways. This issue became much more relevant in approximately December 2019 when an unrelated bug was fixed (i.e., the chmod calls to suidusbins were fixed in the upstream Makefile which is now included in the release version 4.8).",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "lsb-base",
      "version": "10.2019051400",
      "type": "library",
      "origin": "pkg:deb/debian/lsb-base@10.2019051400?arch=all&distro=debian-10&upstream=lsb",
      "maintainer": null,
      "licenses": [
        null,
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "mawk",
      "version": "1.3.3-17+b3",
      "type": "library",
      "origin": "pkg:deb/debian/mawk@1.3.3-17%2Bb3?arch=amd64&distro=debian-10&upstream=mawk%401.3.3-17",
      "maintainer": null,
      "licenses": [
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "mount",
      "version": "2.33.1-0.1",
      "type": "library",
      "origin": "pkg:deb/debian/mount@2.33.1-0.1?arch=amd64&distro=debian-10&upstream=util-linux",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2021-37600",
          "severity": "Medium",
          "description": "An integer overflow in util-linux through 2.37.1 can potentially cause a buffer overflow if an attacker were able to use system resources in a way that leads to a large number in the /proc/sysvipc/sem file. NOTE: this is unexploitable in GNU C Library environments, and possibly in all realistic environments.",
          "fix_version": "2.33.1-0.1+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2024-28085",
          "severity": "Low",
          "description": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
          "fix_version": "2.33.1-0.1+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2022-0563",
          "severity": "Negligible",
          "description": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "ncurses-base",
      "version": "6.1+20181013-2+deb10u2",
      "type": "library",
      "origin": "pkg:deb/debian/ncurses-base@6.1%2B20181013-2%2Bdeb10u2?arch=all&distro=debian-10&upstream=ncurses",
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": [
        {
          "id": "CVE-2021-39537",
          "severity": "High",
          "description": "An issue was discovered in ncurses through v6.2-1. _nc_captoinfo in captoinfo.c has a heap-based buffer overflow.",
          "fix_version": "6.1+20181013-2+deb10u5",
          "references": []
        },
        {
          "id": "CVE-2022-29458",
          "severity": "High",
          "description": "ncurses 6.3 before patch 20220416 has an out-of-bounds read and segmentation violation in convert_strings in tinfo/read_entry.c in the terminfo library.",
          "fix_version": "6.1+20181013-2+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2023-29491",
          "severity": "High",
          "description": "ncurses before 6.4 20230408, when used by a setuid application, allows local users to trigger security-relevant memory corruption via malformed data in a terminfo database file that is found in $HOME/.terminfo or reached via the TERMINFO or TERM environment variable.",
          "fix_version": "6.1+20181013-2+deb10u5",
          "references": []
        },
        {
          "id": "CVE-2020-19189",
          "severity": "Medium",
          "description": "Buffer Overflow vulnerability in postprocess_terminfo function in tinfo/parse_entry.c:997 in ncurses 6.1 allows remote attackers to cause a denial of service via crafted command.",
          "fix_version": "6.1+20181013-2+deb10u4",
          "references": []
        },
        {
          "id": "CVE-2023-50495",
          "severity": "Medium",
          "description": "NCurse v6.4-20230418 was discovered to contain a segmentation fault via the component _nc_wrap_entry().",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2023-45918",
          "severity": "Unknown",
          "description": "ncurses 6.4-20230610 has a NULL pointer dereference in tgetstr in tinfo/lib_termcap.c.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "ncurses-bin",
      "version": "6.1+20181013-2+deb10u2",
      "type": "library",
      "origin": "pkg:deb/debian/ncurses-bin@6.1%2B20181013-2%2Bdeb10u2?arch=amd64&distro=debian-10&upstream=ncurses",
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": [
        {
          "id": "CVE-2021-39537",
          "severity": "High",
          "description": "An issue was discovered in ncurses through v6.2-1. _nc_captoinfo in captoinfo.c has a heap-based buffer overflow.",
          "fix_version": "6.1+20181013-2+deb10u5",
          "references": []
        },
        {
          "id": "CVE-2022-29458",
          "severity": "High",
          "description": "ncurses 6.3 before patch 20220416 has an out-of-bounds read and segmentation violation in convert_strings in tinfo/read_entry.c in the terminfo library.",
          "fix_version": "6.1+20181013-2+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2023-29491",
          "severity": "High",
          "description": "ncurses before 6.4 20230408, when used by a setuid application, allows local users to trigger security-relevant memory corruption via malformed data in a terminfo database file that is found in $HOME/.terminfo or reached via the TERMINFO or TERM environment variable.",
          "fix_version": "6.1+20181013-2+deb10u5",
          "references": []
        },
        {
          "id": "CVE-2020-19189",
          "severity": "Medium",
          "description": "Buffer Overflow vulnerability in postprocess_terminfo function in tinfo/parse_entry.c:997 in ncurses 6.1 allows remote attackers to cause a denial of service via crafted command.",
          "fix_version": "6.1+20181013-2+deb10u4",
          "references": []
        },
        {
          "id": "CVE-2023-50495",
          "severity": "Medium",
          "description": "NCurse v6.4-20230418 was discovered to contain a segmentation fault via the component _nc_wrap_entry().",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2023-45918",
          "severity": "Unknown",
          "description": "ncurses 6.4-20230610 has a NULL pointer dereference in tgetstr in tinfo/lib_termcap.c.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "nginx",
      "version": "1.19.10",
      "type": "application",
      "origin": "pkg:generic/nginx@1.19.10",
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": [
        {
          "id": "CVE-2021-23017",
          "severity": "High",
          "description": "A security issue in nginx resolver was identified, which might allow an attacker who is able to forge UDP packets from the DNS server to cause 1-byte memory overwrite, resulting in worker process crash or potential other impact.",
          "fix_version": "1.20.1",
          "references": []
        },
        {
          "id": "CVE-2021-3618",
          "severity": "High",
          "description": "ALPACA is an application layer protocol content confusion attack, exploiting TLS servers implementing different protocols but using compatible certificates, such as multi-domain or wildcard certificates. A MiTM attacker having access to victim's traffic at the TCP/IP layer can redirect traffic from one subdomain to another, resulting in a valid TLS session. This breaks the authentication of TLS and cross-protocol attacks may be possible where the behavior of one protocol service may compromise the other at the application layer.",
          "fix_version": "1.21.0",
          "references": []
        },
        {
          "id": "CVE-2022-41741",
          "severity": "High",
          "description": "NGINX Open Source before versions 1.23.2 and 1.22.1, NGINX Open Source Subscription before versions R2 P1 and R1 P1, and NGINX Plus before versions R27 P1 and R26 P1 have a vulnerability in the module ngx_http_mp4_module that might allow a local attacker to corrupt NGINX worker memory, resulting in its termination or potential other impact using a specially crafted audio or video file. The issue affects only NGINX products that are built with the ngx_http_mp4_module, when the mp4 directive is used in the configuration file. Further, the attack is possible only if an attacker can trigger processing of a specially crafted audio or video file with the module ngx_http_mp4_module.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2022-41742",
          "severity": "High",
          "description": "NGINX Open Source before versions 1.23.2 and 1.22.1, NGINX Open Source Subscription before versions R2 P1 and R1 P1, and NGINX Plus before versions R27 P1 and R26 P1 have a vulnerability in the module ngx_http_mp4_module that might allow a local attacker to cause a worker process crash, or might result in worker process memory disclosure by using a specially crafted audio or video file. The issue affects only NGINX products that are built with the module ngx_http_mp4_module, when the mp4 directive is used in the configuration file. Further, the attack is possible only if an attacker can trigger processing of a specially crafted audio or video file with the module ngx_http_mp4_module.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2023-44487",
          "severity": "High",
          "description": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
          "fix_version": "1.25.3",
          "references": []
        },
        {
          "id": "CVE-2024-7347",
          "severity": "Medium",
          "description": "NGINX Open Source and NGINX Plus have a vulnerability in the ngx_http_mp4_module, which might allow an attacker to over-read NGINX worker memory resulting in its termination, using a specially crafted mp4 file. The issue only affects NGINX if it is built with the ngx_http_mp4_module and the mp4 directive is used in the configuration file. Additionally, the attack is possible only if an attacker can trigger the processing of a specially crafted mp4 file with the ngx_http_mp4_module.\u00c2\u00a0 Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.",
          "fix_version": "1.26.2",
          "references": []
        },
        {
          "id": "CVE-2025-23419",
          "severity": "Medium",
          "description": "When multiple server blocks are configured to share the same IP address and port, an attacker can use session resumption to bypass client certificate authentication requirements on these servers. This vulnerability arises when  TLS Session Tickets https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_session_ticket_key  are used and/or the  SSL session cache https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_session_cache  are used in the default server and the default server is performing client certificate authentication.\u00c2\u00a0\u00c2\u00a0\n\nNote: Software versions which have reached End of Technical Support (EoTS) are not evaluated.",
          "fix_version": "1.26.3",
          "references": []
        },
        {
          "id": "CVE-2023-44487",
          "severity": "High",
          "description": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2020-36309",
          "severity": "Medium",
          "description": "ngx_http_lua_module (aka lua-nginx-module) before 0.10.16 in OpenResty allows unsafe characters in an argument when using the API to mutate a URI, or a request or response header.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2013-0337",
          "severity": "Low",
          "description": "The default configuration of nginx, possibly 1.3.13 and earlier, uses world-readable permissions for the (1) access.log and (2) error.log files, which allows local users to obtain sensitive information by reading the files.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2009-4487",
          "severity": "Negligible",
          "description": "nginx 0.7.64 writes data to a log file without sanitizing non-printable characters, which might allow remote attackers to modify a window's title, or possibly execute arbitrary commands or overwrite files, via an HTTP request containing an escape sequence for a terminal emulator.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "nginx",
      "version": "1.19.10-1~buster",
      "type": "library",
      "origin": "pkg:deb/debian/nginx@1.19.10-1~buster?arch=amd64&distro=debian-10",
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": [
        {
          "id": "CVE-2021-23017",
          "severity": "High",
          "description": "A security issue in nginx resolver was identified, which might allow an attacker who is able to forge UDP packets from the DNS server to cause 1-byte memory overwrite, resulting in worker process crash or potential other impact.",
          "fix_version": "1.20.1",
          "references": []
        },
        {
          "id": "CVE-2021-3618",
          "severity": "High",
          "description": "ALPACA is an application layer protocol content confusion attack, exploiting TLS servers implementing different protocols but using compatible certificates, such as multi-domain or wildcard certificates. A MiTM attacker having access to victim's traffic at the TCP/IP layer can redirect traffic from one subdomain to another, resulting in a valid TLS session. This breaks the authentication of TLS and cross-protocol attacks may be possible where the behavior of one protocol service may compromise the other at the application layer.",
          "fix_version": "1.21.0",
          "references": []
        },
        {
          "id": "CVE-2022-41741",
          "severity": "High",
          "description": "NGINX Open Source before versions 1.23.2 and 1.22.1, NGINX Open Source Subscription before versions R2 P1 and R1 P1, and NGINX Plus before versions R27 P1 and R26 P1 have a vulnerability in the module ngx_http_mp4_module that might allow a local attacker to corrupt NGINX worker memory, resulting in its termination or potential other impact using a specially crafted audio or video file. The issue affects only NGINX products that are built with the ngx_http_mp4_module, when the mp4 directive is used in the configuration file. Further, the attack is possible only if an attacker can trigger processing of a specially crafted audio or video file with the module ngx_http_mp4_module.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2022-41742",
          "severity": "High",
          "description": "NGINX Open Source before versions 1.23.2 and 1.22.1, NGINX Open Source Subscription before versions R2 P1 and R1 P1, and NGINX Plus before versions R27 P1 and R26 P1 have a vulnerability in the module ngx_http_mp4_module that might allow a local attacker to cause a worker process crash, or might result in worker process memory disclosure by using a specially crafted audio or video file. The issue affects only NGINX products that are built with the module ngx_http_mp4_module, when the mp4 directive is used in the configuration file. Further, the attack is possible only if an attacker can trigger processing of a specially crafted audio or video file with the module ngx_http_mp4_module.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2023-44487",
          "severity": "High",
          "description": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
          "fix_version": "1.25.3",
          "references": []
        },
        {
          "id": "CVE-2024-7347",
          "severity": "Medium",
          "description": "NGINX Open Source and NGINX Plus have a vulnerability in the ngx_http_mp4_module, which might allow an attacker to over-read NGINX worker memory resulting in its termination, using a specially crafted mp4 file. The issue only affects NGINX if it is built with the ngx_http_mp4_module and the mp4 directive is used in the configuration file. Additionally, the attack is possible only if an attacker can trigger the processing of a specially crafted mp4 file with the ngx_http_mp4_module.\u00c2\u00a0 Note: Software versions which have reached End of Technical Support (EoTS) are not evaluated.",
          "fix_version": "1.26.2",
          "references": []
        },
        {
          "id": "CVE-2025-23419",
          "severity": "Medium",
          "description": "When multiple server blocks are configured to share the same IP address and port, an attacker can use session resumption to bypass client certificate authentication requirements on these servers. This vulnerability arises when  TLS Session Tickets https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_session_ticket_key  are used and/or the  SSL session cache https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_session_cache  are used in the default server and the default server is performing client certificate authentication.\u00c2\u00a0\u00c2\u00a0\n\nNote: Software versions which have reached End of Technical Support (EoTS) are not evaluated.",
          "fix_version": "1.26.3",
          "references": []
        },
        {
          "id": "CVE-2023-44487",
          "severity": "High",
          "description": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2020-36309",
          "severity": "Medium",
          "description": "ngx_http_lua_module (aka lua-nginx-module) before 0.10.16 in OpenResty allows unsafe characters in an argument when using the API to mutate a URI, or a request or response header.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2013-0337",
          "severity": "Low",
          "description": "The default configuration of nginx, possibly 1.3.13 and earlier, uses world-readable permissions for the (1) access.log and (2) error.log files, which allows local users to obtain sensitive information by reading the files.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2009-4487",
          "severity": "Negligible",
          "description": "nginx 0.7.64 writes data to a log file without sanitizing non-printable characters, which might allow remote attackers to modify a window's title, or possibly execute arbitrary commands or overwrite files, via an HTTP request containing an escape sequence for a terminal emulator.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "nginx-module-geoip",
      "version": "1.19.10-1~buster",
      "type": "library",
      "origin": "pkg:deb/debian/nginx-module-geoip@1.19.10-1~buster?arch=amd64&distro=debian-10",
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "nginx-module-image-filter",
      "version": "1.19.10-1~buster",
      "type": "library",
      "origin": "pkg:deb/debian/nginx-module-image-filter@1.19.10-1~buster?arch=amd64&distro=debian-10",
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "nginx-module-njs",
      "version": "1.19.10+0.5.3-1~buster",
      "type": "library",
      "origin": "pkg:deb/debian/nginx-module-njs@1.19.10%2B0.5.3-1~buster?arch=amd64&distro=debian-10",
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "nginx-module-xslt",
      "version": "1.19.10-1~buster",
      "type": "library",
      "origin": "pkg:deb/debian/nginx-module-xslt@1.19.10-1~buster?arch=amd64&distro=debian-10",
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "openssl",
      "version": "1.1.1d",
      "type": "application",
      "origin": "pkg:generic/openssl@1.1.1d",
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": [
        {
          "id": "CVE-2021-3711",
          "severity": "Critical",
          "description": "In order to decrypt SM2 encrypted data an application is expected to call the API function EVP_PKEY_decrypt(). Typically an application will call this function twice. The first time, on entry, the \"out\" parameter can be NULL and, on exit, the \"outlen\" parameter is populated with the buffer size required to hold the decrypted plaintext. The application can then allocate a sufficiently sized buffer and call EVP_PKEY_decrypt() again, but this time passing a non-NULL value for the \"out\" parameter. A bug in the implementation of the SM2 decryption code means that the calculation of the buffer size required to hold the plaintext returned by the first call to EVP_PKEY_decrypt() can be smaller than the actual size required by the second call. This can lead to a buffer overflow when EVP_PKEY_decrypt() is called by the application a second time with a buffer that is too small. A malicious attacker who is able present SM2 content for decryption to an application could cause attacker chosen data to overflow the buffer by up to a maximum of 62 bytes altering the contents of other data held after the buffer, possibly changing application behaviour or causing the application to crash. The location of the buffer is application dependent but is typically heap allocated. Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k).",
          "fix_version": "1.1.1l",
          "references": []
        },
        {
          "id": "CVE-2022-1292",
          "severity": "Critical",
          "description": "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
          "fix_version": "1.0.2ze",
          "references": []
        },
        {
          "id": "CVE-2022-2068",
          "severity": "Critical",
          "description": "In addition to the c_rehash shell command injection identified in CVE-2022-1292, further circumstances where the c_rehash script does not properly sanitise shell metacharacters to prevent command injection were found by code review. When the CVE-2022-1292 was fixed it was not discovered that there are other places in the script where the file names of certificates being hashed were possibly passed to a command executed through the shell. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.4 (Affected 3.0.0,3.0.1,3.0.2,3.0.3). Fixed in OpenSSL 1.1.1p (Affected 1.1.1-1.1.1o). Fixed in OpenSSL 1.0.2zf (Affected 1.0.2-1.0.2ze).",
          "fix_version": "1.0.2zf",
          "references": []
        },
        {
          "id": "CVE-2024-5535",
          "severity": "Critical",
          "description": "Issue summary: Calling the OpenSSL API function SSL_select_next_proto with an\nempty supported client protocols buffer may cause a crash or memory contents to\nbe sent to the peer.\n\nImpact summary: A buffer overread can have a range of potential consequences\nsuch as unexpected application beahviour or a crash. In particular this issue\ncould result in up to 255 bytes of arbitrary private data from memory being sent\nto the peer leading to a loss of confidentiality. However, only applications\nthat directly call the SSL_select_next_proto function with a 0 length list of\nsupported client protocols are affected by this issue. This would normally never\nbe a valid scenario and is typically not under attacker control but may occur by\naccident in the case of a configuration or programming error in the calling\napplication.\n\nThe OpenSSL API function SSL_select_next_proto is typically used by TLS\napplications that support ALPN (Application Layer Protocol Negotiation) or NPN\n(Next Protocol Negotiation). NPN is older, was never standardised and\nis deprecated in favour of ALPN. We believe that ALPN is significantly more\nwidely deployed than NPN. The SSL_select_next_proto function accepts a list of\nprotocols from the server and a list of protocols from the client and returns\nthe first protocol that appears in the server list that also appears in the\nclient list. In the case of no overlap between the two lists it returns the\nfirst item in the client list. In either case it will signal whether an overlap\nbetween the two lists was found. In the case where SSL_select_next_proto is\ncalled with a zero length client list it fails to notice this condition and\nreturns the memory immediately following the client list pointer (and reports\nthat there was no overlap in the lists).\n\nThis function is typically called from a server side application callback for\nALPN or a client side application callback for NPN. In the case of ALPN the list\nof protocols supplied by the client is guaranteed by libssl to never be zero in\nlength. The list of server protocols comes from the application and should never\nnormally be expected to be of zero length. In this case if the\nSSL_select_next_proto function has been called as expected (with the list\nsupplied by the client passed in the client/client_len parameters), then the\napplication will not be vulnerable to this issue. If the application has\naccidentally been configured with a zero length server list, and has\naccidentally passed that zero length server list in the client/client_len\nparameters, and has additionally failed to correctly handle a \"no overlap\"\nresponse (which would normally result in a handshake failure in ALPN) then it\nwill be vulnerable to this problem.\n\nIn the case of NPN, the protocol permits the client to opportunistically select\na protocol when there is no overlap. OpenSSL returns the first client protocol\nin the no overlap case in support of this. The list of client protocols comes\nfrom the application and should never normally be expected to be of zero length.\nHowever if the SSL_select_next_proto function is accidentally called with a\nclient_len of 0 then an invalid memory pointer will be returned instead. If the\napplication uses this output as the opportunistic protocol then the loss of\nconfidentiality will occur.\n\nThis issue has been assessed as Low severity because applications are most\nlikely to be vulnerable if they are using NPN instead of ALPN - but NPN is not\nwidely used. It also requires an application configuration or programming error.\nFinally, this issue would not typically be under attacker control making active\nexploitation unlikely.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.\n\nDue to the low severity of this issue we are not issuing new releases of\nOpenSSL at this time. The fix will be included in the next releases when they\nbecome available.",
          "fix_version": "1.0.2zk",
          "references": []
        },
        {
          "id": "CVE-2020-1967",
          "severity": "High",
          "description": "Server or client applications that call the SSL_check_chain() function during or after a TLS 1.3 handshake may crash due to a NULL pointer dereference as a result of incorrect handling of the \"signature_algorithms_cert\" TLS extension. The crash occurs if an invalid or unrecognised signature algorithm is received from the peer. This could be exploited by a malicious peer in a Denial of Service attack. OpenSSL version 1.1.1d, 1.1.1e, and 1.1.1f are affected by this issue. This issue did not affect OpenSSL versions prior to 1.1.1d. Fixed in OpenSSL 1.1.1g (Affected 1.1.1d-1.1.1f).",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2021-23840",
          "severity": "High",
          "description": "Calls to EVP_CipherUpdate, EVP_EncryptUpdate and EVP_DecryptUpdate may overflow the output length argument in some cases where the input length is close to the maximum permissable length for an integer on the platform. In such cases the return value from the function call will be 1 (indicating success), but the output length value will be negative. This could cause applications to behave incorrectly or crash. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).",
          "fix_version": "1.0.2y",
          "references": []
        },
        {
          "id": "CVE-2021-3712",
          "severity": "High",
          "description": "ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING structure which contains a buffer holding the string data and a field holding the buffer length. This contrasts with normal C strings which are repesented as a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL's own \"d2i\" functions (and other similar parsing functions) as well as any string whose value has been set with the ASN1_STRING_set() function will additionally NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING structures which do not NUL terminate the byte array by directly setting the \"data\" and \"length\" fields in the ASN1_STRING array. This can also happen by using the ASN1_STRING_set0() function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that the ASN1_STRING byte array will be NUL terminated, even though this is not guaranteed for strings that have been directly constructed. Where an application requests an ASN.1 structure to be printed, and where that ASN.1 structure contains ASN1_STRINGs that have been directly constructed by the application without NUL terminating the \"data\" field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates (for example if a certificate has been directly constructed by the application instead of loading it via the OpenSSL parsing functions, and the certificate contains non NUL terminated ASN1_STRING structures). It can also occur in the X509_get1_email(), X509_REQ_get1_email() and X509_get1_ocsp() functions. If a malicious actor can cause an application to directly construct an ASN1_STRING and then process it through one of the affected OpenSSL functions then this issue could be hit. This might result in a crash (causing a Denial of Service attack). It could also result in the disclosure of private memory contents (such as private keys, or sensitive plaintext). Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k). Fixed in OpenSSL 1.0.2za (Affected 1.0.2-1.0.2y).",
          "fix_version": "1.0.2za",
          "references": []
        },
        {
          "id": "CVE-2022-0778",
          "severity": "High",
          "description": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).",
          "fix_version": "1.0.2zd",
          "references": []
        },
        {
          "id": "CVE-2022-4450",
          "severity": "High",
          "description": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and\ndecodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data.\nIf the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are\npopulated with pointers to buffers containing the relevant decoded data. The\ncaller is responsible for freeing those buffers. It is possible to construct a\nPEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex()\nwill return a failure code but will populate the header argument with a pointer\nto a buffer that has already been freed. If the caller also frees this buffer\nthen a double free will occur. This will most likely lead to a crash. This\ncould be exploited by an attacker who has the ability to supply malicious PEM\nfiles for parsing to achieve a denial of service attack.\n\nThe functions PEM_read_bio() and PEM_read() are simple wrappers around\nPEM_read_bio_ex() and therefore these functions are also directly affected.\n\nThese functions are also called indirectly by a number of other OpenSSL\nfunctions including PEM_X509_INFO_read_bio_ex() and\nSSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal\nuses of these functions are not vulnerable because the caller does not free the\nheader argument if PEM_read_bio_ex() returns a failure code. These locations\ninclude the PEM_read_bio_TYPE() functions as well as the decoders introduced in\nOpenSSL 3.0.\n\nThe OpenSSL asn1parse command line application is also impacted by this issue.",
          "fix_version": "1.1.1t",
          "references": []
        },
        {
          "id": "CVE-2023-0215",
          "severity": "High",
          "description": "The public API function BIO_new_NDEF is a helper function used for streaming\nASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the\nSMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by\nend user applications.\n\nThe function receives a BIO from the caller, prepends a new BIO_f_asn1 filter\nBIO onto the front of it to form a BIO chain, and then returns the new head of\nthe BIO chain to the caller. Under certain conditions, for example if a CMS\nrecipient public key is invalid, the new filter BIO is freed and the function\nreturns a NULL result indicating a failure. However, in this case, the BIO chain\nis not properly cleaned up and the BIO passed by the caller still retains\ninternal pointers to the previously freed filter BIO. If the caller then goes on\nto call BIO_pop() on the BIO then a use-after-free will occur. This will most\nlikely result in a crash.\n\n\n\nThis scenario occurs directly in the internal function B64_write_ASN1() which\nmay cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on\nthe BIO. This internal function is in turn called by the public API functions\nPEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream,\nSMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.\n\nOther public API functions that may be impacted by this include\ni2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and\ni2d_PKCS7_bio_stream.\n\nThe OpenSSL cms and smime command line applications are similarly affected.",
          "fix_version": "1.0.2zg",
          "references": []
        },
        {
          "id": "CVE-2023-0286",
          "severity": "High",
          "description": "There is a type confusion vulnerability relating to X.400 address processing\ninside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but\nthe public structure definition for GENERAL_NAME incorrectly specified the type\nof the x400Address field as ASN1_TYPE. This field is subsequently interpreted by\nthe OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an\nASN1_STRING.\n\nWhen CRL checking is enabled (i.e. the application sets the\nX509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass\narbitrary pointers to a memcmp call, enabling them to read memory contents or\nenact a denial of service. In most cases, the attack requires the attacker to\nprovide both the certificate chain and CRL, neither of which need to have a\nvalid signature. If the attacker only controls one of these inputs, the other\ninput must already contain an X.400 address as a CRL distribution point, which\nis uncommon. As such, this vulnerability is most likely to only affect\napplications which have implemented their own functionality for retrieving CRLs\nover a network.",
          "fix_version": "1.0.2zg",
          "references": []
        },
        {
          "id": "CVE-2023-0464",
          "severity": "High",
          "description": "A security vulnerability has been identified in all supported versions\n\nof OpenSSL related to the verification of X.509 certificate chains\nthat include policy constraints.  Attackers may be able to exploit this\nvulnerability by creating a malicious certificate chain that triggers\nexponential use of computational resources, leading to a denial-of-service\n(DoS) attack on affected systems.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
          "fix_version": "1.0.2zh",
          "references": []
        },
        {
          "id": "CVE-2023-4807",
          "severity": "High",
          "description": "Issue summary: The POLY1305 MAC (message authentication code) implementation\ncontains a bug that might corrupt the internal state of applications on the\nWindows 64 platform when running on newer X86_64 processors supporting the\nAVX512-IFMA instructions.\n\nImpact summary: If in an application that uses the OpenSSL library an attacker\ncan influence whether the POLY1305 MAC algorithm is used, the application\nstate might be corrupted with various application dependent consequences.\n\nThe POLY1305 MAC (message authentication code) implementation in OpenSSL does\nnot save the contents of non-volatile XMM registers on Windows 64 platform\nwhen calculating the MAC of data larger than 64 bytes. Before returning to\nthe caller all the XMM registers are set to zero rather than restoring their\nprevious content. The vulnerable code is used only on newer x86_64 processors\nsupporting the AVX512-IFMA instructions.\n\nThe consequences of this kind of internal application state corruption can\nbe various - from no consequences, if the calling application does not\ndepend on the contents of non-volatile XMM registers at all, to the worst\nconsequences, where the attacker could get complete control of the application\nprocess. However given the contents of the registers are just zeroized so\nthe attacker cannot put arbitrary values inside, the most likely consequence,\nif any, would be an incorrect result of some application dependent\ncalculations or a crash leading to a denial of service.\n\nThe POLY1305 MAC algorithm is most frequently used as part of the\nCHACHA20-POLY1305 AEAD (authenticated encryption with associated data)\nalgorithm. The most common usage of this AEAD cipher is with TLS protocol\nversions 1.2 and 1.3 and a malicious client can influence whether this AEAD\ncipher is used by the server. This implies that server applications using\nOpenSSL can be potentially impacted. However we are currently not aware of\nany concrete application that would be affected by this issue therefore we\nconsider this a Low severity security issue.\n\nAs a workaround the AVX512-IFMA instructions support can be disabled at\nruntime by setting the environment variable OPENSSL_ia32cap:\n\n   OPENSSL_ia32cap=:~0x200000\n\nThe FIPS provider is not affected by this issue.",
          "fix_version": "1.1.1w",
          "references": []
        },
        {
          "id": "CVE-2024-4741",
          "severity": "High",
          "description": "Issue summary: Calling the OpenSSL API function SSL_free_buffers may cause\nmemory to be accessed that was previously freed in some situations\n\nImpact summary: A use after free can have a range of potential consequences such\nas the corruption of valid data, crashes or execution of arbitrary code.\nHowever, only applications that directly call the SSL_free_buffers function are\naffected by this issue. Applications that do not call this function are not\nvulnerable. Our investigations indicate that this function is rarely used by\napplications.\n\nThe SSL_free_buffers function is used to free the internal OpenSSL buffer used\nwhen processing an incoming record from the network. The call is only expected\nto succeed if the buffer is not currently in use. However, two scenarios have\nbeen identified where the buffer is freed even when still in use.\n\nThe first scenario occurs where a record header has been received from the\nnetwork and processed by OpenSSL, but the full record body has not yet arrived.\nIn this case calling SSL_free_buffers will succeed even though a record has only\nbeen partially processed and the buffer is still in use.\n\nThe second scenario occurs where a full record containing application data has\nbeen received and processed by OpenSSL but the application has only read part of\nthis data. Again a call to SSL_free_buffers will succeed even though the buffer\nis still in use.\n\nWhile these scenarios could occur accidentally during normal operation a\nmalicious attacker could attempt to engineer a stituation where this occurs.\nWe are not aware of this issue being actively exploited.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
          "fix_version": "1.1.1y",
          "references": []
        },
        {
          "id": "CVE-2019-1551",
          "severity": "Medium",
          "description": "There is an overflow bug in the x64_64 Montgomery squaring procedure used in exponentiation with 512-bit moduli. No EC algorithms are affected. Analysis suggests that attacks against 2-prime RSA1024, 3-prime RSA1536, and DSA1024 as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH512 are considered just feasible. However, for an attack the target would have to re-use the DH512 private key, which is not recommended anyway. Also applications directly using the low level API BN_mod_exp may be affected if they use BN_FLG_CONSTTIME. Fixed in OpenSSL 1.1.1e (Affected 1.1.1-1.1.1d). Fixed in OpenSSL 1.0.2u (Affected 1.0.2-1.0.2t).",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2020-1971",
          "severity": "Medium",
          "description": "The X.509 GeneralName type is a generic type for representing different types of names. One of those name types is known as EDIPartyName. OpenSSL provides a function GENERAL_NAME_cmp which compares different instances of a GENERAL_NAME to see if they are equal or not. This function behaves incorrectly when both GENERAL_NAMEs contain an EDIPARTYNAME. A NULL pointer dereference and a crash may occur leading to a possible denial of service attack. OpenSSL itself uses the GENERAL_NAME_cmp function for two purposes: 1) Comparing CRL distribution point names between an available CRL and a CRL distribution point embedded in an X509 certificate 2) When verifying that a timestamp response token signer matches the timestamp authority name (exposed via the API functions TS_RESP_verify_response and TS_RESP_verify_token) If an attacker can control both items being compared then that attacker could trigger a crash. For example if the attacker can trick a client or server into checking a malicious certificate against a malicious CRL then this may occur. Note that some applications automatically download CRLs based on a URL embedded in a certificate. This checking happens prior to the signatures on the certificate and CRL being verified. OpenSSL's s_server, s_client and verify tools have support for the \"-crl_download\" option which implements automatic CRL downloading and this attack has been demonstrated to work against those tools. Note that an unrelated bug means that affected versions of OpenSSL cannot parse or construct correct encodings of EDIPARTYNAME. However it is possible to construct a malformed EDIPARTYNAME that OpenSSL's parser will accept and hence trigger this attack. All OpenSSL 1.1.1 and 1.0.2 versions are affected by this issue. Other OpenSSL releases are out of support and have not been checked. Fixed in OpenSSL 1.1.1i (Affected 1.1.1-1.1.1h). Fixed in OpenSSL 1.0.2x (Affected 1.0.2-1.0.2w).",
          "fix_version": "1.0.2x",
          "references": []
        },
        {
          "id": "CVE-2021-23841",
          "severity": "Medium",
          "description": "The OpenSSL public API function X509_issuer_and_serial_hash() attempts to create a unique hash value based on the issuer and serial number data contained within an X509 certificate. However it fails to correctly handle any errors that may occur while parsing the issuer field (which might occur if the issuer field is maliciously constructed). This may subsequently result in a NULL pointer deref and a crash leading to a potential denial of service attack. The function X509_issuer_and_serial_hash() is never directly called by OpenSSL itself so applications are only vulnerable if they use this function directly and they use it on certificates that may have been obtained from untrusted sources. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).",
          "fix_version": "1.0.2y",
          "references": []
        },
        {
          "id": "CVE-2021-3449",
          "severity": "Medium",
          "description": "An OpenSSL TLS server may crash if sent a maliciously crafted renegotiation ClientHello message from a client. If a TLSv1.2 renegotiation ClientHello omits the signature_algorithms extension (where it was present in the initial ClientHello), but includes a signature_algorithms_cert extension then a NULL pointer dereference will result, leading to a crash and a denial of service attack. A server is only vulnerable if it has TLSv1.2 and renegotiation enabled (which is the default configuration). OpenSSL TLS clients are not impacted by this issue. All OpenSSL 1.1.1 versions are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1-1.1.1j).",
          "fix_version": "1.1.1k",
          "references": []
        },
        {
          "id": "CVE-2021-4160",
          "severity": "Medium",
          "description": "There is a carry propagation bug in the MIPS32 and MIPS64 squaring procedure. Many EC algorithms are affected, including some of the TLS 1.3 default curves. Impact was not analyzed in detail, because the pre-requisites for attack are considered unlikely and include reusing private keys. Analysis suggests that attacks against RSA and DSA as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH are considered just feasible (although very difficult) because most of the work necessary to deduce information about a private key may be performed offline. The amount of resources required for such an attack would be significant. However, for an attack on TLS to be meaningful, the server would have to share the DH private key among multiple clients, which is no longer an option since CVE-2016-0701. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0.0. It was addressed in the releases of 1.1.1m and 3.0.1 on the 15th of December 2021. For the 1.0.2 release it is addressed in git commit 6fc1aaaf3 that is available to premium support customers only. It will be made available in 1.0.2zc when it is released. The issue only affects OpenSSL on MIPS platforms. Fixed in OpenSSL 3.0.1 (Affected 3.0.0). Fixed in OpenSSL 1.1.1m (Affected 1.1.1-1.1.1l). Fixed in OpenSSL 1.0.2zc-dev (Affected 1.0.2-1.0.2zb).",
          "fix_version": "1.1.1m",
          "references": []
        },
        {
          "id": "CVE-2022-2097",
          "severity": "Medium",
          "description": "AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p).",
          "fix_version": "1.1.1q",
          "references": []
        },
        {
          "id": "CVE-2022-4304",
          "severity": "Medium",
          "description": "A timing based side channel exists in the OpenSSL RSA Decryption implementation\nwhich could be sufficient to recover a plaintext across a network in a\nBleichenbacher style attack. To achieve a successful decryption an attacker\nwould have to be able to send a very large number of trial messages for\ndecryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5,\nRSA-OEAP and RSASVE.\n\nFor example, in a TLS connection, RSA is commonly used by a client to send an\nencrypted pre-master secret to the server. An attacker that had observed a\ngenuine connection between a client and a server could use this flaw to send\ntrial messages to the server and record the time taken to process them. After a\nsufficiently large number of messages the attacker could recover the pre-master\nsecret used for the original connection and thus be able to decrypt the\napplication data sent over that connection.",
          "fix_version": "1.0.2zg",
          "references": []
        },
        {
          "id": "CVE-2023-0465",
          "severity": "Medium",
          "description": "Applications that use a non-default option when verifying certificates may be\nvulnerable to an attack from a malicious CA to circumvent certain checks.\n\nInvalid certificate policies in leaf certificates are silently ignored by\nOpenSSL and other certificate policy checks are skipped for that certificate.\nA malicious CA could use this to deliberately assert invalid certificate policies\nin order to circumvent policy checking on the certificate altogether.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
          "fix_version": "1.0.2zh",
          "references": []
        },
        {
          "id": "CVE-2023-0466",
          "severity": "Medium",
          "description": "The function X509_VERIFY_PARAM_add0_policy() is documented to\nimplicitly enable the certificate policy check when doing certificate\nverification. However the implementation of the function does not\nenable the check which allows certificates with invalid or incorrect\npolicies to pass the certificate verification.\n\nAs suddenly enabling the policy check could break existing deployments it was\ndecided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy()\nfunction.\n\nInstead the applications that require OpenSSL to perform certificate\npolicy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly\nenable the policy check by calling X509_VERIFY_PARAM_set_flags() with\nthe X509_V_FLAG_POLICY_CHECK flag argument.\n\nCertificate policy checks are disabled by default in OpenSSL and are not\ncommonly used by applications.",
          "fix_version": "1.0.2zh",
          "references": []
        },
        {
          "id": "CVE-2023-2650",
          "severity": "Medium",
          "description": "Issue summary: Processing some specially crafted ASN.1 object identifiers or\ndata containing them may be very slow.\n\nImpact summary: Applications that use OBJ_obj2txt() directly, or use any of\nthe OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message\nsize limit may experience notable to very long delays when processing those\nmessages, which may lead to a Denial of Service.\n\nAn OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers -\nmost of which have no size limit.  OBJ_obj2txt() may be used to translate\nan ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL\ntype ASN1_OBJECT) to its canonical numeric text form, which are the\nsub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by\nperiods.\n\nWhen one of the sub-identifiers in the OBJECT IDENTIFIER is very large\n(these are sizes that are seen as absurdly large, taking up tens or hundreds\nof KiBs), the translation to a decimal number in text may take a very long\ntime.  The time complexity is O(n^2) with 'n' being the size of the\nsub-identifiers in bytes (*).\n\nWith OpenSSL 3.0, support to fetch cryptographic algorithms using names /\nidentifiers in string form was introduced.  This includes using OBJECT\nIDENTIFIERs in canonical numeric text form as identifiers for fetching\nalgorithms.\n\nSuch OBJECT IDENTIFIERs may be received through the ASN.1 structure\nAlgorithmIdentifier, which is commonly used in multiple protocols to specify\nwhat cryptographic algorithm should be used to sign or verify, encrypt or\ndecrypt, or digest passed data.\n\nApplications that call OBJ_obj2txt() directly with untrusted data are\naffected, with any version of OpenSSL.  If the use is for the mere purpose\nof display, the severity is considered low.\n\nIn OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME,\nCMS, CMP/CRMF or TS.  It also impacts anything that processes X.509\ncertificates, including simple things like verifying its signature.\n\nThe impact on TLS is relatively low, because all versions of OpenSSL have a\n100KiB limit on the peer's certificate chain.  Additionally, this only\nimpacts clients, or servers that have explicitly enabled client\nauthentication.\n\nIn OpenSSL 1.1.1 and 1.0.2, this only affects displaying diverse objects,\nsuch as X.509 certificates.  This is assumed to not happen in such a way\nthat it would cause a Denial of Service, so these versions are considered\nnot affected by this issue in such a way that it would be cause for concern,\nand the severity is therefore considered low.",
          "fix_version": "1.0.2zh",
          "references": []
        },
        {
          "id": "CVE-2023-3446",
          "severity": "Medium",
          "description": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. One of those\nchecks confirms that the modulus ('p' parameter) is not too large. Trying to use\na very large modulus is slow and OpenSSL will not normally use a modulus which\nis over 10,000 bits in length.\n\nHowever the DH_check() function checks numerous aspects of the key or parameters\nthat have been supplied. Some of those checks use the supplied modulus value\neven if it has already been found to be too large.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulernable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the '-check' option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
          "fix_version": "1.0.2zi",
          "references": []
        },
        {
          "id": "CVE-2023-3817",
          "severity": "Medium",
          "description": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. After fixing\nCVE-2023-3446 it was discovered that a large q parameter value can also trigger\nan overly long computation during some of these checks. A correct q value,\nif present, cannot be larger than the modulus p parameter, thus it is\nunnecessary to perform these checks if q is larger than p.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulnerable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the \"-check\" option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
          "fix_version": "3.0.10",
          "references": []
        },
        {
          "id": "CVE-2023-5678",
          "severity": "Medium",
          "description": "Issue summary: Generating excessively long X9.42 DH keys or checking\nexcessively long X9.42 DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_generate_key() to\ngenerate an X9.42 DH key may experience long delays.  Likewise, applications\nthat use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check()\nto check an X9.42 DH key or X9.42 DH parameters may experience long delays.\nWhere the key or parameters that are being checked have been obtained from\nan untrusted source this may lead to a Denial of Service.\n\nWhile DH_check() performs all the necessary checks (as of CVE-2023-3817),\nDH_check_pub_key() doesn't make any of these checks, and is therefore\nvulnerable for excessively large P and Q parameters.\n\nLikewise, while DH_generate_key() performs a check for an excessively large\nP, it doesn't check for an excessively large Q.\n\nAn application that calls DH_generate_key() or DH_check_pub_key() and\nsupplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nDH_generate_key() and DH_check_pub_key() are also called by a number of\nother OpenSSL functions.  An application calling any of those other\nfunctions may similarly be affected.  The other functions affected by this\nare DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().\n\nAlso vulnerable are the OpenSSL pkey command line application when using the\n\"-pubcheck\" option, as well as the OpenSSL genpkey command line application.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
          "fix_version": "1.0.2zj",
          "references": []
        },
        {
          "id": "CVE-2024-0727",
          "severity": "Medium",
          "description": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue.",
          "fix_version": "1.0.2zj",
          "references": []
        },
        {
          "id": "CVE-2024-13176",
          "severity": "Medium",
          "description": "Issue summary: A timing side-channel which could potentially allow recovering\nthe private key exists in the ECDSA signature computation.\n\nImpact summary: A timing side-channel in ECDSA signature computations\ncould allow recovering the private key by an attacker. However, measuring\nthe timing would require either local access to the signing application or\na very fast network connection with low latency.\n\nThere is a timing signal of around 300 nanoseconds when the top word of\nthe inverted ECDSA nonce value is zero. This can happen with significant\nprobability only for some of the supported elliptic curves. In particular\nthe NIST P-521 curve is affected. To be able to measure this leak, the attacker\nprocess must either be located in the same physical computer or must\nhave a very fast network connection with low latency. For that reason\nthe severity of this vulnerability is Low.\n\nThe FIPS modules in 3.4, 3.3, 3.2, 3.1 and 3.0 are affected by this issue.",
          "fix_version": "1.0.2zl",
          "references": []
        },
        {
          "id": "CVE-2024-2511",
          "severity": "Medium",
          "description": "Issue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue.",
          "fix_version": "1.1.1y",
          "references": []
        },
        {
          "id": "CVE-2024-9143",
          "severity": "Medium",
          "description": "Issue summary: Use of the low-level GF(2^m) elliptic curve APIs with untrusted\nexplicit values for the field polynomial can lead to out-of-bounds memory reads\nor writes.\n\nImpact summary: Out of bound memory writes can lead to an application crash or\neven a possibility of a remote code execution, however, in all the protocols\ninvolving Elliptic Curve Cryptography that we're aware of, either only \"named\ncurves\" are supported, or, if explicit curve parameters are supported, they\nspecify an X9.62 encoding of binary (GF(2^m)) curves that can't represent\nproblematic input values. Thus the likelihood of existence of a vulnerable\napplication is low.\n\nIn particular, the X9.62 encoding is used for ECC keys in X.509 certificates,\nso problematic inputs cannot occur in the context of processing X.509\ncertificates.  Any problematic use-cases would have to be using an \"exotic\"\ncurve encoding.\n\nThe affected APIs include: EC_GROUP_new_curve_GF2m(), EC_GROUP_new_from_params(),\nand various supporting BN_GF2m_*() functions.\n\nApplications working with \"exotic\" explicit binary (GF(2^m)) curve parameters,\nthat make it possible to represent invalid field polynomials with a zero\nconstant term, via the above or similar APIs, may terminate abruptly as a\nresult of reading or writing outside of array bounds.  Remote code execution\ncannot easily be ruled out.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
          "fix_version": "1.0.2zl",
          "references": []
        },
        {
          "id": "CVE-2021-3711",
          "severity": "Critical",
          "description": "In order to decrypt SM2 encrypted data an application is expected to call the API function EVP_PKEY_decrypt(). Typically an application will call this function twice. The first time, on entry, the \"out\" parameter can be NULL and, on exit, the \"outlen\" parameter is populated with the buffer size required to hold the decrypted plaintext. The application can then allocate a sufficiently sized buffer and call EVP_PKEY_decrypt() again, but this time passing a non-NULL value for the \"out\" parameter. A bug in the implementation of the SM2 decryption code means that the calculation of the buffer size required to hold the plaintext returned by the first call to EVP_PKEY_decrypt() can be smaller than the actual size required by the second call. This can lead to a buffer overflow when EVP_PKEY_decrypt() is called by the application a second time with a buffer that is too small. A malicious attacker who is able present SM2 content for decryption to an application could cause attacker chosen data to overflow the buffer by up to a maximum of 62 bytes altering the contents of other data held after the buffer, possibly changing application behaviour or causing the application to crash. The location of the buffer is application dependent but is typically heap allocated. Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k).",
          "fix_version": "1.1.1d-0+deb10u7",
          "references": []
        },
        {
          "id": "CVE-2022-1292",
          "severity": "Critical",
          "description": "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
          "fix_version": "1.1.1n-0+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2022-2068",
          "severity": "Critical",
          "description": "In addition to the c_rehash shell command injection identified in CVE-2022-1292, further circumstances where the c_rehash script does not properly sanitise shell metacharacters to prevent command injection were found by code review. When the CVE-2022-1292 was fixed it was not discovered that there are other places in the script where the file names of certificates being hashed were possibly passed to a command executed through the shell. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.4 (Affected 3.0.0,3.0.1,3.0.2,3.0.3). Fixed in OpenSSL 1.1.1p (Affected 1.1.1-1.1.1o). Fixed in OpenSSL 1.0.2zf (Affected 1.0.2-1.0.2ze).",
          "fix_version": "1.1.1n-0+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2021-3712",
          "severity": "High",
          "description": "ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING structure which contains a buffer holding the string data and a field holding the buffer length. This contrasts with normal C strings which are repesented as a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL's own \"d2i\" functions (and other similar parsing functions) as well as any string whose value has been set with the ASN1_STRING_set() function will additionally NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING structures which do not NUL terminate the byte array by directly setting the \"data\" and \"length\" fields in the ASN1_STRING array. This can also happen by using the ASN1_STRING_set0() function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that the ASN1_STRING byte array will be NUL terminated, even though this is not guaranteed for strings that have been directly constructed. Where an application requests an ASN.1 structure to be printed, and where that ASN.1 structure contains ASN1_STRINGs that have been directly constructed by the application without NUL terminating the \"data\" field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates (for example if a certificate has been directly constructed by the application instead of loading it via the OpenSSL parsing functions, and the certificate contains non NUL terminated ASN1_STRING structures). It can also occur in the X509_get1_email(), X509_REQ_get1_email() and X509_get1_ocsp() functions. If a malicious actor can cause an application to directly construct an ASN1_STRING and then process it through one of the affected OpenSSL functions then this issue could be hit. This might result in a crash (causing a Denial of Service attack). It could also result in the disclosure of private memory contents (such as private keys, or sensitive plaintext). Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k). Fixed in OpenSSL 1.0.2za (Affected 1.0.2-1.0.2y).",
          "fix_version": "1.1.1d-0+deb10u7",
          "references": []
        },
        {
          "id": "CVE-2022-0778",
          "severity": "High",
          "description": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).",
          "fix_version": "1.1.1d-0+deb10u8",
          "references": []
        },
        {
          "id": "CVE-2022-4450",
          "severity": "High",
          "description": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and decodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data. If the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are populated with pointers to buffers containing the relevant decoded data. The caller is responsible for freeing those buffers. It is possible to construct a PEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex() will return a failure code but will populate the header argument with a pointer to a buffer that has already been freed. If the caller also frees this buffer then a double free will occur. This will most likely lead to a crash. This could be exploited by an attacker who has the ability to supply malicious PEM files for parsing to achieve a denial of service attack.  The functions PEM_read_bio() and PEM_read() are simple wrappers around PEM_read_bio_ex() and therefore these functions are also directly affected.  These functions are also called indirectly by a number of other OpenSSL functions including PEM_X509_INFO_read_bio_ex() and SSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal uses of these functions are not vulnerable because the caller does not free the header argument if PEM_read_bio_ex() returns a failure code. These locations include the PEM_read_bio_TYPE() functions as well as the decoders introduced in OpenSSL 3.0.  The OpenSSL asn1parse command line application is also impacted by this issue.",
          "fix_version": "1.1.1n-0+deb10u4",
          "references": []
        },
        {
          "id": "CVE-2023-0215",
          "severity": "High",
          "description": "The public API function BIO_new_NDEF is a helper function used for streaming ASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the SMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by end user applications.  The function receives a BIO from the caller, prepends a new BIO_f_asn1 filter BIO onto the front of it to form a BIO chain, and then returns the new head of the BIO chain to the caller. Under certain conditions, for example if a CMS recipient public key is invalid, the new filter BIO is freed and the function returns a NULL result indicating a failure. However, in this case, the BIO chain is not properly cleaned up and the BIO passed by the caller still retains internal pointers to the previously freed filter BIO. If the caller then goes on to call BIO_pop() on the BIO then a use-after-free will occur. This will most likely result in a crash.    This scenario occurs directly in the internal function B64_write_ASN1() which may cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on the BIO. This internal function is in turn called by the public API functions PEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream, SMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.  Other public API functions that may be impacted by this include i2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and i2d_PKCS7_bio_stream.  The OpenSSL cms and smime command line applications are similarly affected.",
          "fix_version": "1.1.1n-0+deb10u4",
          "references": []
        },
        {
          "id": "CVE-2023-0286",
          "severity": "High",
          "description": "There is a type confusion vulnerability relating to X.400 address processing inside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but the public structure definition for GENERAL_NAME incorrectly specified the type of the x400Address field as ASN1_TYPE. This field is subsequently interpreted by the OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an ASN1_STRING.  When CRL checking is enabled (i.e. the application sets the X509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass arbitrary pointers to a memcmp call, enabling them to read memory contents or enact a denial of service. In most cases, the attack requires the attacker to provide both the certificate chain and CRL, neither of which need to have a valid signature. If the attacker only controls one of these inputs, the other input must already contain an X.400 address as a CRL distribution point, which is uncommon. As such, this vulnerability is most likely to only affect applications which have implemented their own functionality for retrieving CRLs over a network.",
          "fix_version": "1.1.1n-0+deb10u4",
          "references": []
        },
        {
          "id": "CVE-2023-0464",
          "severity": "High",
          "description": "A security vulnerability has been identified in all supported versions  of OpenSSL related to the verification of X.509 certificate chains that include policy constraints.  Attackers may be able to exploit this vulnerability by creating a malicious certificate chain that triggers exponential use of computational resources, leading to a denial-of-service (DoS) attack on affected systems.  Policy processing is disabled by default but can be enabled by passing the `-policy' argument to the command line utilities or by calling the `X509_VERIFY_PARAM_set1_policies()' function.",
          "fix_version": "1.1.1n-0+deb10u5",
          "references": []
        },
        {
          "id": "CVE-2024-4741",
          "severity": "High",
          "description": null,
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2021-4160",
          "severity": "Medium",
          "description": "There is a carry propagation bug in the MIPS32 and MIPS64 squaring procedure. Many EC algorithms are affected, including some of the TLS 1.3 default curves. Impact was not analyzed in detail, because the pre-requisites for attack are considered unlikely and include reusing private keys. Analysis suggests that attacks against RSA and DSA as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH are considered just feasible (although very difficult) because most of the work necessary to deduce information about a private key may be performed offline. The amount of resources required for such an attack would be significant. However, for an attack on TLS to be meaningful, the server would have to share the DH private key among multiple clients, which is no longer an option since CVE-2016-0701. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0.0. It was addressed in the releases of 1.1.1m and 3.0.1 on the 15th of December 2021. For the 1.0.2 release it is addressed in git commit 6fc1aaaf3 that is available to premium support customers only. It will be made available in 1.0.2zc when it is released. The issue only affects OpenSSL on MIPS platforms. Fixed in OpenSSL 3.0.1 (Affected 3.0.0). Fixed in OpenSSL 1.1.1m (Affected 1.1.1-1.1.1l). Fixed in OpenSSL 1.0.2zc-dev (Affected 1.0.2-1.0.2zb).",
          "fix_version": "1.1.1d-0+deb10u8",
          "references": []
        },
        {
          "id": "CVE-2022-2097",
          "severity": "Medium",
          "description": "AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p).",
          "fix_version": "1.1.1n-0+deb10u4",
          "references": []
        },
        {
          "id": "CVE-2022-4304",
          "severity": "Medium",
          "description": "A timing based side channel exists in the OpenSSL RSA Decryption implementation which could be sufficient to recover a plaintext across a network in a Bleichenbacher style attack. To achieve a successful decryption an attacker would have to be able to send a very large number of trial messages for decryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5, RSA-OEAP and RSASVE.  For example, in a TLS connection, RSA is commonly used by a client to send an encrypted pre-master secret to the server. An attacker that had observed a genuine connection between a client and a server could use this flaw to send trial messages to the server and record the time taken to process them. After a sufficiently large number of messages the attacker could recover the pre-master secret used for the original connection and thus be able to decrypt the application data sent over that connection.",
          "fix_version": "1.1.1n-0+deb10u4",
          "references": []
        },
        {
          "id": "CVE-2023-0465",
          "severity": "Medium",
          "description": "Applications that use a non-default option when verifying certificates may be vulnerable to an attack from a malicious CA to circumvent certain checks.  Invalid certificate policies in leaf certificates are silently ignored by OpenSSL and other certificate policy checks are skipped for that certificate. A malicious CA could use this to deliberately assert invalid certificate policies in order to circumvent policy checking on the certificate altogether.  Policy processing is disabled by default but can be enabled by passing the `-policy' argument to the command line utilities or by calling the `X509_VERIFY_PARAM_set1_policies()' function.",
          "fix_version": "1.1.1n-0+deb10u5",
          "references": []
        },
        {
          "id": "CVE-2023-0466",
          "severity": "Medium",
          "description": "The function X509_VERIFY_PARAM_add0_policy() is documented to implicitly enable the certificate policy check when doing certificate verification. However the implementation of the function does not enable the check which allows certificates with invalid or incorrect policies to pass the certificate verification.  As suddenly enabling the policy check could break existing deployments it was decided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy() function.  Instead the applications that require OpenSSL to perform certificate policy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly enable the policy check by calling X509_VERIFY_PARAM_set_flags() with the X509_V_FLAG_POLICY_CHECK flag argument.  Certificate policy checks are disabled by default in OpenSSL and are not commonly used by applications.",
          "fix_version": "1.1.1n-0+deb10u5",
          "references": []
        },
        {
          "id": "CVE-2023-2650",
          "severity": "Medium",
          "description": "Issue summary: Processing some specially crafted ASN.1 object identifiers or data containing them may be very slow.  Impact summary: Applications that use OBJ_obj2txt() directly, or use any of the OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message size limit may experience notable to very long delays when processing those messages, which may lead to a Denial of Service.  An OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers - most of which have no size limit.  OBJ_obj2txt() may be used to translate an ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL type ASN1_OBJECT) to its canonical numeric text form, which are the sub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by periods.  When one of the sub-identifiers in the OBJECT IDENTIFIER is very large (these are sizes that are seen as absurdly large, taking up tens or hundreds of KiBs), the translation to a decimal number in text may take a very long time.  The time complexity is O(n^2) with 'n' being the size of the sub-identifiers in bytes (*).  With OpenSSL 3.0, support to fetch cryptographic algorithms using names / identifiers in string form was introduced.  This includes using OBJECT IDENTIFIERs in canonical numeric text form as identifiers for fetching algorithms.  Such OBJECT IDENTIFIERs may be received through the ASN.1 structure AlgorithmIdentifier, which is commonly used in multiple protocols to specify what cryptographic algorithm should be used to sign or verify, encrypt or decrypt, or digest passed data.  Applications that call OBJ_obj2txt() directly with untrusted data are affected, with any version of OpenSSL.  If the use is for the mere purpose of display, the severity is considered low.  In OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS.  It also impacts anything that processes X.509 certificates, including simple things like verifying its signature.  The impact on TLS is relatively low, because all versions of OpenSSL have a 100KiB limit on the peer's certificate chain.  Additionally, this only impacts clients, or servers that have explicitly enabled client authentication.  In OpenSSL 1.1.1 and 1.0.2, this only affects displaying diverse objects, such as X.509 certificates.  This is assumed to not happen in such a way that it would cause a Denial of Service, so these versions are considered not affected by this issue in such a way that it would be cause for concern, and the severity is therefore considered low.",
          "fix_version": "1.1.1n-0+deb10u5",
          "references": []
        },
        {
          "id": "CVE-2023-3446",
          "severity": "Medium",
          "description": "Issue summary: Checking excessively long DH keys or parameters may be very slow.  Impact summary: Applications that use the functions DH_check(), DH_check_ex() or EVP_PKEY_param_check() to check a DH key or DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service.  The function DH_check() performs various checks on DH parameters. One of those checks confirms that the modulus ('p' parameter) is not too large. Trying to use a very large modulus is slow and OpenSSL will not normally use a modulus which is over 10,000 bits in length.  However the DH_check() function checks numerous aspects of the key or parameters that have been supplied. Some of those checks use the supplied modulus value even if it has already been found to be too large.  An application that calls DH_check() and supplies a key or parameters obtained from an untrusted source could be vulernable to a Denial of Service attack.  The function DH_check() is itself called by a number of other OpenSSL functions. An application calling any of those other functions may similarly be affected. The other functions affected by this are DH_check_ex() and EVP_PKEY_param_check().  Also vulnerable are the OpenSSL dhparam and pkeyparam command line applications when using the '-check' option.  The OpenSSL SSL/TLS implementation is not affected by this issue. The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
          "fix_version": "1.1.1n-0+deb10u6",
          "references": []
        },
        {
          "id": "CVE-2023-3817",
          "severity": "Medium",
          "description": "Issue summary: Checking excessively long DH keys or parameters may be very slow.  Impact summary: Applications that use the functions DH_check(), DH_check_ex() or EVP_PKEY_param_check() to check a DH key or DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service.  The function DH_check() performs various checks on DH parameters. After fixing CVE-2023-3446 it was discovered that a large q parameter value can also trigger an overly long computation during some of these checks. A correct q value, if present, cannot be larger than the modulus p parameter, thus it is unnecessary to perform these checks if q is larger than p.  An application that calls DH_check() and supplies a key or parameters obtained from an untrusted source could be vulnerable to a Denial of Service attack.  The function DH_check() is itself called by a number of other OpenSSL functions. An application calling any of those other functions may similarly be affected. The other functions affected by this are DH_check_ex() and EVP_PKEY_param_check().  Also vulnerable are the OpenSSL dhparam and pkeyparam command line applications when using the \"-check\" option.  The OpenSSL SSL/TLS implementation is not affected by this issue.  The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
          "fix_version": "1.1.1n-0+deb10u6",
          "references": []
        },
        {
          "id": "CVE-2023-5678",
          "severity": "Medium",
          "description": "Issue summary: Generating excessively long X9.42 DH keys or checking excessively long X9.42 DH keys or parameters may be very slow.  Impact summary: Applications that use the functions DH_generate_key() to generate an X9.42 DH key may experience long delays.  Likewise, applications that use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check() to check an X9.42 DH key or X9.42 DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service.  While DH_check() performs all the necessary checks (as of CVE-2023-3817), DH_check_pub_key() doesn't make any of these checks, and is therefore vulnerable for excessively large P and Q parameters.  Likewise, while DH_generate_key() performs a check for an excessively large P, it doesn't check for an excessively large Q.  An application that calls DH_generate_key() or DH_check_pub_key() and supplies a key or parameters obtained from an untrusted source could be vulnerable to a Denial of Service attack.  DH_generate_key() and DH_check_pub_key() are also called by a number of other OpenSSL functions.  An application calling any of those other functions may similarly be affected.  The other functions affected by this are DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().  Also vulnerable are the OpenSSL pkey command line application when using the \"-pubcheck\" option, as well as the OpenSSL genpkey command line application.  The OpenSSL SSL/TLS implementation is not affected by this issue.  The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2024-0727",
          "severity": "Medium",
          "description": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL to crash leading to a potential Denial of Service attack  Impact summary: Applications loading files in the PKCS12 format from untrusted sources might terminate abruptly.  A file in PKCS12 format can contain certificates and keys and may come from an untrusted source. The PKCS12 specification allows certain fields to be NULL, but OpenSSL does not correctly check for this case. This can lead to a NULL pointer dereference that results in OpenSSL crashing. If an application processes PKCS12 files from an untrusted source using the OpenSSL APIs then that application will be vulnerable to this issue.  OpenSSL APIs that are vulnerable to this are: PKCS12_parse(), PKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes() and PKCS12_newpass().  We have also fixed a similar issue in SMIME_write_PKCS7(). However since this function is related to writing data we do not consider it security significant.  The FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2024-2511",
          "severity": "Medium",
          "description": "Issue summary: Some non-default TLS server configurations can cause unbounded memory growth when processing TLSv1.3 sessions  Impact summary: An attacker may exploit certain server configurations to trigger unbounded memory growth that would lead to a Denial of Service  This problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is being used (but not if early_data support is also configured and the default anti-replay protection is in use). In this case, under certain conditions, the session cache can get into an incorrect state and it will fail to flush properly as it fills. The session cache will continue to grow in an unbounded manner. A malicious client could deliberately create the scenario for this failure to force a Denial of Service. It may also happen by accident in normal operation.  This issue only affects TLS servers supporting TLSv1.3. It does not affect TLS clients.  The FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL 1.0.2 is also not affected by this issue.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "openssl",
      "version": "1.1.1d-0+deb10u6",
      "type": "library",
      "origin": "pkg:deb/debian/openssl@1.1.1d-0%2Bdeb10u6?arch=amd64&distro=debian-10",
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": [
        {
          "id": "CVE-2021-3711",
          "severity": "Critical",
          "description": "In order to decrypt SM2 encrypted data an application is expected to call the API function EVP_PKEY_decrypt(). Typically an application will call this function twice. The first time, on entry, the \"out\" parameter can be NULL and, on exit, the \"outlen\" parameter is populated with the buffer size required to hold the decrypted plaintext. The application can then allocate a sufficiently sized buffer and call EVP_PKEY_decrypt() again, but this time passing a non-NULL value for the \"out\" parameter. A bug in the implementation of the SM2 decryption code means that the calculation of the buffer size required to hold the plaintext returned by the first call to EVP_PKEY_decrypt() can be smaller than the actual size required by the second call. This can lead to a buffer overflow when EVP_PKEY_decrypt() is called by the application a second time with a buffer that is too small. A malicious attacker who is able present SM2 content for decryption to an application could cause attacker chosen data to overflow the buffer by up to a maximum of 62 bytes altering the contents of other data held after the buffer, possibly changing application behaviour or causing the application to crash. The location of the buffer is application dependent but is typically heap allocated. Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k).",
          "fix_version": "1.1.1l",
          "references": []
        },
        {
          "id": "CVE-2022-1292",
          "severity": "Critical",
          "description": "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
          "fix_version": "1.0.2ze",
          "references": []
        },
        {
          "id": "CVE-2022-2068",
          "severity": "Critical",
          "description": "In addition to the c_rehash shell command injection identified in CVE-2022-1292, further circumstances where the c_rehash script does not properly sanitise shell metacharacters to prevent command injection were found by code review. When the CVE-2022-1292 was fixed it was not discovered that there are other places in the script where the file names of certificates being hashed were possibly passed to a command executed through the shell. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.4 (Affected 3.0.0,3.0.1,3.0.2,3.0.3). Fixed in OpenSSL 1.1.1p (Affected 1.1.1-1.1.1o). Fixed in OpenSSL 1.0.2zf (Affected 1.0.2-1.0.2ze).",
          "fix_version": "1.0.2zf",
          "references": []
        },
        {
          "id": "CVE-2024-5535",
          "severity": "Critical",
          "description": "Issue summary: Calling the OpenSSL API function SSL_select_next_proto with an\nempty supported client protocols buffer may cause a crash or memory contents to\nbe sent to the peer.\n\nImpact summary: A buffer overread can have a range of potential consequences\nsuch as unexpected application beahviour or a crash. In particular this issue\ncould result in up to 255 bytes of arbitrary private data from memory being sent\nto the peer leading to a loss of confidentiality. However, only applications\nthat directly call the SSL_select_next_proto function with a 0 length list of\nsupported client protocols are affected by this issue. This would normally never\nbe a valid scenario and is typically not under attacker control but may occur by\naccident in the case of a configuration or programming error in the calling\napplication.\n\nThe OpenSSL API function SSL_select_next_proto is typically used by TLS\napplications that support ALPN (Application Layer Protocol Negotiation) or NPN\n(Next Protocol Negotiation). NPN is older, was never standardised and\nis deprecated in favour of ALPN. We believe that ALPN is significantly more\nwidely deployed than NPN. The SSL_select_next_proto function accepts a list of\nprotocols from the server and a list of protocols from the client and returns\nthe first protocol that appears in the server list that also appears in the\nclient list. In the case of no overlap between the two lists it returns the\nfirst item in the client list. In either case it will signal whether an overlap\nbetween the two lists was found. In the case where SSL_select_next_proto is\ncalled with a zero length client list it fails to notice this condition and\nreturns the memory immediately following the client list pointer (and reports\nthat there was no overlap in the lists).\n\nThis function is typically called from a server side application callback for\nALPN or a client side application callback for NPN. In the case of ALPN the list\nof protocols supplied by the client is guaranteed by libssl to never be zero in\nlength. The list of server protocols comes from the application and should never\nnormally be expected to be of zero length. In this case if the\nSSL_select_next_proto function has been called as expected (with the list\nsupplied by the client passed in the client/client_len parameters), then the\napplication will not be vulnerable to this issue. If the application has\naccidentally been configured with a zero length server list, and has\naccidentally passed that zero length server list in the client/client_len\nparameters, and has additionally failed to correctly handle a \"no overlap\"\nresponse (which would normally result in a handshake failure in ALPN) then it\nwill be vulnerable to this problem.\n\nIn the case of NPN, the protocol permits the client to opportunistically select\na protocol when there is no overlap. OpenSSL returns the first client protocol\nin the no overlap case in support of this. The list of client protocols comes\nfrom the application and should never normally be expected to be of zero length.\nHowever if the SSL_select_next_proto function is accidentally called with a\nclient_len of 0 then an invalid memory pointer will be returned instead. If the\napplication uses this output as the opportunistic protocol then the loss of\nconfidentiality will occur.\n\nThis issue has been assessed as Low severity because applications are most\nlikely to be vulnerable if they are using NPN instead of ALPN - but NPN is not\nwidely used. It also requires an application configuration or programming error.\nFinally, this issue would not typically be under attacker control making active\nexploitation unlikely.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.\n\nDue to the low severity of this issue we are not issuing new releases of\nOpenSSL at this time. The fix will be included in the next releases when they\nbecome available.",
          "fix_version": "1.0.2zk",
          "references": []
        },
        {
          "id": "CVE-2020-1967",
          "severity": "High",
          "description": "Server or client applications that call the SSL_check_chain() function during or after a TLS 1.3 handshake may crash due to a NULL pointer dereference as a result of incorrect handling of the \"signature_algorithms_cert\" TLS extension. The crash occurs if an invalid or unrecognised signature algorithm is received from the peer. This could be exploited by a malicious peer in a Denial of Service attack. OpenSSL version 1.1.1d, 1.1.1e, and 1.1.1f are affected by this issue. This issue did not affect OpenSSL versions prior to 1.1.1d. Fixed in OpenSSL 1.1.1g (Affected 1.1.1d-1.1.1f).",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2021-23840",
          "severity": "High",
          "description": "Calls to EVP_CipherUpdate, EVP_EncryptUpdate and EVP_DecryptUpdate may overflow the output length argument in some cases where the input length is close to the maximum permissable length for an integer on the platform. In such cases the return value from the function call will be 1 (indicating success), but the output length value will be negative. This could cause applications to behave incorrectly or crash. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).",
          "fix_version": "1.0.2y",
          "references": []
        },
        {
          "id": "CVE-2021-3712",
          "severity": "High",
          "description": "ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING structure which contains a buffer holding the string data and a field holding the buffer length. This contrasts with normal C strings which are repesented as a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL's own \"d2i\" functions (and other similar parsing functions) as well as any string whose value has been set with the ASN1_STRING_set() function will additionally NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING structures which do not NUL terminate the byte array by directly setting the \"data\" and \"length\" fields in the ASN1_STRING array. This can also happen by using the ASN1_STRING_set0() function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that the ASN1_STRING byte array will be NUL terminated, even though this is not guaranteed for strings that have been directly constructed. Where an application requests an ASN.1 structure to be printed, and where that ASN.1 structure contains ASN1_STRINGs that have been directly constructed by the application without NUL terminating the \"data\" field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates (for example if a certificate has been directly constructed by the application instead of loading it via the OpenSSL parsing functions, and the certificate contains non NUL terminated ASN1_STRING structures). It can also occur in the X509_get1_email(), X509_REQ_get1_email() and X509_get1_ocsp() functions. If a malicious actor can cause an application to directly construct an ASN1_STRING and then process it through one of the affected OpenSSL functions then this issue could be hit. This might result in a crash (causing a Denial of Service attack). It could also result in the disclosure of private memory contents (such as private keys, or sensitive plaintext). Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k). Fixed in OpenSSL 1.0.2za (Affected 1.0.2-1.0.2y).",
          "fix_version": "1.0.2za",
          "references": []
        },
        {
          "id": "CVE-2022-0778",
          "severity": "High",
          "description": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).",
          "fix_version": "1.0.2zd",
          "references": []
        },
        {
          "id": "CVE-2022-4450",
          "severity": "High",
          "description": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and\ndecodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data.\nIf the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are\npopulated with pointers to buffers containing the relevant decoded data. The\ncaller is responsible for freeing those buffers. It is possible to construct a\nPEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex()\nwill return a failure code but will populate the header argument with a pointer\nto a buffer that has already been freed. If the caller also frees this buffer\nthen a double free will occur. This will most likely lead to a crash. This\ncould be exploited by an attacker who has the ability to supply malicious PEM\nfiles for parsing to achieve a denial of service attack.\n\nThe functions PEM_read_bio() and PEM_read() are simple wrappers around\nPEM_read_bio_ex() and therefore these functions are also directly affected.\n\nThese functions are also called indirectly by a number of other OpenSSL\nfunctions including PEM_X509_INFO_read_bio_ex() and\nSSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal\nuses of these functions are not vulnerable because the caller does not free the\nheader argument if PEM_read_bio_ex() returns a failure code. These locations\ninclude the PEM_read_bio_TYPE() functions as well as the decoders introduced in\nOpenSSL 3.0.\n\nThe OpenSSL asn1parse command line application is also impacted by this issue.",
          "fix_version": "1.1.1t",
          "references": []
        },
        {
          "id": "CVE-2023-0215",
          "severity": "High",
          "description": "The public API function BIO_new_NDEF is a helper function used for streaming\nASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the\nSMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by\nend user applications.\n\nThe function receives a BIO from the caller, prepends a new BIO_f_asn1 filter\nBIO onto the front of it to form a BIO chain, and then returns the new head of\nthe BIO chain to the caller. Under certain conditions, for example if a CMS\nrecipient public key is invalid, the new filter BIO is freed and the function\nreturns a NULL result indicating a failure. However, in this case, the BIO chain\nis not properly cleaned up and the BIO passed by the caller still retains\ninternal pointers to the previously freed filter BIO. If the caller then goes on\nto call BIO_pop() on the BIO then a use-after-free will occur. This will most\nlikely result in a crash.\n\n\n\nThis scenario occurs directly in the internal function B64_write_ASN1() which\nmay cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on\nthe BIO. This internal function is in turn called by the public API functions\nPEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream,\nSMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.\n\nOther public API functions that may be impacted by this include\ni2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and\ni2d_PKCS7_bio_stream.\n\nThe OpenSSL cms and smime command line applications are similarly affected.",
          "fix_version": "1.0.2zg",
          "references": []
        },
        {
          "id": "CVE-2023-0286",
          "severity": "High",
          "description": "There is a type confusion vulnerability relating to X.400 address processing\ninside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but\nthe public structure definition for GENERAL_NAME incorrectly specified the type\nof the x400Address field as ASN1_TYPE. This field is subsequently interpreted by\nthe OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an\nASN1_STRING.\n\nWhen CRL checking is enabled (i.e. the application sets the\nX509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass\narbitrary pointers to a memcmp call, enabling them to read memory contents or\nenact a denial of service. In most cases, the attack requires the attacker to\nprovide both the certificate chain and CRL, neither of which need to have a\nvalid signature. If the attacker only controls one of these inputs, the other\ninput must already contain an X.400 address as a CRL distribution point, which\nis uncommon. As such, this vulnerability is most likely to only affect\napplications which have implemented their own functionality for retrieving CRLs\nover a network.",
          "fix_version": "1.0.2zg",
          "references": []
        },
        {
          "id": "CVE-2023-0464",
          "severity": "High",
          "description": "A security vulnerability has been identified in all supported versions\n\nof OpenSSL related to the verification of X.509 certificate chains\nthat include policy constraints.  Attackers may be able to exploit this\nvulnerability by creating a malicious certificate chain that triggers\nexponential use of computational resources, leading to a denial-of-service\n(DoS) attack on affected systems.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
          "fix_version": "1.0.2zh",
          "references": []
        },
        {
          "id": "CVE-2023-4807",
          "severity": "High",
          "description": "Issue summary: The POLY1305 MAC (message authentication code) implementation\ncontains a bug that might corrupt the internal state of applications on the\nWindows 64 platform when running on newer X86_64 processors supporting the\nAVX512-IFMA instructions.\n\nImpact summary: If in an application that uses the OpenSSL library an attacker\ncan influence whether the POLY1305 MAC algorithm is used, the application\nstate might be corrupted with various application dependent consequences.\n\nThe POLY1305 MAC (message authentication code) implementation in OpenSSL does\nnot save the contents of non-volatile XMM registers on Windows 64 platform\nwhen calculating the MAC of data larger than 64 bytes. Before returning to\nthe caller all the XMM registers are set to zero rather than restoring their\nprevious content. The vulnerable code is used only on newer x86_64 processors\nsupporting the AVX512-IFMA instructions.\n\nThe consequences of this kind of internal application state corruption can\nbe various - from no consequences, if the calling application does not\ndepend on the contents of non-volatile XMM registers at all, to the worst\nconsequences, where the attacker could get complete control of the application\nprocess. However given the contents of the registers are just zeroized so\nthe attacker cannot put arbitrary values inside, the most likely consequence,\nif any, would be an incorrect result of some application dependent\ncalculations or a crash leading to a denial of service.\n\nThe POLY1305 MAC algorithm is most frequently used as part of the\nCHACHA20-POLY1305 AEAD (authenticated encryption with associated data)\nalgorithm. The most common usage of this AEAD cipher is with TLS protocol\nversions 1.2 and 1.3 and a malicious client can influence whether this AEAD\ncipher is used by the server. This implies that server applications using\nOpenSSL can be potentially impacted. However we are currently not aware of\nany concrete application that would be affected by this issue therefore we\nconsider this a Low severity security issue.\n\nAs a workaround the AVX512-IFMA instructions support can be disabled at\nruntime by setting the environment variable OPENSSL_ia32cap:\n\n   OPENSSL_ia32cap=:~0x200000\n\nThe FIPS provider is not affected by this issue.",
          "fix_version": "1.1.1w",
          "references": []
        },
        {
          "id": "CVE-2024-4741",
          "severity": "High",
          "description": "Issue summary: Calling the OpenSSL API function SSL_free_buffers may cause\nmemory to be accessed that was previously freed in some situations\n\nImpact summary: A use after free can have a range of potential consequences such\nas the corruption of valid data, crashes or execution of arbitrary code.\nHowever, only applications that directly call the SSL_free_buffers function are\naffected by this issue. Applications that do not call this function are not\nvulnerable. Our investigations indicate that this function is rarely used by\napplications.\n\nThe SSL_free_buffers function is used to free the internal OpenSSL buffer used\nwhen processing an incoming record from the network. The call is only expected\nto succeed if the buffer is not currently in use. However, two scenarios have\nbeen identified where the buffer is freed even when still in use.\n\nThe first scenario occurs where a record header has been received from the\nnetwork and processed by OpenSSL, but the full record body has not yet arrived.\nIn this case calling SSL_free_buffers will succeed even though a record has only\nbeen partially processed and the buffer is still in use.\n\nThe second scenario occurs where a full record containing application data has\nbeen received and processed by OpenSSL but the application has only read part of\nthis data. Again a call to SSL_free_buffers will succeed even though the buffer\nis still in use.\n\nWhile these scenarios could occur accidentally during normal operation a\nmalicious attacker could attempt to engineer a stituation where this occurs.\nWe are not aware of this issue being actively exploited.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
          "fix_version": "1.1.1y",
          "references": []
        },
        {
          "id": "CVE-2019-1551",
          "severity": "Medium",
          "description": "There is an overflow bug in the x64_64 Montgomery squaring procedure used in exponentiation with 512-bit moduli. No EC algorithms are affected. Analysis suggests that attacks against 2-prime RSA1024, 3-prime RSA1536, and DSA1024 as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH512 are considered just feasible. However, for an attack the target would have to re-use the DH512 private key, which is not recommended anyway. Also applications directly using the low level API BN_mod_exp may be affected if they use BN_FLG_CONSTTIME. Fixed in OpenSSL 1.1.1e (Affected 1.1.1-1.1.1d). Fixed in OpenSSL 1.0.2u (Affected 1.0.2-1.0.2t).",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2020-1971",
          "severity": "Medium",
          "description": "The X.509 GeneralName type is a generic type for representing different types of names. One of those name types is known as EDIPartyName. OpenSSL provides a function GENERAL_NAME_cmp which compares different instances of a GENERAL_NAME to see if they are equal or not. This function behaves incorrectly when both GENERAL_NAMEs contain an EDIPARTYNAME. A NULL pointer dereference and a crash may occur leading to a possible denial of service attack. OpenSSL itself uses the GENERAL_NAME_cmp function for two purposes: 1) Comparing CRL distribution point names between an available CRL and a CRL distribution point embedded in an X509 certificate 2) When verifying that a timestamp response token signer matches the timestamp authority name (exposed via the API functions TS_RESP_verify_response and TS_RESP_verify_token) If an attacker can control both items being compared then that attacker could trigger a crash. For example if the attacker can trick a client or server into checking a malicious certificate against a malicious CRL then this may occur. Note that some applications automatically download CRLs based on a URL embedded in a certificate. This checking happens prior to the signatures on the certificate and CRL being verified. OpenSSL's s_server, s_client and verify tools have support for the \"-crl_download\" option which implements automatic CRL downloading and this attack has been demonstrated to work against those tools. Note that an unrelated bug means that affected versions of OpenSSL cannot parse or construct correct encodings of EDIPARTYNAME. However it is possible to construct a malformed EDIPARTYNAME that OpenSSL's parser will accept and hence trigger this attack. All OpenSSL 1.1.1 and 1.0.2 versions are affected by this issue. Other OpenSSL releases are out of support and have not been checked. Fixed in OpenSSL 1.1.1i (Affected 1.1.1-1.1.1h). Fixed in OpenSSL 1.0.2x (Affected 1.0.2-1.0.2w).",
          "fix_version": "1.0.2x",
          "references": []
        },
        {
          "id": "CVE-2021-23841",
          "severity": "Medium",
          "description": "The OpenSSL public API function X509_issuer_and_serial_hash() attempts to create a unique hash value based on the issuer and serial number data contained within an X509 certificate. However it fails to correctly handle any errors that may occur while parsing the issuer field (which might occur if the issuer field is maliciously constructed). This may subsequently result in a NULL pointer deref and a crash leading to a potential denial of service attack. The function X509_issuer_and_serial_hash() is never directly called by OpenSSL itself so applications are only vulnerable if they use this function directly and they use it on certificates that may have been obtained from untrusted sources. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).",
          "fix_version": "1.0.2y",
          "references": []
        },
        {
          "id": "CVE-2021-3449",
          "severity": "Medium",
          "description": "An OpenSSL TLS server may crash if sent a maliciously crafted renegotiation ClientHello message from a client. If a TLSv1.2 renegotiation ClientHello omits the signature_algorithms extension (where it was present in the initial ClientHello), but includes a signature_algorithms_cert extension then a NULL pointer dereference will result, leading to a crash and a denial of service attack. A server is only vulnerable if it has TLSv1.2 and renegotiation enabled (which is the default configuration). OpenSSL TLS clients are not impacted by this issue. All OpenSSL 1.1.1 versions are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1-1.1.1j).",
          "fix_version": "1.1.1k",
          "references": []
        },
        {
          "id": "CVE-2021-4160",
          "severity": "Medium",
          "description": "There is a carry propagation bug in the MIPS32 and MIPS64 squaring procedure. Many EC algorithms are affected, including some of the TLS 1.3 default curves. Impact was not analyzed in detail, because the pre-requisites for attack are considered unlikely and include reusing private keys. Analysis suggests that attacks against RSA and DSA as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH are considered just feasible (although very difficult) because most of the work necessary to deduce information about a private key may be performed offline. The amount of resources required for such an attack would be significant. However, for an attack on TLS to be meaningful, the server would have to share the DH private key among multiple clients, which is no longer an option since CVE-2016-0701. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0.0. It was addressed in the releases of 1.1.1m and 3.0.1 on the 15th of December 2021. For the 1.0.2 release it is addressed in git commit 6fc1aaaf3 that is available to premium support customers only. It will be made available in 1.0.2zc when it is released. The issue only affects OpenSSL on MIPS platforms. Fixed in OpenSSL 3.0.1 (Affected 3.0.0). Fixed in OpenSSL 1.1.1m (Affected 1.1.1-1.1.1l). Fixed in OpenSSL 1.0.2zc-dev (Affected 1.0.2-1.0.2zb).",
          "fix_version": "1.1.1m",
          "references": []
        },
        {
          "id": "CVE-2022-2097",
          "severity": "Medium",
          "description": "AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p).",
          "fix_version": "1.1.1q",
          "references": []
        },
        {
          "id": "CVE-2022-4304",
          "severity": "Medium",
          "description": "A timing based side channel exists in the OpenSSL RSA Decryption implementation\nwhich could be sufficient to recover a plaintext across a network in a\nBleichenbacher style attack. To achieve a successful decryption an attacker\nwould have to be able to send a very large number of trial messages for\ndecryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5,\nRSA-OEAP and RSASVE.\n\nFor example, in a TLS connection, RSA is commonly used by a client to send an\nencrypted pre-master secret to the server. An attacker that had observed a\ngenuine connection between a client and a server could use this flaw to send\ntrial messages to the server and record the time taken to process them. After a\nsufficiently large number of messages the attacker could recover the pre-master\nsecret used for the original connection and thus be able to decrypt the\napplication data sent over that connection.",
          "fix_version": "1.0.2zg",
          "references": []
        },
        {
          "id": "CVE-2023-0465",
          "severity": "Medium",
          "description": "Applications that use a non-default option when verifying certificates may be\nvulnerable to an attack from a malicious CA to circumvent certain checks.\n\nInvalid certificate policies in leaf certificates are silently ignored by\nOpenSSL and other certificate policy checks are skipped for that certificate.\nA malicious CA could use this to deliberately assert invalid certificate policies\nin order to circumvent policy checking on the certificate altogether.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
          "fix_version": "1.0.2zh",
          "references": []
        },
        {
          "id": "CVE-2023-0466",
          "severity": "Medium",
          "description": "The function X509_VERIFY_PARAM_add0_policy() is documented to\nimplicitly enable the certificate policy check when doing certificate\nverification. However the implementation of the function does not\nenable the check which allows certificates with invalid or incorrect\npolicies to pass the certificate verification.\n\nAs suddenly enabling the policy check could break existing deployments it was\ndecided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy()\nfunction.\n\nInstead the applications that require OpenSSL to perform certificate\npolicy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly\nenable the policy check by calling X509_VERIFY_PARAM_set_flags() with\nthe X509_V_FLAG_POLICY_CHECK flag argument.\n\nCertificate policy checks are disabled by default in OpenSSL and are not\ncommonly used by applications.",
          "fix_version": "1.0.2zh",
          "references": []
        },
        {
          "id": "CVE-2023-2650",
          "severity": "Medium",
          "description": "Issue summary: Processing some specially crafted ASN.1 object identifiers or\ndata containing them may be very slow.\n\nImpact summary: Applications that use OBJ_obj2txt() directly, or use any of\nthe OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message\nsize limit may experience notable to very long delays when processing those\nmessages, which may lead to a Denial of Service.\n\nAn OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers -\nmost of which have no size limit.  OBJ_obj2txt() may be used to translate\nan ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL\ntype ASN1_OBJECT) to its canonical numeric text form, which are the\nsub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by\nperiods.\n\nWhen one of the sub-identifiers in the OBJECT IDENTIFIER is very large\n(these are sizes that are seen as absurdly large, taking up tens or hundreds\nof KiBs), the translation to a decimal number in text may take a very long\ntime.  The time complexity is O(n^2) with 'n' being the size of the\nsub-identifiers in bytes (*).\n\nWith OpenSSL 3.0, support to fetch cryptographic algorithms using names /\nidentifiers in string form was introduced.  This includes using OBJECT\nIDENTIFIERs in canonical numeric text form as identifiers for fetching\nalgorithms.\n\nSuch OBJECT IDENTIFIERs may be received through the ASN.1 structure\nAlgorithmIdentifier, which is commonly used in multiple protocols to specify\nwhat cryptographic algorithm should be used to sign or verify, encrypt or\ndecrypt, or digest passed data.\n\nApplications that call OBJ_obj2txt() directly with untrusted data are\naffected, with any version of OpenSSL.  If the use is for the mere purpose\nof display, the severity is considered low.\n\nIn OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME,\nCMS, CMP/CRMF or TS.  It also impacts anything that processes X.509\ncertificates, including simple things like verifying its signature.\n\nThe impact on TLS is relatively low, because all versions of OpenSSL have a\n100KiB limit on the peer's certificate chain.  Additionally, this only\nimpacts clients, or servers that have explicitly enabled client\nauthentication.\n\nIn OpenSSL 1.1.1 and 1.0.2, this only affects displaying diverse objects,\nsuch as X.509 certificates.  This is assumed to not happen in such a way\nthat it would cause a Denial of Service, so these versions are considered\nnot affected by this issue in such a way that it would be cause for concern,\nand the severity is therefore considered low.",
          "fix_version": "1.0.2zh",
          "references": []
        },
        {
          "id": "CVE-2023-3446",
          "severity": "Medium",
          "description": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. One of those\nchecks confirms that the modulus ('p' parameter) is not too large. Trying to use\na very large modulus is slow and OpenSSL will not normally use a modulus which\nis over 10,000 bits in length.\n\nHowever the DH_check() function checks numerous aspects of the key or parameters\nthat have been supplied. Some of those checks use the supplied modulus value\neven if it has already been found to be too large.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulernable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the '-check' option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
          "fix_version": "1.0.2zi",
          "references": []
        },
        {
          "id": "CVE-2023-3817",
          "severity": "Medium",
          "description": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. After fixing\nCVE-2023-3446 it was discovered that a large q parameter value can also trigger\nan overly long computation during some of these checks. A correct q value,\nif present, cannot be larger than the modulus p parameter, thus it is\nunnecessary to perform these checks if q is larger than p.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulnerable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the \"-check\" option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
          "fix_version": "3.0.10",
          "references": []
        },
        {
          "id": "CVE-2023-5678",
          "severity": "Medium",
          "description": "Issue summary: Generating excessively long X9.42 DH keys or checking\nexcessively long X9.42 DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_generate_key() to\ngenerate an X9.42 DH key may experience long delays.  Likewise, applications\nthat use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check()\nto check an X9.42 DH key or X9.42 DH parameters may experience long delays.\nWhere the key or parameters that are being checked have been obtained from\nan untrusted source this may lead to a Denial of Service.\n\nWhile DH_check() performs all the necessary checks (as of CVE-2023-3817),\nDH_check_pub_key() doesn't make any of these checks, and is therefore\nvulnerable for excessively large P and Q parameters.\n\nLikewise, while DH_generate_key() performs a check for an excessively large\nP, it doesn't check for an excessively large Q.\n\nAn application that calls DH_generate_key() or DH_check_pub_key() and\nsupplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nDH_generate_key() and DH_check_pub_key() are also called by a number of\nother OpenSSL functions.  An application calling any of those other\nfunctions may similarly be affected.  The other functions affected by this\nare DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().\n\nAlso vulnerable are the OpenSSL pkey command line application when using the\n\"-pubcheck\" option, as well as the OpenSSL genpkey command line application.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
          "fix_version": "1.0.2zj",
          "references": []
        },
        {
          "id": "CVE-2024-0727",
          "severity": "Medium",
          "description": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue.",
          "fix_version": "1.0.2zj",
          "references": []
        },
        {
          "id": "CVE-2024-13176",
          "severity": "Medium",
          "description": "Issue summary: A timing side-channel which could potentially allow recovering\nthe private key exists in the ECDSA signature computation.\n\nImpact summary: A timing side-channel in ECDSA signature computations\ncould allow recovering the private key by an attacker. However, measuring\nthe timing would require either local access to the signing application or\na very fast network connection with low latency.\n\nThere is a timing signal of around 300 nanoseconds when the top word of\nthe inverted ECDSA nonce value is zero. This can happen with significant\nprobability only for some of the supported elliptic curves. In particular\nthe NIST P-521 curve is affected. To be able to measure this leak, the attacker\nprocess must either be located in the same physical computer or must\nhave a very fast network connection with low latency. For that reason\nthe severity of this vulnerability is Low.\n\nThe FIPS modules in 3.4, 3.3, 3.2, 3.1 and 3.0 are affected by this issue.",
          "fix_version": "1.0.2zl",
          "references": []
        },
        {
          "id": "CVE-2024-2511",
          "severity": "Medium",
          "description": "Issue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue.",
          "fix_version": "1.1.1y",
          "references": []
        },
        {
          "id": "CVE-2024-9143",
          "severity": "Medium",
          "description": "Issue summary: Use of the low-level GF(2^m) elliptic curve APIs with untrusted\nexplicit values for the field polynomial can lead to out-of-bounds memory reads\nor writes.\n\nImpact summary: Out of bound memory writes can lead to an application crash or\neven a possibility of a remote code execution, however, in all the protocols\ninvolving Elliptic Curve Cryptography that we're aware of, either only \"named\ncurves\" are supported, or, if explicit curve parameters are supported, they\nspecify an X9.62 encoding of binary (GF(2^m)) curves that can't represent\nproblematic input values. Thus the likelihood of existence of a vulnerable\napplication is low.\n\nIn particular, the X9.62 encoding is used for ECC keys in X.509 certificates,\nso problematic inputs cannot occur in the context of processing X.509\ncertificates.  Any problematic use-cases would have to be using an \"exotic\"\ncurve encoding.\n\nThe affected APIs include: EC_GROUP_new_curve_GF2m(), EC_GROUP_new_from_params(),\nand various supporting BN_GF2m_*() functions.\n\nApplications working with \"exotic\" explicit binary (GF(2^m)) curve parameters,\nthat make it possible to represent invalid field polynomials with a zero\nconstant term, via the above or similar APIs, may terminate abruptly as a\nresult of reading or writing outside of array bounds.  Remote code execution\ncannot easily be ruled out.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
          "fix_version": "1.0.2zl",
          "references": []
        },
        {
          "id": "CVE-2021-3711",
          "severity": "Critical",
          "description": "In order to decrypt SM2 encrypted data an application is expected to call the API function EVP_PKEY_decrypt(). Typically an application will call this function twice. The first time, on entry, the \"out\" parameter can be NULL and, on exit, the \"outlen\" parameter is populated with the buffer size required to hold the decrypted plaintext. The application can then allocate a sufficiently sized buffer and call EVP_PKEY_decrypt() again, but this time passing a non-NULL value for the \"out\" parameter. A bug in the implementation of the SM2 decryption code means that the calculation of the buffer size required to hold the plaintext returned by the first call to EVP_PKEY_decrypt() can be smaller than the actual size required by the second call. This can lead to a buffer overflow when EVP_PKEY_decrypt() is called by the application a second time with a buffer that is too small. A malicious attacker who is able present SM2 content for decryption to an application could cause attacker chosen data to overflow the buffer by up to a maximum of 62 bytes altering the contents of other data held after the buffer, possibly changing application behaviour or causing the application to crash. The location of the buffer is application dependent but is typically heap allocated. Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k).",
          "fix_version": "1.1.1d-0+deb10u7",
          "references": []
        },
        {
          "id": "CVE-2022-1292",
          "severity": "Critical",
          "description": "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
          "fix_version": "1.1.1n-0+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2022-2068",
          "severity": "Critical",
          "description": "In addition to the c_rehash shell command injection identified in CVE-2022-1292, further circumstances where the c_rehash script does not properly sanitise shell metacharacters to prevent command injection were found by code review. When the CVE-2022-1292 was fixed it was not discovered that there are other places in the script where the file names of certificates being hashed were possibly passed to a command executed through the shell. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.4 (Affected 3.0.0,3.0.1,3.0.2,3.0.3). Fixed in OpenSSL 1.1.1p (Affected 1.1.1-1.1.1o). Fixed in OpenSSL 1.0.2zf (Affected 1.0.2-1.0.2ze).",
          "fix_version": "1.1.1n-0+deb10u3",
          "references": []
        },
        {
          "id": "CVE-2021-3712",
          "severity": "High",
          "description": "ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING structure which contains a buffer holding the string data and a field holding the buffer length. This contrasts with normal C strings which are repesented as a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL's own \"d2i\" functions (and other similar parsing functions) as well as any string whose value has been set with the ASN1_STRING_set() function will additionally NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING structures which do not NUL terminate the byte array by directly setting the \"data\" and \"length\" fields in the ASN1_STRING array. This can also happen by using the ASN1_STRING_set0() function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that the ASN1_STRING byte array will be NUL terminated, even though this is not guaranteed for strings that have been directly constructed. Where an application requests an ASN.1 structure to be printed, and where that ASN.1 structure contains ASN1_STRINGs that have been directly constructed by the application without NUL terminating the \"data\" field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates (for example if a certificate has been directly constructed by the application instead of loading it via the OpenSSL parsing functions, and the certificate contains non NUL terminated ASN1_STRING structures). It can also occur in the X509_get1_email(), X509_REQ_get1_email() and X509_get1_ocsp() functions. If a malicious actor can cause an application to directly construct an ASN1_STRING and then process it through one of the affected OpenSSL functions then this issue could be hit. This might result in a crash (causing a Denial of Service attack). It could also result in the disclosure of private memory contents (such as private keys, or sensitive plaintext). Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k). Fixed in OpenSSL 1.0.2za (Affected 1.0.2-1.0.2y).",
          "fix_version": "1.1.1d-0+deb10u7",
          "references": []
        },
        {
          "id": "CVE-2022-0778",
          "severity": "High",
          "description": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).",
          "fix_version": "1.1.1d-0+deb10u8",
          "references": []
        },
        {
          "id": "CVE-2022-4450",
          "severity": "High",
          "description": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and decodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data. If the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are populated with pointers to buffers containing the relevant decoded data. The caller is responsible for freeing those buffers. It is possible to construct a PEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex() will return a failure code but will populate the header argument with a pointer to a buffer that has already been freed. If the caller also frees this buffer then a double free will occur. This will most likely lead to a crash. This could be exploited by an attacker who has the ability to supply malicious PEM files for parsing to achieve a denial of service attack.  The functions PEM_read_bio() and PEM_read() are simple wrappers around PEM_read_bio_ex() and therefore these functions are also directly affected.  These functions are also called indirectly by a number of other OpenSSL functions including PEM_X509_INFO_read_bio_ex() and SSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal uses of these functions are not vulnerable because the caller does not free the header argument if PEM_read_bio_ex() returns a failure code. These locations include the PEM_read_bio_TYPE() functions as well as the decoders introduced in OpenSSL 3.0.  The OpenSSL asn1parse command line application is also impacted by this issue.",
          "fix_version": "1.1.1n-0+deb10u4",
          "references": []
        },
        {
          "id": "CVE-2023-0215",
          "severity": "High",
          "description": "The public API function BIO_new_NDEF is a helper function used for streaming ASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the SMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by end user applications.  The function receives a BIO from the caller, prepends a new BIO_f_asn1 filter BIO onto the front of it to form a BIO chain, and then returns the new head of the BIO chain to the caller. Under certain conditions, for example if a CMS recipient public key is invalid, the new filter BIO is freed and the function returns a NULL result indicating a failure. However, in this case, the BIO chain is not properly cleaned up and the BIO passed by the caller still retains internal pointers to the previously freed filter BIO. If the caller then goes on to call BIO_pop() on the BIO then a use-after-free will occur. This will most likely result in a crash.    This scenario occurs directly in the internal function B64_write_ASN1() which may cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on the BIO. This internal function is in turn called by the public API functions PEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream, SMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.  Other public API functions that may be impacted by this include i2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and i2d_PKCS7_bio_stream.  The OpenSSL cms and smime command line applications are similarly affected.",
          "fix_version": "1.1.1n-0+deb10u4",
          "references": []
        },
        {
          "id": "CVE-2023-0286",
          "severity": "High",
          "description": "There is a type confusion vulnerability relating to X.400 address processing inside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but the public structure definition for GENERAL_NAME incorrectly specified the type of the x400Address field as ASN1_TYPE. This field is subsequently interpreted by the OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an ASN1_STRING.  When CRL checking is enabled (i.e. the application sets the X509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass arbitrary pointers to a memcmp call, enabling them to read memory contents or enact a denial of service. In most cases, the attack requires the attacker to provide both the certificate chain and CRL, neither of which need to have a valid signature. If the attacker only controls one of these inputs, the other input must already contain an X.400 address as a CRL distribution point, which is uncommon. As such, this vulnerability is most likely to only affect applications which have implemented their own functionality for retrieving CRLs over a network.",
          "fix_version": "1.1.1n-0+deb10u4",
          "references": []
        },
        {
          "id": "CVE-2023-0464",
          "severity": "High",
          "description": "A security vulnerability has been identified in all supported versions  of OpenSSL related to the verification of X.509 certificate chains that include policy constraints.  Attackers may be able to exploit this vulnerability by creating a malicious certificate chain that triggers exponential use of computational resources, leading to a denial-of-service (DoS) attack on affected systems.  Policy processing is disabled by default but can be enabled by passing the `-policy' argument to the command line utilities or by calling the `X509_VERIFY_PARAM_set1_policies()' function.",
          "fix_version": "1.1.1n-0+deb10u5",
          "references": []
        },
        {
          "id": "CVE-2024-4741",
          "severity": "High",
          "description": null,
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2021-4160",
          "severity": "Medium",
          "description": "There is a carry propagation bug in the MIPS32 and MIPS64 squaring procedure. Many EC algorithms are affected, including some of the TLS 1.3 default curves. Impact was not analyzed in detail, because the pre-requisites for attack are considered unlikely and include reusing private keys. Analysis suggests that attacks against RSA and DSA as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH are considered just feasible (although very difficult) because most of the work necessary to deduce information about a private key may be performed offline. The amount of resources required for such an attack would be significant. However, for an attack on TLS to be meaningful, the server would have to share the DH private key among multiple clients, which is no longer an option since CVE-2016-0701. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0.0. It was addressed in the releases of 1.1.1m and 3.0.1 on the 15th of December 2021. For the 1.0.2 release it is addressed in git commit 6fc1aaaf3 that is available to premium support customers only. It will be made available in 1.0.2zc when it is released. The issue only affects OpenSSL on MIPS platforms. Fixed in OpenSSL 3.0.1 (Affected 3.0.0). Fixed in OpenSSL 1.1.1m (Affected 1.1.1-1.1.1l). Fixed in OpenSSL 1.0.2zc-dev (Affected 1.0.2-1.0.2zb).",
          "fix_version": "1.1.1d-0+deb10u8",
          "references": []
        },
        {
          "id": "CVE-2022-2097",
          "severity": "Medium",
          "description": "AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p).",
          "fix_version": "1.1.1n-0+deb10u4",
          "references": []
        },
        {
          "id": "CVE-2022-4304",
          "severity": "Medium",
          "description": "A timing based side channel exists in the OpenSSL RSA Decryption implementation which could be sufficient to recover a plaintext across a network in a Bleichenbacher style attack. To achieve a successful decryption an attacker would have to be able to send a very large number of trial messages for decryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5, RSA-OEAP and RSASVE.  For example, in a TLS connection, RSA is commonly used by a client to send an encrypted pre-master secret to the server. An attacker that had observed a genuine connection between a client and a server could use this flaw to send trial messages to the server and record the time taken to process them. After a sufficiently large number of messages the attacker could recover the pre-master secret used for the original connection and thus be able to decrypt the application data sent over that connection.",
          "fix_version": "1.1.1n-0+deb10u4",
          "references": []
        },
        {
          "id": "CVE-2023-0465",
          "severity": "Medium",
          "description": "Applications that use a non-default option when verifying certificates may be vulnerable to an attack from a malicious CA to circumvent certain checks.  Invalid certificate policies in leaf certificates are silently ignored by OpenSSL and other certificate policy checks are skipped for that certificate. A malicious CA could use this to deliberately assert invalid certificate policies in order to circumvent policy checking on the certificate altogether.  Policy processing is disabled by default but can be enabled by passing the `-policy' argument to the command line utilities or by calling the `X509_VERIFY_PARAM_set1_policies()' function.",
          "fix_version": "1.1.1n-0+deb10u5",
          "references": []
        },
        {
          "id": "CVE-2023-0466",
          "severity": "Medium",
          "description": "The function X509_VERIFY_PARAM_add0_policy() is documented to implicitly enable the certificate policy check when doing certificate verification. However the implementation of the function does not enable the check which allows certificates with invalid or incorrect policies to pass the certificate verification.  As suddenly enabling the policy check could break existing deployments it was decided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy() function.  Instead the applications that require OpenSSL to perform certificate policy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly enable the policy check by calling X509_VERIFY_PARAM_set_flags() with the X509_V_FLAG_POLICY_CHECK flag argument.  Certificate policy checks are disabled by default in OpenSSL and are not commonly used by applications.",
          "fix_version": "1.1.1n-0+deb10u5",
          "references": []
        },
        {
          "id": "CVE-2023-2650",
          "severity": "Medium",
          "description": "Issue summary: Processing some specially crafted ASN.1 object identifiers or data containing them may be very slow.  Impact summary: Applications that use OBJ_obj2txt() directly, or use any of the OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message size limit may experience notable to very long delays when processing those messages, which may lead to a Denial of Service.  An OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers - most of which have no size limit.  OBJ_obj2txt() may be used to translate an ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL type ASN1_OBJECT) to its canonical numeric text form, which are the sub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by periods.  When one of the sub-identifiers in the OBJECT IDENTIFIER is very large (these are sizes that are seen as absurdly large, taking up tens or hundreds of KiBs), the translation to a decimal number in text may take a very long time.  The time complexity is O(n^2) with 'n' being the size of the sub-identifiers in bytes (*).  With OpenSSL 3.0, support to fetch cryptographic algorithms using names / identifiers in string form was introduced.  This includes using OBJECT IDENTIFIERs in canonical numeric text form as identifiers for fetching algorithms.  Such OBJECT IDENTIFIERs may be received through the ASN.1 structure AlgorithmIdentifier, which is commonly used in multiple protocols to specify what cryptographic algorithm should be used to sign or verify, encrypt or decrypt, or digest passed data.  Applications that call OBJ_obj2txt() directly with untrusted data are affected, with any version of OpenSSL.  If the use is for the mere purpose of display, the severity is considered low.  In OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS.  It also impacts anything that processes X.509 certificates, including simple things like verifying its signature.  The impact on TLS is relatively low, because all versions of OpenSSL have a 100KiB limit on the peer's certificate chain.  Additionally, this only impacts clients, or servers that have explicitly enabled client authentication.  In OpenSSL 1.1.1 and 1.0.2, this only affects displaying diverse objects, such as X.509 certificates.  This is assumed to not happen in such a way that it would cause a Denial of Service, so these versions are considered not affected by this issue in such a way that it would be cause for concern, and the severity is therefore considered low.",
          "fix_version": "1.1.1n-0+deb10u5",
          "references": []
        },
        {
          "id": "CVE-2023-3446",
          "severity": "Medium",
          "description": "Issue summary: Checking excessively long DH keys or parameters may be very slow.  Impact summary: Applications that use the functions DH_check(), DH_check_ex() or EVP_PKEY_param_check() to check a DH key or DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service.  The function DH_check() performs various checks on DH parameters. One of those checks confirms that the modulus ('p' parameter) is not too large. Trying to use a very large modulus is slow and OpenSSL will not normally use a modulus which is over 10,000 bits in length.  However the DH_check() function checks numerous aspects of the key or parameters that have been supplied. Some of those checks use the supplied modulus value even if it has already been found to be too large.  An application that calls DH_check() and supplies a key or parameters obtained from an untrusted source could be vulernable to a Denial of Service attack.  The function DH_check() is itself called by a number of other OpenSSL functions. An application calling any of those other functions may similarly be affected. The other functions affected by this are DH_check_ex() and EVP_PKEY_param_check().  Also vulnerable are the OpenSSL dhparam and pkeyparam command line applications when using the '-check' option.  The OpenSSL SSL/TLS implementation is not affected by this issue. The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
          "fix_version": "1.1.1n-0+deb10u6",
          "references": []
        },
        {
          "id": "CVE-2023-3817",
          "severity": "Medium",
          "description": "Issue summary: Checking excessively long DH keys or parameters may be very slow.  Impact summary: Applications that use the functions DH_check(), DH_check_ex() or EVP_PKEY_param_check() to check a DH key or DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service.  The function DH_check() performs various checks on DH parameters. After fixing CVE-2023-3446 it was discovered that a large q parameter value can also trigger an overly long computation during some of these checks. A correct q value, if present, cannot be larger than the modulus p parameter, thus it is unnecessary to perform these checks if q is larger than p.  An application that calls DH_check() and supplies a key or parameters obtained from an untrusted source could be vulnerable to a Denial of Service attack.  The function DH_check() is itself called by a number of other OpenSSL functions. An application calling any of those other functions may similarly be affected. The other functions affected by this are DH_check_ex() and EVP_PKEY_param_check().  Also vulnerable are the OpenSSL dhparam and pkeyparam command line applications when using the \"-check\" option.  The OpenSSL SSL/TLS implementation is not affected by this issue.  The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
          "fix_version": "1.1.1n-0+deb10u6",
          "references": []
        },
        {
          "id": "CVE-2023-5678",
          "severity": "Medium",
          "description": "Issue summary: Generating excessively long X9.42 DH keys or checking excessively long X9.42 DH keys or parameters may be very slow.  Impact summary: Applications that use the functions DH_generate_key() to generate an X9.42 DH key may experience long delays.  Likewise, applications that use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check() to check an X9.42 DH key or X9.42 DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service.  While DH_check() performs all the necessary checks (as of CVE-2023-3817), DH_check_pub_key() doesn't make any of these checks, and is therefore vulnerable for excessively large P and Q parameters.  Likewise, while DH_generate_key() performs a check for an excessively large P, it doesn't check for an excessively large Q.  An application that calls DH_generate_key() or DH_check_pub_key() and supplies a key or parameters obtained from an untrusted source could be vulnerable to a Denial of Service attack.  DH_generate_key() and DH_check_pub_key() are also called by a number of other OpenSSL functions.  An application calling any of those other functions may similarly be affected.  The other functions affected by this are DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().  Also vulnerable are the OpenSSL pkey command line application when using the \"-pubcheck\" option, as well as the OpenSSL genpkey command line application.  The OpenSSL SSL/TLS implementation is not affected by this issue.  The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2024-0727",
          "severity": "Medium",
          "description": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL to crash leading to a potential Denial of Service attack  Impact summary: Applications loading files in the PKCS12 format from untrusted sources might terminate abruptly.  A file in PKCS12 format can contain certificates and keys and may come from an untrusted source. The PKCS12 specification allows certain fields to be NULL, but OpenSSL does not correctly check for this case. This can lead to a NULL pointer dereference that results in OpenSSL crashing. If an application processes PKCS12 files from an untrusted source using the OpenSSL APIs then that application will be vulnerable to this issue.  OpenSSL APIs that are vulnerable to this are: PKCS12_parse(), PKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes() and PKCS12_newpass().  We have also fixed a similar issue in SMIME_write_PKCS7(). However since this function is related to writing data we do not consider it security significant.  The FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2024-2511",
          "severity": "Medium",
          "description": "Issue summary: Some non-default TLS server configurations can cause unbounded memory growth when processing TLSv1.3 sessions  Impact summary: An attacker may exploit certain server configurations to trigger unbounded memory growth that would lead to a Denial of Service  This problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is being used (but not if early_data support is also configured and the default anti-replay protection is in use). In this case, under certain conditions, the session cache can get into an incorrect state and it will fail to flush properly as it fills. The session cache will continue to grow in an unbounded manner. A malicious client could deliberately create the scenario for this failure to force a Denial of Service. It may also happen by accident in normal operation.  This issue only affects TLS servers supporting TLSv1.3. It does not affect TLS clients.  The FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL 1.0.2 is also not affected by this issue.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "passwd",
      "version": "1:4.5-1.1",
      "type": "library",
      "origin": "pkg:deb/debian/passwd@1%3A4.5-1.1?arch=amd64&distro=debian-10&upstream=shadow",
      "maintainer": null,
      "licenses": [
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2023-4641",
          "severity": "Medium",
          "description": "A flaw was found in shadow-utils. When asking for a new password, shadow-utils asks the password twice. If the password fails on the second attempt, shadow-utils fails in cleaning the buffer used to store the first entry. This may allow an attacker with enough access to retrieve the password from the memory.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2018-7169",
          "severity": "Low",
          "description": "An issue was discovered in shadow 4.5. newgidmap (in shadow-utils) is setuid and allows an unprivileged user to be placed in a user namespace where setgroups(2) is permitted. This allows an attacker to remove themselves from a supplementary group, which may allow access to certain filesystem paths if the administrator has used \"group blacklisting\" (e.g., chmod g-rwx) to restrict access to paths. This flaw effectively reverts a security feature in the kernel (in particular, the /proc/self/setgroups knob) to prevent this sort of privilege escalation.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2023-29383",
          "severity": "Low",
          "description": "In Shadow 4.13, it is possible to inject control characters into fields provided to the SUID program chfn (change finger). Although it is not possible to exploit this directly (e.g., adding a new user fails because \\n is in the block list), it is possible to misrepresent the /etc/passwd file when viewed. Use of \\r manipulations and Unicode characters to work around blocking of the : character make it possible to give the impression that a new user has been added. In other words, an adversary may be able to convince a system administrator to take the system offline (an indirect, social-engineered denial of service) by demonstrating that \"cat /etc/passwd\" shows a rogue user account.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2007-5686",
          "severity": "Negligible",
          "description": "initscripts in rPath Linux 1 sets insecure permissions for the /var/log/btmp file, which allows local users to obtain sensitive information regarding authentication attempts.  NOTE: because sshd detects the insecure permissions and does not log certain events, this also prevents sshd from logging failed authentication attempts by remote attackers.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2013-4235",
          "severity": "Negligible",
          "description": "shadow: TOCTOU (time-of-check time-of-use) race condition when copying and removing directory trees",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2019-19882",
          "severity": "Negligible",
          "description": "shadow 4.8, in certain circumstances affecting at least Gentoo, Arch Linux, and Void Linux, allows local users to obtain root access because setuid programs are misconfigured. Specifically, this affects shadow 4.8 when compiled using --with-libpam but without explicitly passing --disable-account-tools-setuid, and without a PAM configuration suitable for use with setuid account management tools. This combination leads to account management tools (groupadd, groupdel, groupmod, useradd, userdel, usermod) that can easily be used by unprivileged local users to escalate privileges to root in multiple ways. This issue became much more relevant in approximately December 2019 when an unrelated bug was fixed (i.e., the chmod calls to suidusbins were fixed in the upstream Makefile which is now included in the release version 4.8).",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "perl-base",
      "version": "5.28.1-6+deb10u1",
      "type": "library",
      "origin": "pkg:deb/debian/perl-base@5.28.1-6%2Bdeb10u1?arch=amd64&distro=debian-10&upstream=perl",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2020-16156",
          "severity": "High",
          "description": "CPAN 2.28 allows Signature Verification Bypass.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2023-31484",
          "severity": "High",
          "description": "CPAN.pm before 2.35 does not verify TLS certificates when downloading distributions over HTTPS.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2011-4116",
          "severity": "Negligible",
          "description": "_is_safe in the File::Temp module for Perl does not properly handle symlinks.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2023-31486",
          "severity": "Negligible",
          "description": "HTTP::Tiny before 0.083, a Perl core module since 5.13.9 and available standalone on CPAN, has an insecure default TLS configuration where users must opt in to verify certificates.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "readline-common",
      "version": "7.0-5",
      "type": "library",
      "origin": "pkg:deb/debian/readline-common@7.0-5?arch=all&distro=debian-10&upstream=readline",
      "maintainer": null,
      "licenses": [
        null,
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "sed",
      "version": "4.7-1",
      "type": "library",
      "origin": "pkg:deb/debian/sed@4.7-1?arch=amd64&distro=debian-10",
      "maintainer": null,
      "licenses": [
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "sensible-utils",
      "version": "0.0.12",
      "type": "library",
      "origin": "pkg:deb/debian/sensible-utils@0.0.12?arch=all&distro=debian-10",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "sysvinit-utils",
      "version": "2.93-8",
      "type": "library",
      "origin": "pkg:deb/debian/sysvinit-utils@2.93-8?arch=amd64&distro=debian-10&upstream=sysvinit",
      "maintainer": null,
      "licenses": [
        null,
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "tar",
      "version": "1.30+dfsg-6",
      "type": "library",
      "origin": "pkg:deb/debian/tar@1.30%2Bdfsg-6?arch=amd64&distro=debian-10",
      "maintainer": null,
      "licenses": [
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2023-39804",
          "severity": "Medium",
          "description": "In GNU tar before 1.35, mishandled extension attributes in a PAX archive can lead to an application crash in xheader.c.",
          "fix_version": "1.30+dfsg-6+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2005-2541",
          "severity": "Negligible",
          "description": "Tar 1.15.1 does not properly warn the user when extracting setuid or setgid files, which may allow local users or remote attackers to gain privileges.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2019-9923",
          "severity": "Negligible",
          "description": "pax_decode_header in sparse.c in GNU Tar before 1.32 had a NULL pointer dereference when parsing certain archives that have malformed extended headers.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2021-20193",
          "severity": "Negligible",
          "description": "A flaw was found in the src/list.c of tar 1.33 and earlier. This flaw allows an attacker who can submit a crafted input file to tar to cause uncontrolled consumption of memory. The highest threat from this vulnerability is to system availability.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2022-48303",
          "severity": "Negligible",
          "description": "GNU Tar through 1.34 has a one-byte out-of-bounds read that results in use of uninitialized memory for a conditional jump. Exploitation to change the flow of control has not been demonstrated. The issue occurs in from_header in list.c via a V7 archive in which mtime has approximately 11 whitespace characters.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "tzdata",
      "version": "2021a-0+deb10u1",
      "type": "library",
      "origin": "pkg:deb/debian/tzdata@2021a-0%2Bdeb10u1?arch=all&distro=debian-10",
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "ucf",
      "version": "3.0038+nmu1",
      "type": "library",
      "origin": "pkg:deb/debian/ucf@3.0038%2Bnmu1?arch=all&distro=debian-10",
      "maintainer": null,
      "licenses": [
        null
      ],
      "vulnerabilities": []
    },
    {
      "name": "util-linux",
      "version": "2.33.1",
      "type": "application",
      "origin": "pkg:generic/util-linux@2.33.1",
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": [
        {
          "id": "CVE-2021-37600",
          "severity": "Medium",
          "description": "An integer overflow in util-linux through 2.37.1 can potentially cause a buffer overflow if an attacker were able to use system resources in a way that leads to a large number in the /proc/sysvipc/sem file. NOTE: this is unexploitable in GNU C Library environments, and possibly in all realistic environments.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2022-0563",
          "severity": "Medium",
          "description": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
          "fix_version": "2.37.4",
          "references": []
        },
        {
          "id": "CVE-2024-28085",
          "severity": "Low",
          "description": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
          "fix_version": "2.39.4",
          "references": []
        },
        {
          "id": "CVE-2021-37600",
          "severity": "Medium",
          "description": "An integer overflow in util-linux through 2.37.1 can potentially cause a buffer overflow if an attacker were able to use system resources in a way that leads to a large number in the /proc/sysvipc/sem file. NOTE: this is unexploitable in GNU C Library environments, and possibly in all realistic environments.",
          "fix_version": "2.33.1-0.1+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2024-28085",
          "severity": "Low",
          "description": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
          "fix_version": "2.33.1-0.1+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2022-0563",
          "severity": "Negligible",
          "description": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "util-linux",
      "version": "2.33.1-0.1",
      "type": "library",
      "origin": "pkg:deb/debian/util-linux@2.33.1-0.1?arch=amd64&distro=debian-10",
      "maintainer": null,
      "licenses": [
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null,
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2021-37600",
          "severity": "Medium",
          "description": "An integer overflow in util-linux through 2.37.1 can potentially cause a buffer overflow if an attacker were able to use system resources in a way that leads to a large number in the /proc/sysvipc/sem file. NOTE: this is unexploitable in GNU C Library environments, and possibly in all realistic environments.",
          "fix_version": null,
          "references": []
        },
        {
          "id": "CVE-2022-0563",
          "severity": "Medium",
          "description": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
          "fix_version": "2.37.4",
          "references": []
        },
        {
          "id": "CVE-2024-28085",
          "severity": "Low",
          "description": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
          "fix_version": "2.39.4",
          "references": []
        },
        {
          "id": "CVE-2021-37600",
          "severity": "Medium",
          "description": "An integer overflow in util-linux through 2.37.1 can potentially cause a buffer overflow if an attacker were able to use system resources in a way that leads to a large number in the /proc/sysvipc/sem file. NOTE: this is unexploitable in GNU C Library environments, and possibly in all realistic environments.",
          "fix_version": "2.33.1-0.1+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2024-28085",
          "severity": "Low",
          "description": "wall in util-linux through 2.40, often installed with setgid tty permissions, allows escape sequences to be sent to other users' terminals through argv. (Specifically, escape sequences received from stdin are blocked, but escape sequences received from argv are not blocked.) There may be plausible scenarios where this leads to account takeover.",
          "fix_version": "2.33.1-0.1+deb10u1",
          "references": []
        },
        {
          "id": "CVE-2022-0563",
          "severity": "Negligible",
          "description": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
          "fix_version": null,
          "references": []
        }
      ]
    },
    {
      "name": "zlib1g",
      "version": "1:1.2.11.dfsg-1",
      "type": "library",
      "origin": "pkg:deb/debian/zlib1g@1%3A1.2.11.dfsg-1?arch=amd64&distro=debian-10&upstream=zlib",
      "maintainer": null,
      "licenses": [
        null
      ],
      "vulnerabilities": [
        {
          "id": "CVE-2022-37434",
          "severity": "Critical",
          "description": "zlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in inflate.c via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference).",
          "fix_version": "1:1.2.11.dfsg-1+deb10u2",
          "references": []
        },
        {
          "id": "CVE-2018-25032",
          "severity": "High",
          "description": "zlib before 1.2.12 allows memory corruption when deflating (i.e., when compressing) if the input has many distant matches.",
          "fix_version": "1:1.2.11.dfsg-1+deb10u1",
          "references": []
        }
      ]
    },
    {
      "name": "debian",
      "version": "10",
      "type": "operating-system",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/bin/bash",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/bin/gzip",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/alternatives/README",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/apt/apt.conf.d/01autoremove",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/apt/apt.conf.d/70debconf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/apt/trusted.gpg.d/debian-archive-bullseye-automatic.gpg",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/apt/trusted.gpg.d/debian-archive-bullseye-security-automatic.gpg",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/apt/trusted.gpg.d/debian-archive-bullseye-stable.gpg",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/apt/trusted.gpg.d/debian-archive-buster-automatic.gpg",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/apt/trusted.gpg.d/debian-archive-buster-security-automatic.gpg",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/apt/trusted.gpg.d/debian-archive-buster-stable.gpg",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/apt/trusted.gpg.d/debian-archive-stretch-automatic.gpg",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/apt/trusted.gpg.d/debian-archive-stretch-security-automatic.gpg",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/apt/trusted.gpg.d/debian-archive-stretch-stable.gpg",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/bash.bashrc",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/bindresvport.blacklist",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/cron.daily/apt-compat",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/cron.daily/dpkg",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/cron.daily/passwd",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/debconf.conf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/debian_version",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/default/hwclock",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/default/nginx",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/default/nginx-debug",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/default/nss",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/default/useradd",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/deluser.conf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/dpkg/dpkg.cfg",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/dpkg/origins/debian",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/fonts/conf.avail/20-unhint-small-dejavu-lgc-sans-mono.conf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/fonts/conf.avail/20-unhint-small-dejavu-lgc-sans.conf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/fonts/conf.avail/20-unhint-small-dejavu-lgc-serif.conf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/fonts/conf.avail/20-unhint-small-dejavu-sans-mono.conf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/fonts/conf.avail/20-unhint-small-dejavu-sans.conf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/fonts/conf.avail/20-unhint-small-dejavu-serif.conf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/fonts/conf.avail/57-dejavu-sans-mono.conf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/fonts/conf.avail/57-dejavu-sans.conf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/fonts/conf.avail/57-dejavu-serif.conf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/fonts/conf.avail/58-dejavu-lgc-sans-mono.conf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/fonts/conf.avail/58-dejavu-lgc-sans.conf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/fonts/conf.avail/58-dejavu-lgc-serif.conf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/fonts/conf.d/README",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/fonts/fonts.conf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/gai.conf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/host.conf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/init.d/hwclock.sh",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/init.d/nginx",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/init.d/nginx-debug",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/issue",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/issue.net",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/kernel/postinst.d/apt-auto-removal",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/ld.so.conf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/ld.so.conf.d/libc.conf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/ld.so.conf.d/x86_64-linux-gnu.conf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/ldap/ldap.conf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/libaudit.conf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/login.defs",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/logrotate.d/alternatives",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/logrotate.d/apt",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/logrotate.d/dpkg",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/logrotate.d/nginx",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/mke2fs.conf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/nginx/conf.d/default.conf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/nginx/fastcgi_params",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/nginx/koi-utf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/nginx/koi-win",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/nginx/mime.types",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/nginx/nginx.conf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/nginx/scgi_params",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/nginx/uwsgi_params",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/nginx/win-utf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/pam.conf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/pam.d/chfn",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/pam.d/chpasswd",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/pam.d/chsh",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/pam.d/login",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/pam.d/newusers",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/pam.d/other",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/pam.d/passwd",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/pam.d/runuser",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/pam.d/runuser-l",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/pam.d/su",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/pam.d/su-l",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/securetty",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/security/access.conf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/security/group.conf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/security/limits.conf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/security/namespace.conf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/security/namespace.init",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/security/pam_env.conf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/security/sepermit.conf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/security/time.conf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/selinux/semanage.conf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/skel/.bash_logout",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/skel/.bashrc",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/skel/.profile",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/ssl/openssl.cnf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/terminfo/README",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/ucf.conf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/update-motd.d/10-uname",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/etc/xattr.conf",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/bin/curl",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/bin/getopt",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/bin/openssl",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/sbin/nginx",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/adduser/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/apt/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/base-files/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/base-passwd/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/bash/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/bsdutils/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/ca-certificates/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/coreutils/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/curl/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/dash/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/debconf/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/debian-archive-keyring/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/debianutils/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/diffutils/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/dpkg/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/e2fsprogs/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/fdisk/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/findutils/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/fontconfig-config/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/fonts-dejavu-core/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/gcc-8-base/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/gettext-base/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/gpgv/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/grep/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/gzip/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/hostname/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/init-system-helpers/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libacl1/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libapt-pkg5.0/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libattr1/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libaudit-common/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libaudit1/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libblkid1/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libbsd0/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libbz2-1.0/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libc-bin/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libc6/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libcap-ng0/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libcom-err2/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libcurl4/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libdb5.3/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libdebconfclient0/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libexpat1/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libext2fs2/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libfdisk1/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libffi6/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libfontconfig1/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libfreetype6/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libgcrypt20/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libgd3/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libgeoip1/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libgmp10/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libgnutls30/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libgpg-error0/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libgssapi-krb5-2/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libicu63/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libidn2-0/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libjbig0/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libjpeg62-turbo/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libk5crypto3/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libkeyutils1/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libkrb5-3/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libkrb5support0/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libldap-2.4-2/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libldap-common/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/liblz4-1/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/liblzma5/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libmount1/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libnettle6/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libnghttp2-14/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libp11-kit0/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libpam-modules-bin/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libpam-modules/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libpam-runtime/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libpam0g/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libpcre3/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libpng16-16/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libpsl5/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libreadline7/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/librtmp1/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libsasl2-2/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libsasl2-modules-db/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libseccomp2/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libselinux1/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libsemanage-common/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libsemanage1/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libsepol1/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libsmartcols1/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libss2/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libssh2-1/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libssl1.1/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libsystemd0/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libtasn1-6/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libtiff5/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libtinfo6/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libudev1/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libunistring2/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libuuid1/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libwebp6/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libx11-6/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libx11-data/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libxau6/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libxcb1/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libxdmcp6/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libxml2/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libxpm4/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libxslt1.1/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/libzstd1/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/login/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/lsb-base/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/mawk/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/mount/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/ncurses-base/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/ncurses-bin/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/nginx-module-geoip/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/nginx-module-image-filter/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/nginx-module-njs/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/nginx-module-xslt/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/nginx/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/openssl/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/passwd/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/perl/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/readline-common/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/sed/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/sensible-utils/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/sysvinit-utils/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/tar/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/tzdata/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/ucf/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/util-linux/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/doc/zlib1g/copyright",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/usr/share/java/libintl.jar",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/adduser.conffiles",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/adduser.config",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/adduser.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/adduser.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/adduser.postinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/adduser.postrm",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/adduser.templates",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/apt.conffiles",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/apt.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/apt.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/apt.postinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/apt.postrm",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/apt.preinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/apt.prerm",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/apt.shlibs",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/apt.triggers",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/base-files.conffiles",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/base-files.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/base-files.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/base-files.postinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/base-passwd.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/base-passwd.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/base-passwd.postinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/base-passwd.postrm",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/base-passwd.preinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/base-passwd.templates",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/bash.conffiles",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/bash.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/bash.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/bash.postinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/bash.postrm",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/bash.preinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/bash.prerm",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/bsdutils.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/bsdutils.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/ca-certificates.config",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/ca-certificates.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/ca-certificates.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/ca-certificates.postinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/ca-certificates.postrm",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/ca-certificates.templates",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/ca-certificates.triggers",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/coreutils.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/coreutils.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/coreutils.postinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/coreutils.postrm",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/curl.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/curl.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/dash.config",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/dash.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/dash.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/dash.postinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/dash.postrm",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/dash.prerm",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/dash.templates",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/debconf.conffiles",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/debconf.config",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/debconf.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/debconf.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/debconf.postinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/debconf.postrm",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/debconf.preinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/debconf.prerm",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/debconf.templates",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/debian-archive-keyring.conffiles",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/debian-archive-keyring.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/debian-archive-keyring.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/debian-archive-keyring.postinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/debian-archive-keyring.postrm",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/debian-archive-keyring.preinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/debian-archive-keyring.prerm",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/debianutils.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/debianutils.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/debianutils.postinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/debianutils.postrm",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/diffutils.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/diffutils.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/dpkg.conffiles",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/dpkg.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/dpkg.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/dpkg.postinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/dpkg.postrm",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/e2fsprogs.conffiles",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/e2fsprogs.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/e2fsprogs.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/e2fsprogs.postinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/e2fsprogs.preinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/fdisk.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/fdisk.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/findutils.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/findutils.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/fontconfig-config.conffiles",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/fontconfig-config.config",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/fontconfig-config.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/fontconfig-config.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/fontconfig-config.postinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/fontconfig-config.postrm",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/fontconfig-config.preinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/fontconfig-config.prerm",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/fontconfig-config.templates",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/fonts-dejavu-core.conffiles",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/fonts-dejavu-core.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/fonts-dejavu-core.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/gettext-base.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/gettext-base.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/gettext-base.triggers",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/gpgv.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/gpgv.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/grep.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/grep.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/gzip.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/gzip.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/hostname.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/hostname.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/init-system-helpers.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/init-system-helpers.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/libaudit-common.conffiles",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/libaudit-common.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/libaudit-common.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/libc-bin.conffiles",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/libc-bin.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/libc-bin.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/libc-bin.postinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/libc-bin.triggers",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/libldap-common.conffiles",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/libldap-common.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/libldap-common.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/libpam-modules-bin.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/libpam-modules-bin.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/libpam-runtime.conffiles",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/libpam-runtime.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/libpam-runtime.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/libpam-runtime.postinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/libpam-runtime.postrm",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/libpam-runtime.prerm",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/libpam-runtime.templates",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/libsemanage-common.conffiles",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/libsemanage-common.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/libsemanage-common.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/libx11-data.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/libx11-data.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/login.conffiles",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/login.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/login.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/login.postinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/login.preinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/lsb-base.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/lsb-base.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/mawk.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/mawk.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/mawk.postinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/mawk.prerm",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/mount.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/mount.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/ncurses-base.conffiles",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/ncurses-base.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/ncurses-base.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/ncurses-bin.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/ncurses-bin.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/nginx-module-geoip.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/nginx-module-geoip.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/nginx-module-geoip.postinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/nginx-module-image-filter.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/nginx-module-image-filter.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/nginx-module-image-filter.postinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/nginx-module-njs.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/nginx-module-njs.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/nginx-module-njs.postinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/nginx-module-xslt.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/nginx-module-xslt.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/nginx-module-xslt.postinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/nginx.conffiles",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/nginx.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/nginx.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/nginx.postinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/nginx.postrm",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/nginx.preinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/nginx.prerm",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/openssl.conffiles",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/openssl.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/openssl.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/openssl.postinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/passwd.conffiles",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/passwd.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/passwd.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/passwd.postinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/passwd.preinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/perl-base.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/perl-base.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/readline-common.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/readline-common.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/readline-common.postinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/readline-common.postrm",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/sed.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/sed.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/sensible-utils.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/sensible-utils.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/sysvinit-utils.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/sysvinit-utils.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/tar.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/tar.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/tar.postinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/tar.prerm",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/tzdata.config",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/tzdata.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/tzdata.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/tzdata.postinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/tzdata.postrm",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/tzdata.templates",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/ucf.conffiles",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/ucf.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/ucf.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/ucf.postinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/ucf.postrm",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/ucf.preinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/ucf.templates",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/util-linux.conffiles",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/util-linux.list",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/util-linux.md5sums",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/util-linux.postinst",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/util-linux.postrm",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/info/util-linux.prerm",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    },
    {
      "name": "/var/lib/dpkg/status",
      "version": null,
      "type": "file",
      "origin": null,
      "maintainer": null,
      "licenses": [],
      "vulnerabilities": []
    }
  ],
  "remediation": {
    "steps": [
      "Update vulnerable packages to their latest versions",
      "Review and resolve license compliance issues",
      "Implement proper secrets management practices",
      "Consider using minimal base images",
      "Regularly scan your containers for new vulnerabilities"
    ],
    "upgrade_recommendations": [],
    "config_suggestions": [
      "Avoid running containers as root",
      "Use multi-stage builds to reduce image size"
    ],
    "best_practices": [
      "Never hardcode secrets in Dockerfiles or environment variables",
      "Keep your base images updated",
      "Implement image signing for supply chain security"
    ]
  }
}